---
layout: post
title: 팀에게 애자일 조금씩 주입하기.
date: 2018-06-25 09:15:36 +0900
categories: ['agile', 'jira', 'scrum']
description: 애자일을 시작하려는 팀에게.
author: it2seiyon
---

## 개요
#### 많은 산업군에 IT 기술이 필요한 시대가 되었다. IT기술의 보유에 따라서 사업의 성공, 실패가 결정된다고 해도 과언이 아니다. 하지만 일하는 환경이나 프로세스는 사업혁명 이후로 많은 발전을 하지 못하고 있다. 공장의 근무시간은 제품의 생산률로 직결되는 단순한 구조라면, IT 기술은 많은 아이디어와 정신력을 요구한다. (.과 ,을 구분 못하여 디버깅에 어려움을 겪어봤다..)
#### 기존 프로세스와 방법론 보다 급변하는 시장의 변화에 민첩하게 적응하는 **애자일**에 대해서 알아보고 팀에게 조금씩 적용 시키는 방법을 소개해 보겠다. 

### 기존 방법론(폭포수 모델)
![폭포수모델]({{ "/assets/images/71/1-65tz1CLQni4BUs5UEHv9uA.png" | relative_url }})
#### [그림] https://ko.wikipedia.org/wiki/폭포수_모델
#### 소프트웨어 개발 방법론 중 대표적인 폭포수 모델은 분석, 설계, 구현, 테스트를 순차적으로 진행된다. 건축학에서 많은 영감을 얻었다고 한다.
#### 집을 지을 때 설계도면 대로 집을 짓는 방법과 비슷하다. 집은 설계도면 또는 모형으로 완성된 모습을 확인하고 확정하기 쉽다. 하지만 소프트웨어는 일부분은 Front-End로 확인하고 Back-End는 Text, Diagram으로 확인 할 수 있다.
#### 폭포수 모델은 초기 요구사항을 명확하게 할 수 있는 연구과제, 고정된 환경 프로젝트에 적합하다. 
#### 프로젝트 초기 요구사항은 위험 요소와 필요 기능을 모두 도출하기는 사실상 불가능하다. 따라서 프로젝트 중간에 요구사항이 수시로 변할 수 있는데 이를 수용, 협상하는 과정에서 개발 기간, 비용이 늘어난다.
> 테스트, 검수 단계에서 '어 이게 아닌데..' 최악의 대사가 누군가의 입에서 나온다. 야근시작이다...

![프로젝트..?]({{ "/assets/images/71/1_DYLGTNodpq9Fal-prB2rHg.png" | relative_url }})
#### 위 그림은 IT 프로젝트의 초기 요구사항의 불확실성, 복잡성에 대해서 각 담당자가 이해한 결과물을 보여준다. 나무에서 그네를 타고싶었던 고객은 의사소통의 불일치로 각 담당자의 이상한(?) 결과물을 보게된다.
#### 많은 프로젝트가 프로젝트 중 후반에 이러한 문제점을 확인한다. 프로그램은 복잡해 졌고 기능을 수정하기 위해 많은 비용을 지불해야 한다.(야근각)
#### 프로젝트 기간, 비용, 품질 3박자를 충족시키고 시장(고객)의 좋은 반응을 얻기 위해서는 어떻게 해야할까? 더불어 개발팀도 만족하는 방법이 있을까? 


## 애자일(Agile) 방법론
#### 소프트웨어 역사는 100년도 안되는 짧은 역사를 갖고있다. 90년대 후반까지의 소프트웨어 공학과 개발방법론은 장기간에 걸쳐 많은 사람들을 투입하고 충분한 비용을 투입하여 진행하는 다른 공학의 프로세스와 비슷한 맥락에서 진행됐다.
#### 하지만 소프트웨어는 유동적이고 개방적이며 요구사항의 변경에 따른 작업량을 예측하기 힘들다. 애자일 방법론은 예측하며 개발을 하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며 그때 그때 필요한 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발해 나가는 Adaptive style 이라고 할 수 있다.
#### 애자일 선언문의 일부분을 살펴보자.
> * 우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을 도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고있다. 
> * 이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다.
> * 공정과 도구보다 개인과 상호작용을
> * 포괄적인 문서보다 작동하는 소프트웨어를
> * 계약 협상보다 고객과의 협력을
> * 계획을 따르기보다 변화에 대응을 가치 있게 여긴다.

#### 선언문의 중심에는 사람이 있다. 당연한 이야기지만 사람을 위해 사람이 일을 한다. 일하는 사람을 위해 또 다른 사람들이 일을 한다. 사람이 사람한테 잘해주는 건 당연한 이야기다. 소프트웨어를 개발하면서 비난하거나 책임소지 때문에 몸을 움크리는 문화를 걷어내고 조직의 성공을 위해 서로 돕고 더 나은 방향으로 나아가야 한다. 

## 애자일 적용 대상
#### 1. 목표 달성을 위한 프로세스를 가지지 않고, 임기응변적인 소프트웨어 개발로 인해 혼란에 빠져있는 조직이다. 이러한 프로젝트 팀에게 있어 애자일 개발 프로세스는, 개선을 위한 좋은 힌트가 될 것이다. 애자일 개발 프로세스는 작고 쉽게 도입할 수 있으며, 그것에 들어가는 비용과 위험도 낮다.
#### 2. 이미 전통적인 소프트웨어 프로세스를 도입하고 있지만, 제대로 동작하지 않는(또는 프로세스 실시를 위한 오버헤드가 너무 커서 오히려 업무에 부담을 주고 있는) 조직이다. 프로세스의 도입은 조직의 문화를 바꾼다. 효과가 크면 클수록 조직문화에 대한 영향은 커지고, 도가 지나치게 되면 고유의 문화를 파괴해 버리기도 한다. 그러나 조직에 있어서 애자일 개발 프로세스는 좋은 결과를 가져다 줄 것이다. 또한 CMMI나 SPICE등의 인증을 얻으려고 하는 조직에서는 그들의 요구를 충족시킬 아이디어를 제공해 줄 수 있을 것이다.

## 팀원에게 애자일 조금씩 주입하기
#### '우리도 애자일 합시다!' 외치는 순간 사람들은 '지금 하는 것도 많은데 뭘 또해..', '귀찮아..' 등 반감을 가질 수 있다. 천천히 조금씩 주입해보자.
### 적절한 도구 선택
#### 조직의 문화를 바꾸거나 개선하기는 쉽지 않다. 마음, 의식에도 관성의 법칙이 적용되는데 기존 일하는 방식에 나도 모르게 젖어있다. 도구가 애자일 문화를 조금씩 주입하는데 도움이 된다. 도구를 도입할 때는 모든 기능을 사용하거나 몰라도 된다. 부담 갖지 말고 시작해보자.
#### 애자일의 의한, 애자일에 위해 만들어진 도구가 있다. **JIRA**

> 이름이 어색하다.. 개발팀이 고질라 영화를 좋아해서 코드네임에서 비롯됐다고 한다.

#### JIRA는 오프라인에서 애자일 팀의 활동과 보드들을 웹 서비스로 제공하는 솔루션이다. 쉽게 생각하자.

### JIRA로 To-Do List 작성하기
### 공유 문화 구축
### Daliy Scrum Meeting 작게 시작하기

## 끝 맺음



