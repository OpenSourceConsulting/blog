<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2018-06-25T18:36:29+09:00</updated><id>http://localhost:4000/blog/</id><title type="html">OpenSourceConsulting</title><subtitle>Technology sharing blog</subtitle><entry><title type="html">AT&amp;amp;T, 구글, 페이스북 - 데이터센터 아키텍처 고려사항</title><link href="http://localhost:4000/blog/2018/06/25/tistory-9.html" rel="alternate" type="text/html" title="AT&amp;T, 구글, 페이스북 - 데이터센터 아키텍처 고려사항" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-9</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-9.html">&lt;h4 id=&quot;오늘은-구글-페이스북-att에서-자신들의-데이터센터를-어떻게-만들어내고-있는지-한번-살펴보도록-하겠습니다-본-글은-jerry정명훈와-놀새최지웅가-2014년도-10월에-미국-달라스에서-있었던-sdnnfv에-컨퍼런스에-참석했던-내용을-설명하며-소프트웨어-데이터센터를-만들기-위한-네트워크에-대해서-알아봅니다-정명훈-이사는-오픈소스컨설팅에서-컨설팅-서비스-사업을-담당하고-계십니다-오늘-발표-내용은-sddc에-대한-부분-중-nfv에-대한-내용을-설명합니다-자-이제-시작해-볼까요-컨퍼런스에-가던-당시에-에볼라-바이러스가-텍사스에-환자가-나왔던-상태라-걱정이-조금-있었습니다-하지만-가는-것에-대해-주변분들은-바이러스-걱정-말고-총맞는-거라-걱정하라는-걱정을-해주셨습니다-부자에-거친-동네라는-이야기를-워낙에-많이-들어서-그런-것-같습니다-결과론적으로-sdnnfv-서밋은-저희에게-상당히-유익한-시간이-되었고-그-곳에서-나왔던-여러-가지-세션들이-있었는데-그-중-인상-깊었던-내용을-설명하겠습니다-우리가-들었던-세션-중-att-페이스북-구글발표-순서의-데이터센터-아키텍처-및-하부의-네트워크-구성에-대한-부분을-설명하는-세션이-있었습니다-이번에-진행했던-세미나에서-athena-spider에-대한-내용은-하단의-slideshare와-정명훈-이사의-꾀꼬리-같은-목소리가-담긴-mp3-파일을-같이-들어주시는-수고를-좀-해주셔야-합니다-저희가-녹화-장비가-없어-따로-국밥을-만들어-드려서-죄송합니다-이제-세-업체에-대한-요약을-진행해보도록-하겠습니다-1-att-att는-전세계-브랜드-가치-2위의-통신사입니다httpwwwddailycokrnewsarticlehtmlno118708-1위는-미국의-버라이즌이긴-하지만-엄청난-규모의-서비스를-자랑하고-있습니다-국내의-경우-kt가-30위-skt-33위-lgu가-58위-skb가-118위입니다-att가-가지고-있는-아픔은-현재-국내-통신사도-모두-가지고-있는-것들이라고-할-수-있습니다-그것은-바로-모바일의-등장과-함께-트래픽의-증가를-수용해야-하는데-수익은-늘지-않는다라는-문제입니다-즉-투자-비용-대비-회수율이-적으니-이익률이-줄어들게-되는-상황이-발생을-하게-된-것입니다-기존에-att는-자사의-통신망을-구축하기-위하여-많은-네트워크-업체로부터-장비들을-구매해야-했습니다-워낙-가격들이-고가인데다가-특화된-업체로부터-사니-비용이-엄청나게-많이-들어가는-영역-중의-하나이기도-합니다-att는-이를-개방형-표준-형태로-만들어서-경쟁을-통해-비용을-절감할-수-있는-방법을-모색을-하기-시작했습니다-초기-domain-10-모델을-통해-비용을-절감할-수-있도록-했다고-합니다-domain-20에서는-sdnnfv의-약진과-더불어-비용-절감과-동시에-대역폭을-늘리는-프로젝트를-수행하고-있다고-합니다-즉-현재의-상황을-domain-20이라는-이름의-공급망-관리-개방형-표준-네트워크-형태의-새로운-아키텍처로-변화시키고-있다고-합니다-domain-20-효율화의-목적은-sdnnfv를-모토로-하고-있으며-아키텍처를-표준화하고-있으며-장비-제공-업체를-관리하겠다는-목적이-가장-크다고-합니다--그림-domain-10-에서-domain-20으로--그림가상서비스로의-변화-2-페이스북-전세계-최대-sns---11억명의-사용자와-매일-72억명이-로그인을-수행하고-있으며-매일-47억건의-콘텐츠-추가-45억건의-좋아요가-발생하고-있다고-합니다-사실-그-숫자도-어마머마한-것이지만-재미있는-것-중-하나는-한-명의-엔지니어가-20000대의-서버를-관리하고-있다는-것입니다-이는-단순한-관리체계를-통해서는-절대-불가능한-숫자입니다-물리적으로-서버-설치부터-네트워크까지-한다는-것은-모두-자동화된-관리체계를-가지고-있기-때문에-가능하다고-발표했습니다-이를-위해-x86-서버-디자인을-직접-수행하고-있으며-랙의-tor에-대한-sdnnfv-컨트롤러를-직접-만들어-내부의-서버-간-통신에-대한-처리를-수행한다고-합니다-이후-구글에서도-나오는-이야기이지만-데이터센터간-east-west-트래픽이-엄청나게-증가하고-있는-상황에서-그러한-직접-설계-및-구현은-페이스북에-필수불가결한-요소가-되고-있다고-하며-마지막으로-인상깊었던-이야기-중의-하나는-아래와-같습니다-있는-것을-찾아서-잘-활용하고-없으면-우리가-만든다-3-구글-구글은-워낙-큰-업체이고-설명이-필요없습니다-수백만-대의-서버를-lxc기반으로-관리하고-있으며-네트워크-입장에서는-i-scale-아키텍처north-south-bound를-가지고-있으며-g-scale-아키텍처데이터센터간-아키텍처--east-west-traffic-또한-보유하고-있다고-합니다-구글은-현재는-데이터센터-내부간-트래픽이-전체의-80를-차지하고-있는-상태라고-합니다-구글의-경우-엄청난-네트워크-트래픽을-발생시키고-있는데-효율이-1만-떨어져도-엄청난-비용-손실이-발생한다고-합니다-이를-g-scale-아키텍처를-통해-트래픽을-데이터-센터로-적절하게-분산하는데-적절하게-분산한다는-의미는-특정-데이터센터의-자원이-남으면-데이터-처리를-가용률이-좋은-데이터센터로-전달하여-처리하는-구조를-사용을-의미합니다-심지어-전기요금이-싼-시간에는-해당-데이터센터로-데이터를-전송하여-처리하도록-아키텍처를-설계했다고-합니다-즉-데이터센터의-가용률을-최대로-만드는-것이-목표이며-구글의-데이터센터-pue는-11로-에너지-낭비를-10이하로-줄이며-그린아이티를-구현하고-있다고-자랑합니다-위의-세-가지-케이스를-살펴보면-현재-엄청난-데이터-센터를-운영하는-미국의-기업들이-가진-키워드가-있는데-이는-programmableautomation-orchestration-convergence로-요약할-수-있습니다-마지막-여담으로-점심시간-스탠딩-식사-중-att에-30년동안-근무하고-계시는-50대-중반의-엔지니어와-대화하는-일이-있었는데-그-분께서-하시는-말씀이-나는-평생-네트워크만-해왔다-요즘은-소프트웨어에-관심도-많다-지금은-당신소프트웨어-엔지니어과-내가네트워크-엔지니어-일을-나누어서-하지만-나중에는-그-경계가-없어질-것-같다고-하시네요-세미나와-athena-spider에-대한-자세한-설명은-아래의-슬라이드쉐어와-정명훈이사의-발표-녹음파일을-들어주십시오-세미나-발표-음성&quot;&gt;오늘은 구글, 페이스북, AT&amp;amp;T에서 자신들의 데이터센터를 어떻게 만들어내고 있는지 한번 살펴보도록 하겠습니다. 본 글은  Jerry(정명훈)와 놀새(최지웅)가 2014년도 10월에 미국 달라스에서 있었던 SDN/NFV에 컨퍼런스에 참석했던 내용을 설명하며 소프트웨어 데이터센터를 만들기 위한 네트워크에 대해서 알아봅니다.#### 정명훈 이사는 오픈소스컨설팅에서 컨설팅 서비스 사업을 담당하고 계십니다. 오늘 발표 내용은 SDDC에 대한 부분 중 NFV에 대한 내용을 설명합니다. #### 자, 이제 시작해 볼까요? 컨퍼런스에 가던 당시에 에볼라 바이러스가 텍사스에 환자가 나왔던 상태라 걱정이 조금 있었습니다. 하지만 가는 것에 대해 주변분들은 바이러스 걱정 말고 총맞는 거라 걱정(?)하라는 걱정을 해주셨습니다. 부자에 거친 동네라는 이야기를 워낙에 많이 들어서 그런 것 같습니다. #### 결과론적으로 SDN/NFV 서밋은 저희에게 상당히 유익한 시간이 되었고, 그 곳에서 나왔던 여러 가지 세션들이 있었는데 그 중 인상 깊었던 내용을 설명하겠습니다. 우리가 들었던 세션 중 AT&amp;amp;T, 페이스북, 구글(발표 순서)의 데이터센터 아키텍처 및 하부의 네트워크 구성에 대한 부분을 설명하는 세션이 있었습니다.#### 이번에 진행했던 세미나에서 Athena-Spider에 대한 내용은 하단의 SlideShare와 정명훈 이사의 꾀꼬리 같은 목소리가 담긴 MP3 파일을 같이 들어주시는 수고(?)를 좀 해주셔야 합니다. 저희가 녹화 장비가 없어 따로 국밥을 만들어 드려서 죄송합니다. #### 이제 세 업체에 대한 요약을 진행해보도록 하겠습니다. #### 1. AT&amp;amp;T#### AT&amp;amp;T는 전세계 브랜드 가치 2위의 통신사입니다.(http://www.ddaily.co.kr/news/article.html?no=118708) 1위는 미국의 버라이즌이긴 하지만 엄청난 규모의 서비스를 자랑하고 있습니다. 국내의 경우 KT가 30위, SKT 33위, LGU+가 58위, SKB가 118위입니다. #### AT&amp;amp;T가 가지고 있는 아픔은 현재 국내 통신사도 모두 가지고 있는 것들이라고 할 수 있습니다. 그것은 바로 모바일의 등장과 함께 트래픽의 증가를 수용해야 하는데, 수익은 늘지 않는다라는 문제입니다. 즉 투자 비용 대비 회수율이 적으니 이익률이 줄어들게 되는 상황이 발생을 하게 된 것입니다. #### 기존에 AT&amp;amp;T는 자사의 통신망을 구축하기 위하여 많은 네트워크 업체로부터 장비들을 구매해야 했습니다. 워낙 가격들이 고가인데다가 특화된 업체로부터 사니 비용이 엄청나게 많이 들어가는 영역 중의 하나이기도 합니다. AT&amp;amp;T는 이를 개방형 표준 형태로 만들어서 경쟁을 통해 비용을 절감할 수 있는 방법을 모색을 하기 시작했습니다. 초기 Domain 1.0 모델을 통해 비용을 절감할 수 있도록 했다고 합니다. #### Domain 2.0에서는 SDN/NFV의 약진과 더불어 비용 절감과 동시에 대역폭을 늘리는 프로젝트를 수행하고 있다고 합니다. 즉 현재의 상황을 Domain 2.0이라는 이름의 공급망 관리, 개방형 표준 네트워크 형태의 새로운 아키텍처로 변화시키고 있다고 합니다.#### Domain 2.0 효율화의 목적은 SDN/NFV를 모토로 하고 있으며, 아키텍처를 표준화하고 있으며 장비 제공 업체를 관리하겠다는 목적이 가장 크다고 합니다.#### &lt;img src=&quot;/blog/assets/images/9/domain-architecture.png&quot; alt=&quot;domain-architecture.png&quot; /&gt;#### [그림. Domain 1.0 에서 Domain 2.0으로]#### &lt;img src=&quot;/blog/assets/images/9/at_t.png&quot; alt=&quot;at_t.png&quot; /&gt;#### [그림.가상서비스로의 변화]#### 2. 페이스북#### 전세계 최대 SNS - 11억명의 사용자와 매일 7.2억명이 로그인을 수행하고 있으며, 매일 47억건의 콘텐츠 추가, 45억건의 좋아요가 발생하고 있다고 합니다. 사실 그 숫자도 어마머마한 것이지만 재미있는 것 중 하나는 한 명의 엔지니어가 20,000대의 서버를 관리하고 있다는 것입니다. 이는 단순한 관리체계를 통해서는 절대 불가능한 숫자입니다. 물리적으로 서버 설치부터 네트워크까지 한다는 것은 모두 자동화된 관리체계를 가지고 있기 때문에 가능하다고 발표했습니다. 이를 위해 X86 서버 디자인을 직접 수행하고 있으며, 랙의 TOR에 대한 SDN/NFV 컨트롤러를 직접 만들어 내부의 서버 간 통신에 대한 처리를 수행한다고 합니다. #### 이후 구글에서도 나오는 이야기이지만 데이터센터간 East-West 트래픽이 엄청나게 증가하고 있는 상황에서 그러한 직접 설계 및 구현은 페이스북에 필수불가결한 요소가 되고 있다고 하며, 마지막으로 인상깊었던 이야기 중의 하나는 아래와 같습니다.#### “있는 것을 찾아서 잘 활용하고 없으면 우리가 만든다”#### 3. 구글#### 구글은 워낙 큰 업체이고 설명이 필요없습니다, 수백만 대의 서버를 LXC기반으로 관리하고 있으며, 네트워크 입장에서는 I-Scale 아키텍처(North-South Bound)를 가지고 있으며, G-Scale 아키텍처(데이터센터간 아키텍처 – East-West Traffic) 또한 보유하고 있다고 합니다.#### 구글은 현재는 데이터센터 내부간 트래픽이 전체의 80%를 차지하고 있는 상태라고 합니다. 구글의 경우 엄청난 네트워크 트래픽을 발생시키고 있는데 효율이 1%만 떨어져도 엄청난 비용 손실이 발생한다고 합니다. 이를 G-Scale 아키텍처를 통해 트래픽을 데이터 센터로 적절하게 분산하는데, 적절하게 분산한다는 의미는 특정 데이터센터의 자원이 남으면 데이터 처리를 가용률이 좋은 데이터센터로 전달하여 처리하는 구조를 사용을 의미합니다. 심지어 전기요금이 싼 시간에는 해당 데이터센터로 데이터를 전송하여 처리하도록 아키텍처를 설계했다고 합니다.#### 즉 데이터센터의 가용률을 최대로 만드는 것이 목표이며, 구글의 데이터센터 PUE는 1.1로 에너지 낭비를 10%이하로 줄이며 그린아이티를 구현하고 있다고 자랑합니다. #### 위의 세 가지 케이스를 살펴보면 현재 엄청난 데이터 센터를 운영하는 미국의 기업들이 가진 키워드가 있는데 이는 “Programmable(Automation)”, “Orchestration”, “Convergence”로 요약할 수 있습니다. #### 마지막 여담으로 점심시간 스탠딩 식사 중 AT&amp;amp;T에 30년동안 근무하고 계시는 50대 중반의 엔지니어와 대화하는 일이 있었는데, 그 분께서 하시는 말씀이 “나는 평생 네트워크만 해왔다. 요즘은 소프트웨어에 관심도 많다. 지금은 당신(소프트웨어 엔지니어)과 내가(네트워크 엔지니어) 일을 나누어서 하지만 나중에는 그 경계가 없어질 것 같다”고 하시네요.#### 세미나와 Athena-Spider에 대한 자세한 설명은 아래의 슬라이드쉐어와 정명훈이사의 발표 녹음파일을 들어주십시오.#### 세미나 발표 음성: &lt;/h4&gt;

&lt;p&gt;rec_20141120-1554-NFV세미나-jerry.mp3&lt;/p&gt;

&lt;h4 id=&quot;sddcsoftware-defined-data-center에서-nfv의-역할과-관리도구-세미나-발표-자료--from-정명훈-jerry-jeong--공감sns신고&quot;&gt;SDDC(software defined data center)에서 NFV의 역할과 관리도구 (세미나 발표 자료)  from 정명훈 Jerry Jeong  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">오늘은 구글, 페이스북, AT&amp;amp;T에서 자신들의 데이터센터를 어떻게 만들어내고 있는지 한번 살펴보도록 하겠습니다. 본 글은  Jerry(정명훈)와 놀새(최지웅)가 2014년도 10월에 미국 달라스에서 있었던 SDN/NFV에 컨퍼런스에 참석했던 내용을 설명하며 소프트웨어 데이터센터를 만들기 위한 네트워크에 대해서 알아봅니다.#### 정명훈 이사는 오픈소스컨설팅에서 컨설팅 서비스 사업을 담당하고 계십니다. 오늘 발표 내용은 SDDC에 대한 부분 중 NFV에 대한 내용을 설명합니다. #### 자, 이제 시작해 볼까요? 컨퍼런스에 가던 당시에 에볼라 바이러스가 텍사스에 환자가 나왔던 상태라 걱정이 조금 있었습니다. 하지만 가는 것에 대해 주변분들은 바이러스 걱정 말고 총맞는 거라 걱정(?)하라는 걱정을 해주셨습니다. 부자에 거친 동네라는 이야기를 워낙에 많이 들어서 그런 것 같습니다. #### 결과론적으로 SDN/NFV 서밋은 저희에게 상당히 유익한 시간이 되었고, 그 곳에서 나왔던 여러 가지 세션들이 있었는데 그 중 인상 깊었던 내용을 설명하겠습니다. 우리가 들었던 세션 중 AT&amp;amp;T, 페이스북, 구글(발표 순서)의 데이터센터 아키텍처 및 하부의 네트워크 구성에 대한 부분을 설명하는 세션이 있었습니다.#### 이번에 진행했던 세미나에서 Athena-Spider에 대한 내용은 하단의 SlideShare와 정명훈 이사의 꾀꼬리 같은 목소리가 담긴 MP3 파일을 같이 들어주시는 수고(?)를 좀 해주셔야 합니다. 저희가 녹화 장비가 없어 따로 국밥을 만들어 드려서 죄송합니다. #### 이제 세 업체에 대한 요약을 진행해보도록 하겠습니다. #### 1. AT&amp;amp;T#### AT&amp;amp;T는 전세계 브랜드 가치 2위의 통신사입니다.(http://www.ddaily.co.kr/news/article.html?no=118708) 1위는 미국의 버라이즌이긴 하지만 엄청난 규모의 서비스를 자랑하고 있습니다. 국내의 경우 KT가 30위, SKT 33위, LGU+가 58위, SKB가 118위입니다. #### AT&amp;amp;T가 가지고 있는 아픔은 현재 국내 통신사도 모두 가지고 있는 것들이라고 할 수 있습니다. 그것은 바로 모바일의 등장과 함께 트래픽의 증가를 수용해야 하는데, 수익은 늘지 않는다라는 문제입니다. 즉 투자 비용 대비 회수율이 적으니 이익률이 줄어들게 되는 상황이 발생을 하게 된 것입니다. #### 기존에 AT&amp;amp;T는 자사의 통신망을 구축하기 위하여 많은 네트워크 업체로부터 장비들을 구매해야 했습니다. 워낙 가격들이 고가인데다가 특화된 업체로부터 사니 비용이 엄청나게 많이 들어가는 영역 중의 하나이기도 합니다. AT&amp;amp;T는 이를 개방형 표준 형태로 만들어서 경쟁을 통해 비용을 절감할 수 있는 방법을 모색을 하기 시작했습니다. 초기 Domain 1.0 모델을 통해 비용을 절감할 수 있도록 했다고 합니다. #### Domain 2.0에서는 SDN/NFV의 약진과 더불어 비용 절감과 동시에 대역폭을 늘리는 프로젝트를 수행하고 있다고 합니다. 즉 현재의 상황을 Domain 2.0이라는 이름의 공급망 관리, 개방형 표준 네트워크 형태의 새로운 아키텍처로 변화시키고 있다고 합니다.#### Domain 2.0 효율화의 목적은 SDN/NFV를 모토로 하고 있으며, 아키텍처를 표준화하고 있으며 장비 제공 업체를 관리하겠다는 목적이 가장 크다고 합니다.#### #### [그림. Domain 1.0 에서 Domain 2.0으로]#### #### [그림.가상서비스로의 변화]#### 2. 페이스북#### 전세계 최대 SNS - 11억명의 사용자와 매일 7.2억명이 로그인을 수행하고 있으며, 매일 47억건의 콘텐츠 추가, 45억건의 좋아요가 발생하고 있다고 합니다. 사실 그 숫자도 어마머마한 것이지만 재미있는 것 중 하나는 한 명의 엔지니어가 20,000대의 서버를 관리하고 있다는 것입니다. 이는 단순한 관리체계를 통해서는 절대 불가능한 숫자입니다. 물리적으로 서버 설치부터 네트워크까지 한다는 것은 모두 자동화된 관리체계를 가지고 있기 때문에 가능하다고 발표했습니다. 이를 위해 X86 서버 디자인을 직접 수행하고 있으며, 랙의 TOR에 대한 SDN/NFV 컨트롤러를 직접 만들어 내부의 서버 간 통신에 대한 처리를 수행한다고 합니다. #### 이후 구글에서도 나오는 이야기이지만 데이터센터간 East-West 트래픽이 엄청나게 증가하고 있는 상황에서 그러한 직접 설계 및 구현은 페이스북에 필수불가결한 요소가 되고 있다고 하며, 마지막으로 인상깊었던 이야기 중의 하나는 아래와 같습니다.#### “있는 것을 찾아서 잘 활용하고 없으면 우리가 만든다”#### 3. 구글#### 구글은 워낙 큰 업체이고 설명이 필요없습니다, 수백만 대의 서버를 LXC기반으로 관리하고 있으며, 네트워크 입장에서는 I-Scale 아키텍처(North-South Bound)를 가지고 있으며, G-Scale 아키텍처(데이터센터간 아키텍처 – East-West Traffic) 또한 보유하고 있다고 합니다.#### 구글은 현재는 데이터센터 내부간 트래픽이 전체의 80%를 차지하고 있는 상태라고 합니다. 구글의 경우 엄청난 네트워크 트래픽을 발생시키고 있는데 효율이 1%만 떨어져도 엄청난 비용 손실이 발생한다고 합니다. 이를 G-Scale 아키텍처를 통해 트래픽을 데이터 센터로 적절하게 분산하는데, 적절하게 분산한다는 의미는 특정 데이터센터의 자원이 남으면 데이터 처리를 가용률이 좋은 데이터센터로 전달하여 처리하는 구조를 사용을 의미합니다. 심지어 전기요금이 싼 시간에는 해당 데이터센터로 데이터를 전송하여 처리하도록 아키텍처를 설계했다고 합니다.#### 즉 데이터센터의 가용률을 최대로 만드는 것이 목표이며, 구글의 데이터센터 PUE는 1.1로 에너지 낭비를 10%이하로 줄이며 그린아이티를 구현하고 있다고 자랑합니다. #### 위의 세 가지 케이스를 살펴보면 현재 엄청난 데이터 센터를 운영하는 미국의 기업들이 가진 키워드가 있는데 이는 “Programmable(Automation)”, “Orchestration”, “Convergence”로 요약할 수 있습니다. #### 마지막 여담으로 점심시간 스탠딩 식사 중 AT&amp;amp;T에 30년동안 근무하고 계시는 50대 중반의 엔지니어와 대화하는 일이 있었는데, 그 분께서 하시는 말씀이 “나는 평생 네트워크만 해왔다. 요즘은 소프트웨어에 관심도 많다. 지금은 당신(소프트웨어 엔지니어)과 내가(네트워크 엔지니어) 일을 나누어서 하지만 나중에는 그 경계가 없어질 것 같다”고 하시네요.#### 세미나와 Athena-Spider에 대한 자세한 설명은 아래의 슬라이드쉐어와 정명훈이사의 발표 녹음파일을 들어주십시오.#### 세미나 발표 음성: </summary></entry><entry><title type="html">팀에게 애자일 조금씩 주입하기.</title><link href="http://localhost:4000/blog/agile/jira/scrum/2018/06/25/tistory-71.html" rel="alternate" type="text/html" title="팀에게 애자일 조금씩 주입하기." /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/agile/jira/scrum/2018/06/25/tistory-71</id><content type="html" xml:base="http://localhost:4000/blog/agile/jira/scrum/2018/06/25/tistory-71.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;h4 id=&quot;안녕하세요-오픈소스컨설팅-솔루션-설계팀-김세연입니다&quot;&gt;안녕하세요 오픈소스컨설팅 솔루션 설계팀 김세연입니다.&lt;/h4&gt;
&lt;p&gt;#### 저희는 기존 시스템을 오픈소스로 전환, 사용 지원하고 있습니다. 더 많은 내용은 www.osci.kr 에서 확인해 주세요.#### 고객에게 가치를 전달하는 IT 프로젝트는 무엇일까요? 고객의 요구사항을 기간 안에 구현하는 것일까요?#### &lt;img src=&quot;/blog/assets/images/71/1_DYLGTNodpq9Fal-prB2rHg.png&quot; alt=&quot;1_DYLGTNodpq9Fal-prB2rHg.png&quot; /&gt;#### 위 그림은 IT 프로젝트의 초기 요구사항의 불확실성, 복잡성에 대해서 각 담당자가 이해한 결과물을 보여줍니다. 사실 고객은 나무에서 타이어 그네를 타고 싶었습니다. 프로젝트가 끝날 때쯤에 알았다면 이미 늦었습니다.#### 프로젝트 기간, 비용, 품질 3박자를 충족시키고 시장(고객)의 반응이 좋을 때 성공했다고 생각이 듭니다. 여기서 한 가지 더 개발사도 만족할 때 최고의 성공이라고 생각합니다.#### 저는 프로젝트 성공에 대한 관점을 3가지로 봅니다.납기일에 가치있는 제품을 고객에게 전달시장또는 고객의 좋은 반응고객/수행사의 만족폭포수 모델(Waterfall model)의 문제점#### &lt;img src=&quot;/blog/assets/images/71/1-65tz1CLQni4BUs5UEHv9uA.png&quot; alt=&quot;1-65tz1CLQni4BUs5UEHv9uA.png&quot; /&gt;#### 참조 1. https://ko.wikipedia.org/wiki/폭포수_모델#### 폭포수 모델은 분석, 설계, 구현, 테스트를 순차적으로 진행 됩니다. 이 형태는 중간에 요구사항만 변경하지 않는다면 단계가 명확해서 관리가 쉽습니다.#### 하지만 초반에 요구사항을 모두 분석하기 어렵고, 고객은 실제 제품을 프로젝트 후반부에 가서야 확인할 수 있기 때문에 나중에 요구사항이 많이 변경되는 단점이 있습니다.#### 후반부에 납기 일정을 맞추기 위해 무리한 야근과 일정으로 품질은 낮아지고 결과가 안 좋아 지는 경우가 많습니다.#### 문제점을 정리하면 아래와 같습니다.프로젝트 초기 요구사항은 불확실하다.요구사항의 변경이 빈번하게 일어난다.QA단계에서 많은 수정사항이 일어난다.잦은 초과근무가 발생한다.품질은 낮아지고 유지보수 비용이 늘어난다.#### 그러면 어떻게 해야 할까요? 조금씩 개발해서 자주 고객에게 보여주면됩니다.#### 개발 대상, 범위, 시간은 팀, 고객 모두와 조율 되야합니다. PM 또는 스크럼 마스터의 할 일이 여기있습니다. 애자일(Agile) 무엇인가?#### 소프트웨어 역사는 100년도 안됩니다. 다른 학문에 비해 역사가 짧고 급변하고 있습니다. #### 90년대 후반까지의 소프트웨어 공학과 개발방법론은 장기간에 걸쳐 많은 사람들을 투입하고 충분한 비용을 투입하여 진행하는 다른 공학의 프로세스와 비슷한 맥락에서 진행되었습니다.#### 하지만 소프트웨어는 유동적이고 개방적고, 요구사항의 변경에 따른 작업량을 예측하기 힘들었습니다. #### 애자일은 예측하며 개발을 하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며#### 그때 그때 필요한 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발해 나가는 adaptive style 이라고 할 수 있습니다.#### 애자일 선언을 살펴보겠습니다.우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고있다. 이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다:공정과 도구보다 개인과 상호작용을포괄적인 문서보다 작동하는 소프트웨어를계약 협상보다 고객과의 협력을계획을 따르기보다 변화에 대응하기를가치 있게 여긴다. 이 말은, 왼쪽에 있는 것들도 가치가 있지만,우리는 오른쪽에 있는 것들에 더 높은 가치를 둔다는 것이다.#### 고객과 수행사 모두 애자일 선언에 대한 이해가 없으면 애자일 방법론을 적용하기가 어렵습니다.#### 처음에는 위 선언문이 어색할지 몰라도 시간이 흐르고 애자일 프로젝트를 수행하다보면#### 다른 시각으로 보이고 이해가 될 때가 있습니다. 저도 천천히 이해하고 있습니다 애자일 적용 대상#### 1. 목표 달성을 위한 프로세스를 가지지 않고, 임기응변적인 소프트웨어 개발로 인해 혼란에 빠져있는 조직이다. 이러한 프로젝트 팀에게 있어 애자일 개발 프로세스는, 개선을 위한 좋은 힌트가 될 것이다. 애자일 개발 프로세스는 작고 쉽게 도입할 수 있으며, 그것에 들어가는 비용과 위험도 낮다.#### 2. 이미 전통적인 소프트웨어 프로세스를 도입하고 있지만, 제대로 동작하지 않는(또는 프로세스 실시를 위한 오버헤드가 너무 커서 오히려 업무에 부담을 주고 있는) 조직이다. 프로세스의 도입은 조직의 문화를 바꾼다. 효과가 크면 클수록 조직문화에 대한 영향은 커지고, 도가 지나치게 되면 고유의 문화를 파괴해 버리기도 한다. 그러나 조직에 있어서 애자일 개발 프로세스는 좋은 결과를 가져다 줄 것이다. 또한 CMMI나 SPICE등의 인증을 얻으려고 하는 조직에서는 그들의 요구를 충족시킬 아이디어를 제공해 줄 수 있을 것이다.#### 참고. 위키#### 1번은 프로세스가 없고 2번은 전통적인 프로세스를 도입하고 있지만 제대로 동작하지 않는 조직입니다. 저는 1번, 2번 조직에서 작게 시작하는 방법을 제안 하겠습니다.팀원에게 애자일 조금씩 주입하기#### 조직 문화, Micro Service Architecture(MSA), 애자일, Devops 많은 방법이 있습니다. 이 세트가 다 같이 가면 좋겠지만. 나비의 작은 날갯짓처럼 작은 변화를 작은 팀부터 적응하시기를 제안합니다.#### 애자일 거부감이 있는 팀원이 있을 수 있습니다.내 일을 남에게 공유하기를 싫어함.지금 하고있는 일에 일이 더해진다고 느낌.#### 하지만 애자일 방법론을 잘 적용/적응하면 개발자들은 정시퇴근과 업무의 높은 만족도를 얻으면서 가치있는 소프트웨어를 얻을 수 있습니다.#### 애자일 선언 첫번째가 ‘개인과 상호작용에 가치 있게 여긴다’입니다. 그러기 위해서는 팀 커뮤니 케이션부터 개선하는 방법을 제안합니다.팀 커뮤니케이션 개선하기#### 전통적인 커뮤니케이션 채널은 리더 중심의 의사소통이 이루어졌습니다. 한명의 리더의 채널의 지연이 생기면 팀 전체의 의사결정이 지연됩니다.#### 하지만, 자기 조직화된 팀에서는 360도로 소통을 합니다.#### 관리자의 지시가 아니라 팀원이 스스로 해야 할 일을 계획하고 상호 협력하여 업무를 수행하는 팀의 형태를 자기 조직화된 팀이라고 합니다.#### 우리는 이런 팀을 만들어야합니다. 경직된 조직은 리더와 소통합니다.#### 다른 개발자와는 잡담은 하지만 일에 있어스는 소통이 잘 이루어지지 않습니다.#### 다른 개발자의 일을 잘 모르기 때문에 도와주고 싶어도 못도와 줍니다. 안다고 해도 선뜻 도와주기 쉽지 않습니다.#### 애자일 방법론의 일일 스크럼 회의(Daily Scrum Meeting)을 제안합니다.#### 일일 스크럼 미팅은 4개의 구성요소로 이루어져 있습니다.어제 한 일오늘 할 일리스크 공유전체상황 공유#### 일(work)에 대해서 기록/트레킹 하는 도구가 있으면 많은 도움이 됩니다. 저는 Atlassian JIRA를 추천합니다. JIRA는 애자일 프로젝트를 관리하는데 최적화 되어있습니다.#### 물론 비즈니스 팀, 전통적인 프로세스, 결재 프로세스등 JIRA를 통해 많은 도구를 통합하면서 줄일 수 있습니다.#### 리스크 및 전체상황을 문서로 공유할 때는 Atlassian Confluence를 추천합니다. Confluence는 Content 중심의 Pages를 협업에 최적화 되어있습니다.#### 일일 스크럼 Step by Step주최자가 공유 순서를 정한다.한 사람당 발언 시간을 5분을 넘지 않는다.(절충 되어야한다)발언 중 끈지않고 끼어들지 않는다.발언자는 JIRA, Confluence 또는 다른 도구를 참고하여 어제 한 일, 오늘 할 일, 리스크를 공유한다.모든 참여자의 발언이 끝나면 전체 상황을 공유한다.오늘 할 일이 무엇이지 모른다면 팀 리더와 또는 스크럼 마스터와 충분한 업무 공유 및 소통을 한다.#### 처음부터 잘하는 사람, 팀은 없습니다. 시행착오를 격으면서 소수의 인원과 함께 적용하시기를 바랍니다.#### 참여자 섭외가 힘드시면 인간적으로 부탁해 보세요  친한 동료들 부터 시작하셔서 성과를 다른 팀원들과 공유하세요.결론#### 이번 글에서는 전통적인 프로세스의 문제점을 해결하기 위해서 애자일 방법론 소개로 시작해서 팀 커뮤니케이션을 개선하기 위해서#### 일일 스크럼 회의를 제안했습니다.#### 하지만 지금의 일들이 정리가 안되면 내일일도 모르는 상황일 수 있습니다.#### 다음 글에서는 애자일 스크럼, 칸반으로 신규 프로젝트와 운영 프로젝트를#### 어떻게 하면 애자일 스럽게 진행하는지 소개해 보겠습니다. 공감sns신고&lt;/p&gt;</content><author><name>it2seiyon</name></author><summary type="html">Introduction 안녕하세요 오픈소스컨설팅 솔루션 설계팀 김세연입니다. #### 저희는 기존 시스템을 오픈소스로 전환, 사용 지원하고 있습니다. 더 많은 내용은 www.osci.kr 에서 확인해 주세요.#### 고객에게 가치를 전달하는 IT 프로젝트는 무엇일까요? 고객의 요구사항을 기간 안에 구현하는 것일까요?#### #### 위 그림은 IT 프로젝트의 초기 요구사항의 불확실성, 복잡성에 대해서 각 담당자가 이해한 결과물을 보여줍니다. 사실 고객은 나무에서 타이어 그네를 타고 싶었습니다. 프로젝트가 끝날 때쯤에 알았다면 이미 늦었습니다.#### 프로젝트 기간, 비용, 품질 3박자를 충족시키고 시장(고객)의 반응이 좋을 때 성공했다고 생각이 듭니다. 여기서 한 가지 더 개발사도 만족할 때 최고의 성공이라고 생각합니다.#### 저는 프로젝트 성공에 대한 관점을 3가지로 봅니다.납기일에 가치있는 제품을 고객에게 전달시장또는 고객의 좋은 반응고객/수행사의 만족폭포수 모델(Waterfall model)의 문제점#### #### 참조 1. https://ko.wikipedia.org/wiki/폭포수_모델#### 폭포수 모델은 분석, 설계, 구현, 테스트를 순차적으로 진행 됩니다. 이 형태는 중간에 요구사항만 변경하지 않는다면 단계가 명확해서 관리가 쉽습니다.#### 하지만 초반에 요구사항을 모두 분석하기 어렵고, 고객은 실제 제품을 프로젝트 후반부에 가서야 확인할 수 있기 때문에 나중에 요구사항이 많이 변경되는 단점이 있습니다.#### 후반부에 납기 일정을 맞추기 위해 무리한 야근과 일정으로 품질은 낮아지고 결과가 안 좋아 지는 경우가 많습니다.#### 문제점을 정리하면 아래와 같습니다.프로젝트 초기 요구사항은 불확실하다.요구사항의 변경이 빈번하게 일어난다.QA단계에서 많은 수정사항이 일어난다.잦은 초과근무가 발생한다.품질은 낮아지고 유지보수 비용이 늘어난다.#### 그러면 어떻게 해야 할까요? 조금씩 개발해서 자주 고객에게 보여주면됩니다.#### 개발 대상, 범위, 시간은 팀, 고객 모두와 조율 되야합니다. PM 또는 스크럼 마스터의 할 일이 여기있습니다. 애자일(Agile) 무엇인가?#### 소프트웨어 역사는 100년도 안됩니다. 다른 학문에 비해 역사가 짧고 급변하고 있습니다. #### 90년대 후반까지의 소프트웨어 공학과 개발방법론은 장기간에 걸쳐 많은 사람들을 투입하고 충분한 비용을 투입하여 진행하는 다른 공학의 프로세스와 비슷한 맥락에서 진행되었습니다.#### 하지만 소프트웨어는 유동적이고 개방적고, 요구사항의 변경에 따른 작업량을 예측하기 힘들었습니다. #### 애자일은 예측하며 개발을 하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며#### 그때 그때 필요한 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발해 나가는 adaptive style 이라고 할 수 있습니다.#### 애자일 선언을 살펴보겠습니다.우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고있다. 이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다:공정과 도구보다 개인과 상호작용을포괄적인 문서보다 작동하는 소프트웨어를계약 협상보다 고객과의 협력을계획을 따르기보다 변화에 대응하기를가치 있게 여긴다. 이 말은, 왼쪽에 있는 것들도 가치가 있지만,우리는 오른쪽에 있는 것들에 더 높은 가치를 둔다는 것이다.#### 고객과 수행사 모두 애자일 선언에 대한 이해가 없으면 애자일 방법론을 적용하기가 어렵습니다.#### 처음에는 위 선언문이 어색할지 몰라도 시간이 흐르고 애자일 프로젝트를 수행하다보면#### 다른 시각으로 보이고 이해가 될 때가 있습니다. 저도 천천히 이해하고 있습니다 애자일 적용 대상#### 1. 목표 달성을 위한 프로세스를 가지지 않고, 임기응변적인 소프트웨어 개발로 인해 혼란에 빠져있는 조직이다. 이러한 프로젝트 팀에게 있어 애자일 개발 프로세스는, 개선을 위한 좋은 힌트가 될 것이다. 애자일 개발 프로세스는 작고 쉽게 도입할 수 있으며, 그것에 들어가는 비용과 위험도 낮다.#### 2. 이미 전통적인 소프트웨어 프로세스를 도입하고 있지만, 제대로 동작하지 않는(또는 프로세스 실시를 위한 오버헤드가 너무 커서 오히려 업무에 부담을 주고 있는) 조직이다. 프로세스의 도입은 조직의 문화를 바꾼다. 효과가 크면 클수록 조직문화에 대한 영향은 커지고, 도가 지나치게 되면 고유의 문화를 파괴해 버리기도 한다. 그러나 조직에 있어서 애자일 개발 프로세스는 좋은 결과를 가져다 줄 것이다. 또한 CMMI나 SPICE등의 인증을 얻으려고 하는 조직에서는 그들의 요구를 충족시킬 아이디어를 제공해 줄 수 있을 것이다.#### 참고. 위키#### 1번은 프로세스가 없고 2번은 전통적인 프로세스를 도입하고 있지만 제대로 동작하지 않는 조직입니다. 저는 1번, 2번 조직에서 작게 시작하는 방법을 제안 하겠습니다.팀원에게 애자일 조금씩 주입하기#### 조직 문화, Micro Service Architecture(MSA), 애자일, Devops 많은 방법이 있습니다. 이 세트가 다 같이 가면 좋겠지만. 나비의 작은 날갯짓처럼 작은 변화를 작은 팀부터 적응하시기를 제안합니다.#### 애자일 거부감이 있는 팀원이 있을 수 있습니다.내 일을 남에게 공유하기를 싫어함.지금 하고있는 일에 일이 더해진다고 느낌.#### 하지만 애자일 방법론을 잘 적용/적응하면 개발자들은 정시퇴근과 업무의 높은 만족도를 얻으면서 가치있는 소프트웨어를 얻을 수 있습니다.#### 애자일 선언 첫번째가 ‘개인과 상호작용에 가치 있게 여긴다’입니다. 그러기 위해서는 팀 커뮤니 케이션부터 개선하는 방법을 제안합니다.팀 커뮤니케이션 개선하기#### 전통적인 커뮤니케이션 채널은 리더 중심의 의사소통이 이루어졌습니다. 한명의 리더의 채널의 지연이 생기면 팀 전체의 의사결정이 지연됩니다.#### 하지만, 자기 조직화된 팀에서는 360도로 소통을 합니다.#### 관리자의 지시가 아니라 팀원이 스스로 해야 할 일을 계획하고 상호 협력하여 업무를 수행하는 팀의 형태를 자기 조직화된 팀이라고 합니다.#### 우리는 이런 팀을 만들어야합니다. 경직된 조직은 리더와 소통합니다.#### 다른 개발자와는 잡담은 하지만 일에 있어스는 소통이 잘 이루어지지 않습니다.#### 다른 개발자의 일을 잘 모르기 때문에 도와주고 싶어도 못도와 줍니다. 안다고 해도 선뜻 도와주기 쉽지 않습니다.#### 애자일 방법론의 일일 스크럼 회의(Daily Scrum Meeting)을 제안합니다.#### 일일 스크럼 미팅은 4개의 구성요소로 이루어져 있습니다.어제 한 일오늘 할 일리스크 공유전체상황 공유#### 일(work)에 대해서 기록/트레킹 하는 도구가 있으면 많은 도움이 됩니다. 저는 Atlassian JIRA를 추천합니다. JIRA는 애자일 프로젝트를 관리하는데 최적화 되어있습니다.#### 물론 비즈니스 팀, 전통적인 프로세스, 결재 프로세스등 JIRA를 통해 많은 도구를 통합하면서 줄일 수 있습니다.#### 리스크 및 전체상황을 문서로 공유할 때는 Atlassian Confluence를 추천합니다. Confluence는 Content 중심의 Pages를 협업에 최적화 되어있습니다.#### 일일 스크럼 Step by Step주최자가 공유 순서를 정한다.한 사람당 발언 시간을 5분을 넘지 않는다.(절충 되어야한다)발언 중 끈지않고 끼어들지 않는다.발언자는 JIRA, Confluence 또는 다른 도구를 참고하여 어제 한 일, 오늘 할 일, 리스크를 공유한다.모든 참여자의 발언이 끝나면 전체 상황을 공유한다.오늘 할 일이 무엇이지 모른다면 팀 리더와 또는 스크럼 마스터와 충분한 업무 공유 및 소통을 한다.#### 처음부터 잘하는 사람, 팀은 없습니다. 시행착오를 격으면서 소수의 인원과 함께 적용하시기를 바랍니다.#### 참여자 섭외가 힘드시면 인간적으로 부탁해 보세요  친한 동료들 부터 시작하셔서 성과를 다른 팀원들과 공유하세요.결론#### 이번 글에서는 전통적인 프로세스의 문제점을 해결하기 위해서 애자일 방법론 소개로 시작해서 팀 커뮤니케이션을 개선하기 위해서#### 일일 스크럼 회의를 제안했습니다.#### 하지만 지금의 일들이 정리가 안되면 내일일도 모르는 상황일 수 있습니다.#### 다음 글에서는 애자일 스크럼, 칸반으로 신규 프로젝트와 운영 프로젝트를#### 어떻게 하면 애자일 스럽게 진행하는지 소개해 보겠습니다. 공감sns신고</summary></entry><entry><title type="html">Jira Project Administration</title><link href="http://localhost:4000/blog/2018/06/25/tistory-70.html" rel="alternate" type="text/html" title="Jira Project Administration" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-70</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-70.html">&lt;p&gt;[Jira Project Administration]이제 앞에서 열심히 설정했던 내용들을 사용해볼 시간입니다. 아이씐나이쯤되면 까먹으셨을테니 다시 캡처를 첨부해보면, 만들었던 Web Customer Support로 들어간 뒤, 하단의 Project Administration을 클릭합니다. &lt;img src=&quot;/blog/assets/images/70/0.png&quot; alt=&quot;0.png&quot; /&gt;그리고 다시 시작된 곶통.jpg 그럼 다음과 같은 화면이 나오며 좌측에 많이 본 듯한 메뉴가 존재합니다. (Subtask Templates의 경우 플러그인이 설치되어있기에 나타난 메뉴입니다)#### Summary: 우선 Summary부터 보시면 프로젝트의 설정 요약으로써, 해당 프로젝트가 어떤 설정들을 적용받고 있는지를 보여줍니다.#### &lt;img src=&quot;/blog/assets/images/70/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 우측의 Edit Proejct를 클릭 시, 해당 프로젝트의 이름, 키값, 프로젝트 아바타 등을 변경할 수있는 팝업창이 생성됩니다.#### &lt;img src=&quot;/blog/assets/images/70/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 옆의 Actions를 클릭 시 앞서 설명드렸듯이 프로젝트의 Software타입과 Business타입을 변경할 수 있는 메뉴와 #### 프로젝트 삭제, 인덱싱이 가능한 메뉴가 존재합니다. #### &lt;img src=&quot;/blog/assets/images/70/3.png&quot; alt=&quot;3.png&quot; /&gt;Issue types: 우측의 Actions를 누르면 Edit issue types과 Use a different scheme이 있는데, 여기서 Edit issue type을 누를 경우 해당 프로젝트가 적용받고 있는 Issue type scheme을 수정하도록 이동합니다. 이것이 이전 단계에서 모든 scheme들을 가능한 새로 만든 이유로써, 누군가 실수로 Default scheme을 수정할 경우 다른 모든 프로젝트도 영향을 받기 때문이죠. &lt;img src=&quot;/blog/assets/images/70/4.png&quot; alt=&quot;4.png&quot; /&gt;#### Use a different scheme을 클릭 후 앞서 잘 만들어둔 WCS Issue Type Scheme을 선택한 뒤 OK를 눌러줍니다.#### &lt;img src=&quot;/blog/assets/images/70/5.png&quot; alt=&quot;5.png&quot; /&gt;#### Workflows: Switch Scheme를 클릭 후 이 또한 잘 만들어둔 WCS Workflow Scheme로 바꿔줍니다.#### &lt;img src=&quot;/blog/assets/images/70/6.png&quot; alt=&quot;6.png&quot; /&gt;Screens / Fields: Issue type과 동일한 화면이므로 생략하겠습니다. Versions: Jira 이슈에 대해 간단한 버전관리를 할 수 있는 메뉴입니다. Version이나 다음에 나올 Component의 경우 필요에따라 사용하지 않아도 무방합니다.Version을 사용하기 전에 조건이 있는데,Project Type이 Software타입인지, Kanban이나 Scrum보드를 사용 중인지,Permission scheme에Administer Projects, Manage Sprint권한이 있는지 확인이 필요합니다. 우선 본 문서에서는 다음처럼 간단히 v1, v2의 버전 두 개를 추가해보겠습니다. #### &lt;img src=&quot;/blog/assets/images/70/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 이후, 스크린에 Fix Versions라는 필드를 추가한 뒤, 이슈를 v1에 추가해줍니다. #### 하나의 이슈에 대해 Fix version은 하나만 할당해야만 하는 점에 주의하세요. 그렇지않으면 이후 릴리즈 시 #### 이슈 갯수가 꼬여서 보이거나 기타 문제가 발생할 가능성이 있습니다.&lt;img src=&quot;/blog/assets/images/70/8.png&quot; alt=&quot;8.png&quot; /&gt;추가 후, Project의 Releases 메뉴를 확인 시 다음처럼 v1에 이슈가 한 개 들어간 것을 확인할 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/70/0.png&quot; alt=&quot;0.png&quot; /&gt;#### v1을 클릭 시 다음처럼 릴리즈 허브가 보여지며, 우측 상단의 Release를 클릭 시 팝업이 생성됩니다.&lt;/p&gt;

&lt;h4 id=&quot;-한-개의-덜-완료된-이슈에-대해-무시하고-릴리즈할-것인지-다음버전으로-넘길-것인지를-확인하며-여기서-넘길-것을-선택하고-릴리즈-시&quot;&gt;&lt;img src=&quot;/blog/assets/images/70/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 한 개의 덜 완료된 이슈에 대해 무시하고 릴리즈할 것인지, 다음버전으로 넘길 것인지를 확인하며 여기서 넘길 것을 선택하고 릴리즈 시,&lt;/h4&gt;

&lt;h4 id=&quot;-이렇게-v2로-해당-이슈가-넘어간-것을-확인할-수-있습니다-componenents-project와-issue사이에-논리적으로-하나의-단계를-두기-위해-사용하는-기능입니다쉽게-말해서-핸드폰-앱을-개발한다는-가정하에-앱-개발을-프로젝트로-두고component에-android와-iphone으로-구분하는-것을-생각하시면-됩니다-component또한-version과-마찬가지로-간단히-입력하여-추가가-가능하며-버전과-같은-조건은-필요하지-않습니다다음처럼-추가하시면-되며-default-assignee를-설정-시-이슈를-생성할-때-해당-component를-선택하면자동으로-해당-이슈의-assignee가-component-lead에게-할당되도록-설정할-수-있습니다-그리고-물론-이-또한-스크린에서-component필드를-추가해주어야합니다user-and-roles-권한관리를-조금-더-세분화할-때-사용하는-메뉴로-굳이-따지자면-그룹보다-한-단계-상위로-보시면됩니다물론-이-또한-반드시-사용해야하는-메뉴는-아닙니다우선-다음-화면에서-우측-상단의-edit-defaults를-눌러보시면-팝업창이-하나-생성됩니다-보시면-현재-프로젝트의-project-lead와-default-assignee를-변경할-수-있으며default-assignee를-project-lead로-설정-시담당자를-지정하지-않은-모든-이슈는-project-lead에게-할당됩니다마음에들지-않는-사람이-있다면-설정하여-메일-폭탄을-선물해보세요--그-옆의-add-users-to-role을-선택-시-다음처럼-role에-사용자나-그룹을-할당할-수-있으며-이-role은-jira-administrataion---system---project-roles에서-관리가능합니다--permissions--issue-security--notifications-앞서나온-issue-type과-설정방법이-같기에-생략합니다hipchat-integration-atlassian의-업무-sns솔루션인-hipchat과의-연동을-위한-메뉴입니다slack과의-기능상의-큰-차이는-없으나-대중성에서-밀린-비운의-툴이죠어차피-slack과의-연동-또한-플러그인으로-되므로-큰-의미는-없습니다만development-tools-atlassian의-타-솔루션인-bamboo-fisheye등과의-연동을-위한-메뉴입니다issue-collectors-jira-이슈에-대한-피드백을-받기위한-메뉴로-내부-jira계정을-이용하여-설정-시-만들어지는-html이나java-script코드를-타겟-웹사이트에-심어-피드백을-받을-수-있도록-설정하는-메뉴입니다마지막으로-위에서-적용한-설정을-검증해보도록-하겠습니다우선-task-이슈타입으로-이슈-생성-시-다음과-같이-기존-default스크린으로-많은-필드들이-보여집니다-그럼-이슈타입을-web-bug로-바꿔보면-어떨까요-보시다시피-시스템적으로-반드시-들어가는-proejct와issue-type을-제외하고-설정하였던-다섯가지의-필드만-보여지는-것을-확인할-수-있습니다필수값으로-변경하였었던-web-bug-browser-type도-잘-적용되고-있네요만들어진-이후-view-workflow를-확인-시-워크플로우-또한-새로-만든-워크플로우가-잘-적용됨을-확인할-수-있습니다-이로써-jira-설정에-대한-기본-가이드를-정리해보았습니다-이쯤되면-아시겠지만-딱히-어렵기보단-굉장히-귀찮은-작업입니다한-번-만들어두면-그-이후엔-나쁘지않으나-초기-세팅시에는-할-일이-꽤나-많죠뒤로-갈수록-재미없어지는-글을-읽으시느라-고생많으셨고-처음-jira를-접하고-관리하셔야하는-분들에게-도움이-되었으면-좋겠습니다언제가-될-지는-모르나-다음에-기회가-된다면confluence의-overview-및-설정도-작성해보도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/70/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 이렇게 v2로 해당 이슈가 넘어간 것을 확인할 수 있습니다.#### &lt;img src=&quot;/blog/assets/images/70/3.png&quot; alt=&quot;3.png&quot; /&gt;Componenents: Project와 Issue사이에 논리적으로 하나의 단계를 두기 위해 사용하는 기능입니다. 쉽게 말해서 핸드폰 앱을 개발한다는 가정하에 앱 개발을 프로젝트로 두고, Component에 Android와 Iphone으로 구분하는 것을 생각하시면 됩니다.  Component또한 Version과 마찬가지로 간단히 입력하여 추가가 가능하며, 버전과 같은 조건은 필요하지 않습니다. 다음처럼 추가하시면 되며, Default Assignee를 설정 시 이슈를 생성할 때 해당 Component를 선택하면 자동으로 해당 이슈의 Assignee가 Component Lead에게 할당되도록 설정할 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/70/4.png&quot; alt=&quot;4.png&quot; /&gt;그리고 물론 이 또한 스크린에서 Component필드를 추가해주어야합니다.&lt;img src=&quot;/blog/assets/images/70/5.png&quot; alt=&quot;5.png&quot; /&gt;User and roles: 권한관리를 조금 더 세분화할 때 사용하는 메뉴로,  굳이 따지자면 그룹보다 한 단계 상위로 보시면됩니다.물론 이 또한 반드시 사용해야하는 메뉴는 아닙니다. 우선 다음 화면에서 우측 상단의 Edit defaults를 눌러보시면 팝업창이 하나 생성됩니다. #### &lt;img src=&quot;/blog/assets/images/70/6.png&quot; alt=&quot;6.png&quot; /&gt;보시면 현재 프로젝트의 Project Lead와 Default Assignee를 변경할 수 있으며, Default Assignee를 Project Lead로 설정 시 담당자를 지정하지 않은 모든 이슈는 Project Lead에게 할당됩니다. 마음에들지 않는 사람이 있다면 설정하여 메일 폭탄을 선물해보세요#### &lt;img src=&quot;/blog/assets/images/70/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 그 옆의 Add users to role을 선택 시 다음처럼 role에 사용자나 그룹을 할당할 수 있으며, 이 role은#### Jira Administrataion - System - Project roles에서 관리가능합니다.#### &lt;img src=&quot;/blog/assets/images/70/8.png&quot; alt=&quot;8.png&quot; /&gt;#### Permissions / Issue Security / Notifications: 앞서나온 issue type과 설정방법이 같기에 생략합니다. HipChat integration: Atlassian의 업무 SNS솔루션인 Hipchat과의 연동을 위한 메뉴입니다. Slack과의 기능상의 큰 차이는 없으나 대중성에서 밀린 비운의 툴이죠. 어차피 slack과의 연동 또한 플러그인으로 되므로 큰 의미는 없습니다만…Development tools: Atlassian의 타 솔루션인 Bamboo, Fisheye등과의 연동을 위한 메뉴입니다. Issue collectors: Jira 이슈에 대한 피드백을 받기위한 메뉴로, 내부 Jira계정을 이용하여 설정 시 만들어지는 html이나java script코드를 타겟 웹사이트에 심어 피드백을 받을 수 있도록 설정하는 메뉴입니다. 마지막으로 위에서 적용한 설정을 검증해보도록 하겠습니다. 우선 Task 이슈타입으로 이슈 생성 시, 다음과 같이 기존 Default스크린으로 많은 필드들이 보여집니다. #### &lt;img src=&quot;/blog/assets/images/70/9.png&quot; alt=&quot;9.png&quot; /&gt;그럼 이슈타입을 Web Bug로 바꿔보면 어떨까요? 보시다시피 시스템적으로 반드시 들어가는 Proejct와Issue Type을 제외하고 설정하였던 다섯가지의 필드만 보여지는 것을 확인할 수 있습니다. 필수값으로 변경하였었던 Web Bug Browser Type도 잘 적용되고 있네요. 만들어진 이후 View Workflow를 확인 시 워크플로우 또한 새로 만든 워크플로우가 잘 적용됨을 확인할 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/70/10.png&quot; alt=&quot;10.png&quot; /&gt;이로써, Jira 설정에 대한 기본 가이드를 정리해보았습니다. 이쯤되면 아시겠지만 딱히 어렵기보단 굉장히 귀찮은 작업입니다. 한 번 만들어두면 그 이후엔 나쁘지않으나 초기 세팅시에는 할 일이 꽤나 많죠. 뒤로 갈수록 재미없어지는 글을 읽으시느라 고생많으셨고, 처음 Jira를 접하고 관리하셔야하는 분들에게 도움이 되었으면 좋겠습니다. 언제가 될 지는 모르나, 다음에 기회가 된다면 Confluence의 Overview 및 설정도 작성해보도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">[Jira Project Administration]이제 앞에서 열심히 설정했던 내용들을 사용해볼 시간입니다. 아이씐나이쯤되면 까먹으셨을테니 다시 캡처를 첨부해보면, 만들었던 Web Customer Support로 들어간 뒤, 하단의 Project Administration을 클릭합니다. 그리고 다시 시작된 곶통.jpg 그럼 다음과 같은 화면이 나오며 좌측에 많이 본 듯한 메뉴가 존재합니다. (Subtask Templates의 경우 플러그인이 설치되어있기에 나타난 메뉴입니다)#### Summary: 우선 Summary부터 보시면 프로젝트의 설정 요약으로써, 해당 프로젝트가 어떤 설정들을 적용받고 있는지를 보여줍니다.#### #### 우측의 Edit Proejct를 클릭 시, 해당 프로젝트의 이름, 키값, 프로젝트 아바타 등을 변경할 수있는 팝업창이 생성됩니다.#### #### 그리고 옆의 Actions를 클릭 시 앞서 설명드렸듯이 프로젝트의 Software타입과 Business타입을 변경할 수 있는 메뉴와 #### 프로젝트 삭제, 인덱싱이 가능한 메뉴가 존재합니다. #### Issue types: 우측의 Actions를 누르면 Edit issue types과 Use a different scheme이 있는데, 여기서 Edit issue type을 누를 경우 해당 프로젝트가 적용받고 있는 Issue type scheme을 수정하도록 이동합니다. 이것이 이전 단계에서 모든 scheme들을 가능한 새로 만든 이유로써, 누군가 실수로 Default scheme을 수정할 경우 다른 모든 프로젝트도 영향을 받기 때문이죠. #### Use a different scheme을 클릭 후 앞서 잘 만들어둔 WCS Issue Type Scheme을 선택한 뒤 OK를 눌러줍니다.#### #### Workflows: Switch Scheme를 클릭 후 이 또한 잘 만들어둔 WCS Workflow Scheme로 바꿔줍니다.#### Screens / Fields: Issue type과 동일한 화면이므로 생략하겠습니다. Versions: Jira 이슈에 대해 간단한 버전관리를 할 수 있는 메뉴입니다. Version이나 다음에 나올 Component의 경우 필요에따라 사용하지 않아도 무방합니다.Version을 사용하기 전에 조건이 있는데,Project Type이 Software타입인지, Kanban이나 Scrum보드를 사용 중인지,Permission scheme에Administer Projects, Manage Sprint권한이 있는지 확인이 필요합니다. 우선 본 문서에서는 다음처럼 간단히 v1, v2의 버전 두 개를 추가해보겠습니다. #### #### 이후, 스크린에 Fix Versions라는 필드를 추가한 뒤, 이슈를 v1에 추가해줍니다. #### 하나의 이슈에 대해 Fix version은 하나만 할당해야만 하는 점에 주의하세요. 그렇지않으면 이후 릴리즈 시 #### 이슈 갯수가 꼬여서 보이거나 기타 문제가 발생할 가능성이 있습니다.추가 후, Project의 Releases 메뉴를 확인 시 다음처럼 v1에 이슈가 한 개 들어간 것을 확인할 수 있습니다. #### #### v1을 클릭 시 다음처럼 릴리즈 허브가 보여지며, 우측 상단의 Release를 클릭 시 팝업이 생성됩니다.</summary></entry><entry><title type="html">Jira 설정_9(Schemes)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-69.html" rel="alternate" type="text/html" title="Jira 설정_9(Schemes)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-69</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-69.html">&lt;h4 id=&quot;드디어-마지막인-scheme부분입니다-앞서-나왔던-field-scheme이라던가-screen-scheme들도-있기에-조금-더-정확히-쓰자면-issue-security-permission-notification-scheme입니다만-제목으론-조금-길어서-scheme으로-적었습니다-그럼-issue탭-설정의-마지막을-적어보겠습니다issue-security-schemes-생성된-이슈들에-대해서-볼-수-있는-권한을-설정하는-메뉴입니다일반적으로-많이-사용하는-메뉴는-아니지만-설명은-하고-넘어가야겠죠우선-add-issue-security-scheme를-클릭하여-다음처럼-test-issue-security-scheme을-생성합니다--그리고-우측의-security-levels를-클릭-후-다음처럼-test-a와-test-b레벨을-만들어줍니다--그리고-우측의-add를-클릭하여-해당-레벨에-포함될-사용자-그룹-role을-설정합니다위와-같이-설정이-완료되었다면-앞서-time-tracking과-linked-issue를-추가하였듯이스크린에-security-level필드를-추가하여-레벨을-설정합니다이후-해당-이슈는-이슈레벨에-맞는-사용자에게만-보여지게됩니다만약-해당-기능이-잘-동작하지-않는다면-이후-설명드릴-permission-schemes의-set-issue-security부분을-확인해보세요notificaiton-schemes-이름에서도-감이오듯이-메일-설정에-관련된-부분입니다정확하게는-메일-서버가-구성되어있다는-전제하에-어떤-상태일-때-메일을-발송할지를-지정하는-곳이죠기본적으론-default-notification-scheme을-사용하며-필요할-경우-add-notification-scheme을-클릭하여-각-프로젝트별로-생성합니다보통-프로젝트별로-사용자나-그룹이-다르기에따로-만들어서-사용하는-편이-좋습니다다음과-같이-새로-만들면이런-화면이-나타나며-만들어집니다-각-이벤트에-대해-우측-add를-클릭하여-사용자나-그룹-role등을-지정하면되고이벤트-자체의-추가가-필요한-경우-한참-앞에서-나왔던-jira-administration---system---events-메뉴에서-가능합니다&quot;&gt;드디어 마지막인 Scheme부분입니다. #### 앞서 나왔던 Field scheme이라던가 screen scheme들도 있기에 조금 더 정확히 쓰자면#### Issue security, Permission, Notification Scheme입니다만, 제목으론 조금 길어서 scheme으로 적었습니다. #### 그럼 Issue탭 설정의 마지막을 적어보겠습니다. Issue security schemes: 생성된 이슈들에 대해서 볼 수 있는 권한을 설정하는 메뉴입니다. 일반적으로 많이 사용하는 메뉴는 아니지만, 설명은 하고 넘어가야겠죠.우선 Add issue Security Scheme를 클릭하여 다음처럼 Test Issue Security Scheme을 생성합니다. #### &lt;img src=&quot;/blog/assets/images/69/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 그리고 우측의 Security Levels를 클릭 후 다음처럼 Test A와 Test B레벨을 만들어줍니다.#### &lt;img src=&quot;/blog/assets/images/69/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 우측의 Add를 클릭하여 해당 레벨에 포함될 사용자, 그룹, Role을 설정합니다. &lt;img src=&quot;/blog/assets/images/69/3.png&quot; alt=&quot;3.png&quot; /&gt;위와 같이 설정이 완료되었다면, 앞서 Time Tracking과 Linked Issue를 추가하였듯이, 스크린에 Security Level필드를 추가하여 레벨을 설정합니다. 이후 해당 이슈는 이슈레벨에 맞는 사용자에게만 보여지게됩니다. (만약 해당 기능이 잘 동작하지 않는다면, 이후 설명드릴 Permission schemes의 Set Issue Security부분을 확인해보세요)&lt;img src=&quot;/blog/assets/images/69/4.png&quot; alt=&quot;4.png&quot; /&gt;Notificaiton schemes: 이름에서도 감이오듯이, 메일 설정에 관련된 부분입니다. 정확하게는 메일 서버가 구성되어있다는 전제하에, 어떤 상태일 때 메일을 발송할지를 지정하는 곳이죠. 기본적으론 Default Notification Scheme을 사용하며, 필요할 경우 Add Notification Scheme을 클릭하여 각 프로젝트별로 생성합니다. 보통 프로젝트별로 사용자나 그룹이 다르기에 따로 만들어서 사용하는 편이 좋습니다. 다음과 같이 새로 만들면, &lt;img src=&quot;/blog/assets/images/69/5.png&quot; alt=&quot;5.png&quot; /&gt;이런 화면이 나타나며 만들어집니다. 각 이벤트에 대해 우측 Add를 클릭하여 사용자나 그룹, Role등을 지정하면되고, 이벤트 자체의 추가가 필요한 경우, 한참 앞에서 나왔던 Jira Administration - System - Events 메뉴에서 가능합니다.&lt;/h4&gt;

&lt;h4 id=&quot;permission-schemes-드디어-마지막으로-권한관리-메뉴입니다-다시-한-번-상기시켜드리자면-이-메뉴는-프로젝트별로-적용되는-내용으로jira-전체에-대한-권한은jira-administration---system---global-permission에서-설정가능합니다&quot;&gt;&lt;img src=&quot;/blog/assets/images/69/6.png&quot; alt=&quot;6.png&quot; /&gt;Permission schemes: 드디어 마지막으로 권한관리 메뉴입니다. 다시 한 번 상기시켜드리자면 이 메뉴는 프로젝트별로 적용되는 내용으로Jira 전체에 대한 권한은 Jira Administration - System - Global Permission에서 설정가능합니다.&lt;/h4&gt;

&lt;p&gt;다음처럼 빠르게 하나 만드시면,&lt;img src=&quot;/blog/assets/images/69/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 대략 이런식으로 Notification scheme처럼 비슷한 화면이 나타나며 우측 Edit로 권한을 부여하시면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;보통-jira-software버전을-설치-시-default-permission-scheme과-default-software-permission-scheme이-나뉘어져있는데default-permission-scheme의-경우-assignable-users-권한이-jira-developers로-되어있기에가끔-business타입으로-프로젝트를-생성-시-assignee에-타-유저가-검색되지-않는-경우가-있으므로-바꿔주는-것을-권장드립니다그리고-필자는-귀찮아서-전부-없애고-하나로-통일했다고-합니다-여기까지-진행하시느라-고생많으셨으며-다음에서는-여태-설정했던-내용들을-실제-project에-적용하는-것을-진행해보겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/69/9.png&quot; alt=&quot;9.png&quot; /&gt;보통 Jira Software버전을 설치 시, Default Permission Scheme과 Default Software Permission Scheme이 나뉘어져있는데 Default Permission Scheme의 경우 Assignable Users 권한이 jira-developers로 되어있기에 가끔 Business타입으로 프로젝트를 생성 시 Assignee에 타 유저가 검색되지 않는 경우가 있으므로 바꿔주는 것을 권장드립니다.그리고 필자는 귀찮아서 전부 없애고 하나로 통일했다고 합니다#### 여기까지 진행하시느라 고생많으셨으며, 다음에서는 여태 설정했던 내용들을 #### 실제 Project에 적용하는 것을 진행해보겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">드디어 마지막인 Scheme부분입니다. #### 앞서 나왔던 Field scheme이라던가 screen scheme들도 있기에 조금 더 정확히 쓰자면#### Issue security, Permission, Notification Scheme입니다만, 제목으론 조금 길어서 scheme으로 적었습니다. #### 그럼 Issue탭 설정의 마지막을 적어보겠습니다. Issue security schemes: 생성된 이슈들에 대해서 볼 수 있는 권한을 설정하는 메뉴입니다. 일반적으로 많이 사용하는 메뉴는 아니지만, 설명은 하고 넘어가야겠죠.우선 Add issue Security Scheme를 클릭하여 다음처럼 Test Issue Security Scheme을 생성합니다. #### #### 그리고 우측의 Security Levels를 클릭 후 다음처럼 Test A와 Test B레벨을 만들어줍니다.#### #### 그리고 우측의 Add를 클릭하여 해당 레벨에 포함될 사용자, 그룹, Role을 설정합니다. 위와 같이 설정이 완료되었다면, 앞서 Time Tracking과 Linked Issue를 추가하였듯이, 스크린에 Security Level필드를 추가하여 레벨을 설정합니다. 이후 해당 이슈는 이슈레벨에 맞는 사용자에게만 보여지게됩니다. (만약 해당 기능이 잘 동작하지 않는다면, 이후 설명드릴 Permission schemes의 Set Issue Security부분을 확인해보세요)Notificaiton schemes: 이름에서도 감이오듯이, 메일 설정에 관련된 부분입니다. 정확하게는 메일 서버가 구성되어있다는 전제하에, 어떤 상태일 때 메일을 발송할지를 지정하는 곳이죠. 기본적으론 Default Notification Scheme을 사용하며, 필요할 경우 Add Notification Scheme을 클릭하여 각 프로젝트별로 생성합니다. 보통 프로젝트별로 사용자나 그룹이 다르기에 따로 만들어서 사용하는 편이 좋습니다. 다음과 같이 새로 만들면, 이런 화면이 나타나며 만들어집니다. 각 이벤트에 대해 우측 Add를 클릭하여 사용자나 그룹, Role등을 지정하면되고, 이벤트 자체의 추가가 필요한 경우, 한참 앞에서 나왔던 Jira Administration - System - Events 메뉴에서 가능합니다.</summary></entry><entry><title type="html">Jira 설정_8(Time Tracking / Resolution / Priority)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-68.html" rel="alternate" type="text/html" title="Jira 설정_8(Time Tracking / Resolution / Priority)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-68</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-68.html">&lt;p&gt;Time tracking: Jira Issue에서 Time Tracking기능을 사용할지 여부를 결정하는 메뉴입니다.만약 필드에 Time Tracking을 사용하도록 설정하였다면, 이슈를 생성 시 다음과 같이 시간을 설정할 수 있는 필드가 생기며예를 들어 3일짜리 일을 생성할 경우 3d를 입력 후 생성합니다. #### &lt;img src=&quot;/blog/assets/images/68/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 그럼 생성된 이슈의 우측에 이렇게 3일이 표시됩니다. &lt;img src=&quot;/blog/assets/images/68/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 시간을 기록하기 위해선 Sub-Task를 만드는 것처럼 이슈의 More에서 Log Work를 클릭하면 됩니다.  #### &lt;img src=&quot;/blog/assets/images/68/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 하루 일했다는 가정으로 1d를 입력 후 Log를 클릭하면, #### &lt;img src=&quot;/blog/assets/images/68/3.png&quot; alt=&quot;3.png&quot; /&gt;이렇게 시간이 계산되는 것을 볼 수 있습니다. 눈치채셨겠지만, 자동으론 안됩니다. 물론 이를 자동화해주는 플러그인도 있겠지만, 기본적으론 되지않지요… 또한 사용자가 입력하는 방식이기에 필요하면 악용하기도 쉽습니다. (1시간 일하고 10시간 일했다고 기록한다던가)따라서 이 기능은 참조하는 정도지, 이것을 업무평가의 절대적인 지표로 쓰기에는 적합하지 않습니다. 무엇보다 Jira에 익숙한 사용자조차도 이걸 입력하는 것은 굉장히 귀찮아요. &lt;img src=&quot;/blog/assets/images/68/4.png&quot; alt=&quot;4.png&quot; /&gt;Issueu linking: Jira Issue에서 Issue linking기능을 사용할지 여부를 결정하는 메뉴입니다. 추가로 필요한 link 타입을 추가하거나 삭제할 수도 있죠. 우선 이 link가 무엇인지 설명드리자면 이슈간의 연결을 나타내는 것으로써, 해당 이슈가 다른 어떤 이슈와 연관되어있는지 혹은 다른 이슈에 의해 진행이 되지 않는지 등을 표시할 수 있습니다. 이 또한 Time Tracking처럼 Linked Issue 필드가 설정되어있을 때 이슈 생성 시 보여지게되는데 다음과 같이 is blocked by를 선택 후 이슈를 생성 시 이슈의 상세 페이지에 해당 이슈가 어떤 이슈에 의해 일이 진행되지 않는지를 표시합니다. &lt;img src=&quot;/blog/assets/images/68/5.png&quot; alt=&quot;5.png&quot; /&gt;&lt;img src=&quot;/blog/assets/images/68/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;#### 그리고 해당 이슈를 클릭해보면, 이렇게 해당 이슈가 다른 이슈의 진행을 막고있음을 자동으로 표시하게되죠.&lt;img src=&quot;/blog/assets/images/68/7.png&quot; alt=&quot;7.png&quot; /&gt;#### Statuses: Jira의 스테이터스를 추가합니다. 현재 Jira에 존재하는 상태들을 보여주며 추가의 경우 앞서나왔던 워크플로우내에서 #### Status를 추가하는 것과 같은 내용이므로 넘어가겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;resolution-jira의-필드-중-시스템적으로-설정된-필드-중-하나입니다-기본적으로-jira에서는-진행-중인-일을-끝낼-때in-progress---done으로의-상태-변경-해당-필드가-포함된-스크린을-띄우도록-하는데이-때-해당-이슈가-어떤-방식으로-끝났는지를-선택하게되죠다음처럼-해당-이슈가-수정되었는지-수정되지는-않았지만-끝내야만-하는-경우라던지-중복된-이슈라던지-등을-선택하여차후-해당-이슈가-어떻게-끝났는지를-확인할-수-있게하는-필드입니다priorities-이슈의-긴급도를-설정하는-필드입니다-이-또한-resolution처럼-시스템필드이며-필요에-따라단계를-더-세분화하거나-간소화할-수-있습니다기본은-5단계이며-보통-3단계-정도로-쓰는게-수월합니다많이-만들어봐야-어차피-다들-본인-이슈는-다-highest로-만들거든요-3단계도-마찬가지긴-하지만--다음은-드디어-이-설정의-마지막인-scheme들issue-security-permission-notification에-관련하여-적어보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/68/9.PNG&quot; alt=&quot;9.PNG&quot; /&gt;Resolution: Jira의 필드 중 시스템적으로 설정된 필드 중 하나입니다. 기본적으로 Jira에서는 진행 중인 일을 끝낼 때(In Progress -&amp;gt; Done으로의 상태 변경) 해당 필드가 포함된 스크린을 띄우도록 하는데, 이 때 해당 이슈가 어떤 방식으로 끝났는지를 선택하게되죠. 다음처럼 해당 이슈가 수정되었는지, 수정되지는 않았지만 끝내야만 하는 경우라던지, 중복된 이슈라던지 등을 선택하여 차후 해당 이슈가 어떻게 끝났는지를 확인할 수 있게하는 필드입니다. &lt;img src=&quot;/blog/assets/images/68/8.png&quot; alt=&quot;8.png&quot; /&gt;Priorities: 이슈의 긴급도를 설정하는 필드입니다. 이 또한 Resolution처럼 시스템필드이며, 필요에 따라 단계를 더 세분화하거나 간소화할 수 있습니다.기본은 5단계이며, 보통 3단계 정도로 쓰는게 수월합니다.많이 만들어봐야 어차피 다들 본인 이슈는 다 Highest로 만들거든요. 3단계도 마찬가지긴 하지만…#### &lt;img src=&quot;/blog/assets/images/68/10.PNG&quot; alt=&quot;10.PNG&quot; /&gt;#### 다음은 드디어 이 설정의 마지막인 Scheme들(Issue Security, Permission, Notification)에 관련하여 적어보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Time tracking: Jira Issue에서 Time Tracking기능을 사용할지 여부를 결정하는 메뉴입니다.만약 필드에 Time Tracking을 사용하도록 설정하였다면, 이슈를 생성 시 다음과 같이 시간을 설정할 수 있는 필드가 생기며예를 들어 3일짜리 일을 생성할 경우 3d를 입력 후 생성합니다. #### #### 그럼 생성된 이슈의 우측에 이렇게 3일이 표시됩니다. #### 시간을 기록하기 위해선 Sub-Task를 만드는 것처럼 이슈의 More에서 Log Work를 클릭하면 됩니다.  #### #### 그리고 하루 일했다는 가정으로 1d를 입력 후 Log를 클릭하면, #### 이렇게 시간이 계산되는 것을 볼 수 있습니다. 눈치채셨겠지만, 자동으론 안됩니다. 물론 이를 자동화해주는 플러그인도 있겠지만, 기본적으론 되지않지요… 또한 사용자가 입력하는 방식이기에 필요하면 악용하기도 쉽습니다. (1시간 일하고 10시간 일했다고 기록한다던가)따라서 이 기능은 참조하는 정도지, 이것을 업무평가의 절대적인 지표로 쓰기에는 적합하지 않습니다. 무엇보다 Jira에 익숙한 사용자조차도 이걸 입력하는 것은 굉장히 귀찮아요. Issueu linking: Jira Issue에서 Issue linking기능을 사용할지 여부를 결정하는 메뉴입니다. 추가로 필요한 link 타입을 추가하거나 삭제할 수도 있죠. 우선 이 link가 무엇인지 설명드리자면 이슈간의 연결을 나타내는 것으로써, 해당 이슈가 다른 어떤 이슈와 연관되어있는지 혹은 다른 이슈에 의해 진행이 되지 않는지 등을 표시할 수 있습니다. 이 또한 Time Tracking처럼 Linked Issue 필드가 설정되어있을 때 이슈 생성 시 보여지게되는데 다음과 같이 is blocked by를 선택 후 이슈를 생성 시 이슈의 상세 페이지에 해당 이슈가 어떤 이슈에 의해 일이 진행되지 않는지를 표시합니다. #### 그리고 해당 이슈를 클릭해보면, 이렇게 해당 이슈가 다른 이슈의 진행을 막고있음을 자동으로 표시하게되죠.#### Statuses: Jira의 스테이터스를 추가합니다. 현재 Jira에 존재하는 상태들을 보여주며 추가의 경우 앞서나왔던 워크플로우내에서 #### Status를 추가하는 것과 같은 내용이므로 넘어가겠습니다.</summary></entry><entry><title type="html">Jira 설정_7(Field)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-67.html" rel="alternate" type="text/html" title="Jira 설정_7(Field)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-67</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-67.html">&lt;p&gt;Custom fields: 커스텀 필드를 클릭 시 현재 Jira에서 사용 중인 수정가능한 모든 필드들을 보여줍니다. 보시면 대충 아시겠지만 커스텀필드는 스크린에서 보여지는 필드들이며, 필요한 필드가 있을 경우 추가가 가능합니다. 필드 중엔 Locked로 잠겨있는 것들이 존재하는데 이는 시스템이나 플러그인에서 사용 중이며, 지워질 경우 Jira에 영향이 갈 만한 것들을 임의로 Jira에서 잠궈둔 것들입니다. 삭제하려면 시스템적으로 수정하여야하며 Locked 상태로 두어도 괜찮으니 무시하셔도 좋습니다. 그럼 여기선 다소 억지스럽지만 Web Bug 브라우저를 고를 Web Bug Browser Type 필드를 만들어보죠.우측 상단의 Add Cutom Field를 클릭 시 필드 타입을 고를 수 있는 팝업이 생성됩니다. 실제론 그냥 Text Field를 사용하여 입력받겠지만, 재미를 위해 샘플이니 Select List(multiple choices)를 선택한 뒤 Next를 눌러줍니다. #### &lt;img src=&quot;/blog/assets/images/67/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 이름과 옵션들을 기입 후 Create로 완료합니다.&lt;/p&gt;

&lt;h4 id=&quot;-그럼-이렇게-창이-하나-뜨게-되는데-지금-만든-필드를-기존의-스크린에-추가할지-여부를-묻는-것으로-web-bug-default-screen에-추가해줍니다&quot;&gt;&lt;img src=&quot;/blog/assets/images/67/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 그럼 이렇게 창이 하나 뜨게 되는데, 지금 만든 필드를 기존의 스크린에 추가할지 여부를 묻는 것으로,#### Web Bug Default Screen에 추가해줍니다.&lt;/h4&gt;

&lt;h4 id=&quot;-만약-브라우저-타입에-새로운-것을-추가하고-싶을-경우-다음처럼-우측-톱니바퀴모양을-클릭-후-configure를-통해-변경해주시면-됩니다-field-configuration-현재-있는-필드들을-어떤-필드를-사용할지-고를-수-있는-메뉴입니다-스크린에서-보여지는-필드들은-이-필드-설정을-기반으로하므로-이-필드설정에서-숨기거나-필수값을-설정할-경우-스크린에도-그대로-반영됩니다여기까지-읽어오셨다면-이제-익숙하시겠죠-add-field-configuration을-눌러준-뒤-새로-만들어줍니다필요할-경우-각각의-필드에-대해-전부-설정해주시면-됩니다만-이전과-같이-귀찮으므로-생략하고web-bug-browser-type의-값을-필수값으로-변경하는-것만-적용해보겠습니다다음-그림과-같이-web-bug-brower-type에서-required를-눌러주면-적용되며-글자가-optional로-변경됩니다상태는-둘-중-하나이므로-현재-optional일-경우-실제론-required가-적용되고-있다는-의미죠--field-configuration-schemes-앞서-만든-field-configuration을-적용하기-위해-scheme을-만듭니다-굳이-캡처를-계속-하는-이유는-이름을-정하는데-있어서-가능한-명시적으로-표시하도록-가이드하기-위함이므로-실제-사용-시-귀찮더라도-잘-적어주시는-편이-좋습니다-그럼-또-익숙한-어디선가-본-듯한-화면이-나옵니다--스크린때처럼-associate-an-issue-type-with-a-field-configuration을-클릭-후-web-bug-타입에-대해-해당-필드설정을-사용하도록-설정한-뒤-add를-클릭합니다-이로써-필드설정까지-완료되었으며-다음에는-time-tracking부터-priority까지-적도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/67/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 만약, 브라우저 타입에 새로운 것을 추가하고 싶을 경우 다음처럼 우측 톱니바퀴모양을 클릭 후 Configure를 통해 변경해주시면 됩니다.&lt;img src=&quot;/blog/assets/images/67/3.png&quot; alt=&quot;3.png&quot; /&gt;#### Field configuration: 현재 있는 필드들을 어떤 필드를 사용할지 고를 수 있는 메뉴입니다. #### 스크린에서 보여지는 필드들은 이 필드 설정을 기반으로하므로, 이 필드설정에서 숨기거나 필수값을 설정할 경우 #### 스크린에도 그대로 반영됩니다. 여기까지 읽어오셨다면 이제 익숙하시겠죠? Add Field Configuration을 눌러준 뒤 새로 만들어줍니다. &lt;img src=&quot;/blog/assets/images/67/4.png&quot; alt=&quot;4.png&quot; /&gt;필요할 경우 각각의 필드에 대해 전부 설정해주시면 됩니다만, 이전과 같이 귀찮으므로 생략하고 Web Bug Browser Type의 값을 필수값으로 변경하는 것만 적용해보겠습니다. 다음 그림과 같이 Web Bug Brower Type에서 Required를 눌러주면 적용되며 글자가 Optional로 변경됩니다. 상태는 둘 중 하나이므로, 현재 Optional일 경우 실제론 Required가 적용되고 있다는 의미죠. #### &lt;img src=&quot;/blog/assets/images/67/5.png&quot; alt=&quot;5.png&quot; /&gt;#### Field configuration schemes: 앞서 만든 Field configuration을 적용하기 위해 scheme을 만듭니다. #### 굳이 캡처를 계속 하는 이유는 이름을 정하는데 있어서 가능한 명시적으로 표시하도록 가이드하기 위함이므로 #### 실제 사용 시 귀찮더라도 잘 적어주시는 편이 좋습니다.&lt;img src=&quot;/blog/assets/images/67/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 그럼 또 익숙한 어디선가 본 듯한 화면이 나옵니다.#### &lt;img src=&quot;/blog/assets/images/67/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 스크린때처럼 Associate an Issue Type with a Field Configuration을 클릭 후 #### Web Bug 타입에 대해 해당 필드설정을 사용하도록 설정한 뒤 Add를 클릭합니다. &lt;img src=&quot;/blog/assets/images/67/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 이로써 필드설정까지 완료되었으며, 다음에는 Time Tracking부터 Priority까지 적도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Custom fields: 커스텀 필드를 클릭 시 현재 Jira에서 사용 중인 수정가능한 모든 필드들을 보여줍니다. 보시면 대충 아시겠지만 커스텀필드는 스크린에서 보여지는 필드들이며, 필요한 필드가 있을 경우 추가가 가능합니다. 필드 중엔 Locked로 잠겨있는 것들이 존재하는데 이는 시스템이나 플러그인에서 사용 중이며, 지워질 경우 Jira에 영향이 갈 만한 것들을 임의로 Jira에서 잠궈둔 것들입니다. 삭제하려면 시스템적으로 수정하여야하며 Locked 상태로 두어도 괜찮으니 무시하셔도 좋습니다. 그럼 여기선 다소 억지스럽지만 Web Bug 브라우저를 고를 Web Bug Browser Type 필드를 만들어보죠.우측 상단의 Add Cutom Field를 클릭 시 필드 타입을 고를 수 있는 팝업이 생성됩니다. 실제론 그냥 Text Field를 사용하여 입력받겠지만, 재미를 위해 샘플이니 Select List(multiple choices)를 선택한 뒤 Next를 눌러줍니다. #### #### 이름과 옵션들을 기입 후 Create로 완료합니다.</summary></entry><entry><title type="html">Jira 설정_6(Screen)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-66.html" rel="alternate" type="text/html" title="Jira 설정_6(Screen)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-66</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-66.html">&lt;p&gt;Screen: 스크린을 클릭 시 뭔가 더럽게 많은 내용이 뜨는 것을 보실 수 있는데, 일단 스크린이란 말 그대로 화면입니다.  여기서 화면이란 다음처럼 이슈를 생성 시 보여지는 팝업 창 그 자체라고 생각하시면됩니다. 이 팝업창을 보시면 아시겠지만, 뭔가 필드(Summary, Due Date등)가 굉장히 많이 있는 것을 확인할 수 있으며,스크린은 해당 필드들을 화면에서 숨기거나 보여주고 싶은 필드를 설정하는 등의 설정입니다. #### &lt;img src=&quot;/blog/assets/images/66/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 앞서 해왔듯이 우측 상단의 Add Screen버튼을 클릭하여 다음과 같이 새로운 스크린을 하나 추가합니다.&lt;img src=&quot;/blog/assets/images/66/1.png&quot; alt=&quot;1.png&quot; /&gt;그럼 아무것도 없는 화면이 나오며, 하단의 Select Field를 눌러서 다음처럼 기본적으로 필요한 몇 가지를 설정해줍니다.&lt;img src=&quot;/blog/assets/images/66/2.png&quot; alt=&quot;2.png&quot; /&gt;Screen schemes: Scheme을 추가하기 전에 한 가지 짚고 넘어가야할 것이 있는데 Screen, Screen schemes, Issue type screen schemes의 세 가지의 관계에 대해서입니다. 앞의 이슈타입과 워크플로우와는 다르게 스크린과 이후 나올 필드의 경우 세 가지로 나뉘어있는데, 스크린은 앞에서 보신 바와 같이 팝업창 그 자체라고 보시면됩니다. 그럼 Screen schemes와 Issue type screen schemes의 차이는 무엇인가인데, Screen schemes은 해당 scheme을 사용 시 Create, Edit, View 시에 각각 어떤 스크린이 기본적으로 보여질 것인지 Issue type screen schemes은 각 이슈타입별로 어떤 Screen schemes을 사용할 것인지입니다. 차후 프로젝트설정에서는 Issue type screen schemes을 선택하게됩니다.  설명을 들을 때는 쉽지만 실제로 적용하려하면 꽤나 헷갈리는 부분이 되기에 몇 번의 연습이 필요합니다. (본인도 자주 헷갈림)백문이불여일타라고, 다음과 같이 scheme도 추가해줍니다. &lt;img src=&quot;/blog/assets/images/66/3.png&quot; alt=&quot;3.png&quot; /&gt;그럼 다음과 같이 scheme 생성되며, 기본 스크린으로는 Web Bug Default Screen을 사용함을 알 수 있습니다. 여기서의 기본이란 해당 scheme을 사용 시 모든 보여지는 스크린을 Web Bug Default Screen으로 하겠다는 의미이며, 만약 이슈 생성, 수정, 뷰의 화면을 전부 다르게 하고싶을 경우 우측상단의 Associate an Issue Operation with a Screen을 클릭하여 다른 스크린을 할당해줍니다. 물론 본 문서에서는 귀찮으므로 생략합니다. #### &lt;img src=&quot;/blog/assets/images/66/4.png&quot; alt=&quot;4.png&quot; /&gt;Issue tpye Screen schemes: 해당 Scheme에 대해선 앞에서 설명드렸으므로 바로 만들어봅니다. 다만, Screen Scheme을 기본을 Web Bug Screen Scheme으로 둘 경우 Web Bug타입과 다른 타입과의 비교가 되지않으므로 Default Screen Scheme을 할당해줍니다.  &lt;img src=&quot;/blog/assets/images/66/5.png&quot; alt=&quot;5.png&quot; /&gt;그럼 이와 같은 화면이 나오며, 우린 Web Bug타입에 대해 다른 스크린을 써야하므로 우측 상단의 Associate an Issue Type with a Screen Scheme을 클릭합니다.#### &lt;img src=&quot;/blog/assets/images/66/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 그리고 이걸 이렇게 추가하여 Add를 눌러주시면…&lt;img src=&quot;/blog/assets/images/66/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 이렇게 추가되며, Web Bug 이슈타입엔 Web Bug용 스크린을, 그 외엔 기본 Jira 스크린을 사용하도록 설정이 완료됩니다.&lt;/p&gt;

&lt;h4 id=&quot;-다음은-필드-설정에-대해-기술하도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/66/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 다음은 필드 설정에 대해 기술하도록하겠습니다. 공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Screen: 스크린을 클릭 시 뭔가 더럽게 많은 내용이 뜨는 것을 보실 수 있는데, 일단 스크린이란 말 그대로 화면입니다.  여기서 화면이란 다음처럼 이슈를 생성 시 보여지는 팝업 창 그 자체라고 생각하시면됩니다. 이 팝업창을 보시면 아시겠지만, 뭔가 필드(Summary, Due Date등)가 굉장히 많이 있는 것을 확인할 수 있으며,스크린은 해당 필드들을 화면에서 숨기거나 보여주고 싶은 필드를 설정하는 등의 설정입니다. #### #### 앞서 해왔듯이 우측 상단의 Add Screen버튼을 클릭하여 다음과 같이 새로운 스크린을 하나 추가합니다.그럼 아무것도 없는 화면이 나오며, 하단의 Select Field를 눌러서 다음처럼 기본적으로 필요한 몇 가지를 설정해줍니다.Screen schemes: Scheme을 추가하기 전에 한 가지 짚고 넘어가야할 것이 있는데 Screen, Screen schemes, Issue type screen schemes의 세 가지의 관계에 대해서입니다. 앞의 이슈타입과 워크플로우와는 다르게 스크린과 이후 나올 필드의 경우 세 가지로 나뉘어있는데, 스크린은 앞에서 보신 바와 같이 팝업창 그 자체라고 보시면됩니다. 그럼 Screen schemes와 Issue type screen schemes의 차이는 무엇인가인데, Screen schemes은 해당 scheme을 사용 시 Create, Edit, View 시에 각각 어떤 스크린이 기본적으로 보여질 것인지 Issue type screen schemes은 각 이슈타입별로 어떤 Screen schemes을 사용할 것인지입니다. 차후 프로젝트설정에서는 Issue type screen schemes을 선택하게됩니다.  설명을 들을 때는 쉽지만 실제로 적용하려하면 꽤나 헷갈리는 부분이 되기에 몇 번의 연습이 필요합니다. (본인도 자주 헷갈림)백문이불여일타라고, 다음과 같이 scheme도 추가해줍니다. 그럼 다음과 같이 scheme 생성되며, 기본 스크린으로는 Web Bug Default Screen을 사용함을 알 수 있습니다. 여기서의 기본이란 해당 scheme을 사용 시 모든 보여지는 스크린을 Web Bug Default Screen으로 하겠다는 의미이며, 만약 이슈 생성, 수정, 뷰의 화면을 전부 다르게 하고싶을 경우 우측상단의 Associate an Issue Operation with a Screen을 클릭하여 다른 스크린을 할당해줍니다. 물론 본 문서에서는 귀찮으므로 생략합니다. #### Issue tpye Screen schemes: 해당 Scheme에 대해선 앞에서 설명드렸으므로 바로 만들어봅니다. 다만, Screen Scheme을 기본을 Web Bug Screen Scheme으로 둘 경우 Web Bug타입과 다른 타입과의 비교가 되지않으므로 Default Screen Scheme을 할당해줍니다.  그럼 이와 같은 화면이 나오며, 우린 Web Bug타입에 대해 다른 스크린을 써야하므로 우측 상단의 Associate an Issue Type with a Screen Scheme을 클릭합니다.#### #### 그리고 이걸 이렇게 추가하여 Add를 눌러주시면…#### 이렇게 추가되며, Web Bug 이슈타입엔 Web Bug용 스크린을, 그 외엔 기본 Jira 스크린을 사용하도록 설정이 완료됩니다.</summary></entry><entry><title type="html">Jira 설정_5(Workflow)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-65.html" rel="alternate" type="text/html" title="Jira 설정_5(Workflow)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-65</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-65.html">&lt;p&gt;Workflow: 워크플로우는 앞에서 프로젝트 생성 시 잠깐 보셨을텐데, 일반적으로 사용하는 프로세스와 같은 의미라고 생각하시면 됩니다. 예를 들어 현실에서의 결재라인이죠. 아시다시피, 프로세스는 각 업무별로 진행되는 과정이 다릅니다. 기획팀 내부의 일을 처리하는데 개발팀의 프로세스를 탈 필요가 없는 것처럼요. 이에 따라 각 이슈타입별로 다른 워크플로우를 설정할 수 있게되어있습니다. 다음 그림과 같이, 프로젝트를 생성 시 각 프로젝트별로 기본적으로 워크플로우가 따로 생성되어지는 것을 확인할 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/65/0.png&quot; alt=&quot;0.png&quot; /&gt;보시면 현재 사용하고 있는 워크플로우, 마지막 수정일자, 할당되어있는 scheme, 워크플로우의 단계(상태레벨이 몇 개인지), 워크플로우 수정이 있습니다. View를 눌러보시면 다음과 같이 해당 워크플로우가 어떻게 동작하는지를 확인할 수 있죠. Diagram 형태로도, Text형태로도 볼 수 있으며 필요 시 잘 구성된 워크플로우를 Export하여 타 시스템에서도 써먹을 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/65/1.png&quot; alt=&quot;1.png&quot; /&gt;본제로 돌아와서, 앞서 만든 WCS(Web Customer Support)프로젝트에 새로운 워크플로우를 추가해보겠습니다. 우측 상단의 Add Workflow를 클릭 시 다음과 같은 팝업이 생성되며, 이름을 지정 후 Add를 클릭합니다. 안타깝게도 여기선 한글은 지원하지 않으므로 영어로 만드셔야하며, 차후 워크플로우가 늘어날 경우 보기에 어려워지므로 반드시 이름을 구분이 쉽도록 명확히 지정하셔야합니다. 본 문서에서는 앞에서 만든 Web Bug타입의 워크플로우를 생성할 것이므로 다음과 같이 만들어보겠습니다.&lt;img src=&quot;/blog/assets/images/65/3.png&quot; alt=&quot;3.png&quot; /&gt;그럼 다음과 같이 아주 심플한 워크플로우가 생성됩니다.&lt;img src=&quot;/blog/assets/images/65/4.png&quot; alt=&quot;4.png&quot; /&gt;상태가 오픈만 있으므로, Fix라는 상태를 하나 생성해봅니다. 방법은 Add status를 클릭하면되며, 기존에 존재하는 상태를 선택하거나 새로운 상태를 생성할 수 있습니다. Fixed의 경우 없었던 상태이므로 다음처럼 new status라는 내용이 나오며 엔터키로 입력 후 Add를 클릭합니다. &lt;img src=&quot;/blog/assets/images/65/5.png&quot; alt=&quot;5.png&quot; /&gt;#### 그럼 다음과 같이 다시 팝업이 생성되며, 카테고리를 지정하도록 나옵니다. Fixed의 경우 Done으로 분류될 것이기에 #### Done으로 선택 후 Create를 눌러줍니다.안타깝지만 카테고리의 경우, 시스템에 하드코딩되어있는 부분이기에 간단히 추가는 어려우며 본 문서에서는 넘어가겠습니다. (필요 시 구글신에게 물어보세요)&lt;img src=&quot;/blog/assets/images/65/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 아무튼 만들어지면 뭔가 오른쪽에 빨간색 느낌표와 함께 워닝이 뜹니다. #### 이는 해당 스테이터스로 이동할 수 있는 연결이 없다는 의미인데 여기서 Add Transition을 눌러주셔도 되고 다음과 같이 스테이터스에 마우스를 올릴 시 나타나는 원형에서 드래그하여 타 스테이터스로 이동 시 새로운 팝업이 생성됩니다. &lt;img src=&quot;/blog/assets/images/65/7.png&quot; alt=&quot;7.png&quot; /&gt;&lt;img src=&quot;/blog/assets/images/65/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 위처럼 어떤 상태로부터 어떤 상태로 이동할 것인지, 그리고 그 이름은 무엇이 될 것인지를 지정합니다. #### 여기선 open에서 fixed상태로 이동할 것이므로 간단히 fix라고 하겠습니다. Screen의 경우, 상태를 Open에서 Fixed로 이동할 때 특정 팝업창을 띄울 것인지 여부를 정하는 내용으로Screen은 이 다음에 설명드릴 내용으므로 여기선 기본인 None으로 설정합니다. 그럼 이렇게 Transition이 추가됩니다. &lt;img src=&quot;/blog/assets/images/65/10.png&quot; alt=&quot;10.png&quot; /&gt;샘플 워크플로우이기도 하고 상태가 많으면 귀찮으므로 이 워크플로우를 사용하도록 하고 넘어가도록 하겠습니다. 농담도 들어있었지만 실제로 새로 Jira를 도입 시 워크플로우를 최대한 간소화하는 것은 굉장히 중요합니다. 처음에 의욕이 앞서서 많은 복잡다단한 절차를 만들어도, 실제 사용자들이 사용하기엔 어렵고 불편하기에 접근이 어렵기 때문이죠. 반드시 필요한 절차가 아닐 경우, 사용에 익숙해진 이후에 도입해도 늦지 않습니다. Workflow Schemes: 앞에서 만든 워크플로우를 써먹기 위해선 이 Scheme을 지정해야합니다. Workflow scheme도 워크플로우와 같이 프로젝트 생성 시 기본적으로 생성됩니다. 필요 시 우측 상단의 Add Workflow Scheme버튼을 눌러서 새로 생성이 가능합니다만, Workflow와 다른 점은 여러 개를 만들어봐야 실제로 사용할 것은 하나라는 점을 상기하셔야합니다. 앞에서도 설명드렸지만, 결국 Jira의 프로젝트 설정이란, 여기서 만들어진 Scheme들에 Associate되는 형태로써 한 번에 하나의 Scheme설정만 적용받기 때문이죠. 따라서 원래는 새로운 Scheme을 추가할 필요는 없지만, 그래도 처음 사용자를 위한 문서이니 한 번 추가해보겠습니다. Add Workflow Scheme버튼을 클릭 후 다음처럼 새로운 Scheme을 생성합니다. &lt;img src=&quot;/blog/assets/images/65/11.png&quot; alt=&quot;11.png&quot; /&gt;#### 그럼 이런 화면이 나오며, 해당 워크플로우 이름이 마음에 안들 경우 수정할 수도 있습니다. 워크플로우를 추가하기 위해, Add Workflow를 클릭 후 Add Existing을 클릭해줍니다. #### &lt;img src=&quot;/blog/assets/images/65/12.png&quot; alt=&quot;12.png&quot; /&gt;#### 여기선 앞에서 만든 Web Bug워크플로우를 선택 후, next를 눌러줍니다. #### &lt;img src=&quot;/blog/assets/images/65/13.png&quot; alt=&quot;13.png&quot; /&gt;그리고 이 워크플로우를 적용받을 이슈타입을 선택합니다. Web Bug타입용으로 만든 워크플로우이므로 해당 타입을 선택 후 마무리합니다.&lt;img src=&quot;/blog/assets/images/65/14.png&quot; alt=&quot;14.png&quot; /&gt;그럼 이렇게 Workflow Scheme에 워크플로우가 추가된 것을 볼 수 있습니다. 의미는 Web Bug이슈타입은 새로 추가한 워크플로우를, 그 외의 모든 이슈타입은 jira의 기본 워크플로우를 타라는 의미죠. 현재는 해당 Scheme이 어떤 프로젝트에서도 쓰이지 않기 때문에 Inactive에 분류되어있는 것을 볼 수 있으며, 프로젝트에서 해당 Scheme을 사용 시 자동으로 Active로 이동됩니다. #### &lt;img src=&quot;/blog/assets/images/65/15.png&quot; alt=&quot;15.png&quot; /&gt;중요한 것으로 만약 사용 중인 워크플로우를 수정 시, 다음처럼 경고창이 발생하며 경고창에서 꼭 Publish를 눌러주시기 바랍니다. 그렇지 않으면 적용이 안되거든요.&lt;/p&gt;

&lt;h4 id=&quot;여기까지-workflow에-대해서-기술하였고-다음-문서에서는-screen으로-넘어가도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/65/16.png&quot; alt=&quot;16.png&quot; /&gt;여기까지 Workflow에 대해서 기술하였고 다음 문서에서는 Screen으로 넘어가도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Workflow: 워크플로우는 앞에서 프로젝트 생성 시 잠깐 보셨을텐데, 일반적으로 사용하는 프로세스와 같은 의미라고 생각하시면 됩니다. 예를 들어 현실에서의 결재라인이죠. 아시다시피, 프로세스는 각 업무별로 진행되는 과정이 다릅니다. 기획팀 내부의 일을 처리하는데 개발팀의 프로세스를 탈 필요가 없는 것처럼요. 이에 따라 각 이슈타입별로 다른 워크플로우를 설정할 수 있게되어있습니다. 다음 그림과 같이, 프로젝트를 생성 시 각 프로젝트별로 기본적으로 워크플로우가 따로 생성되어지는 것을 확인할 수 있습니다. #### 보시면 현재 사용하고 있는 워크플로우, 마지막 수정일자, 할당되어있는 scheme, 워크플로우의 단계(상태레벨이 몇 개인지), 워크플로우 수정이 있습니다. View를 눌러보시면 다음과 같이 해당 워크플로우가 어떻게 동작하는지를 확인할 수 있죠. Diagram 형태로도, Text형태로도 볼 수 있으며 필요 시 잘 구성된 워크플로우를 Export하여 타 시스템에서도 써먹을 수 있습니다. #### 본제로 돌아와서, 앞서 만든 WCS(Web Customer Support)프로젝트에 새로운 워크플로우를 추가해보겠습니다. 우측 상단의 Add Workflow를 클릭 시 다음과 같은 팝업이 생성되며, 이름을 지정 후 Add를 클릭합니다. 안타깝게도 여기선 한글은 지원하지 않으므로 영어로 만드셔야하며, 차후 워크플로우가 늘어날 경우 보기에 어려워지므로 반드시 이름을 구분이 쉽도록 명확히 지정하셔야합니다. 본 문서에서는 앞에서 만든 Web Bug타입의 워크플로우를 생성할 것이므로 다음과 같이 만들어보겠습니다.그럼 다음과 같이 아주 심플한 워크플로우가 생성됩니다.상태가 오픈만 있으므로, Fix라는 상태를 하나 생성해봅니다. 방법은 Add status를 클릭하면되며, 기존에 존재하는 상태를 선택하거나 새로운 상태를 생성할 수 있습니다. Fixed의 경우 없었던 상태이므로 다음처럼 new status라는 내용이 나오며 엔터키로 입력 후 Add를 클릭합니다. #### 그럼 다음과 같이 다시 팝업이 생성되며, 카테고리를 지정하도록 나옵니다. Fixed의 경우 Done으로 분류될 것이기에 #### Done으로 선택 후 Create를 눌러줍니다.안타깝지만 카테고리의 경우, 시스템에 하드코딩되어있는 부분이기에 간단히 추가는 어려우며 본 문서에서는 넘어가겠습니다. (필요 시 구글신에게 물어보세요)#### 아무튼 만들어지면 뭔가 오른쪽에 빨간색 느낌표와 함께 워닝이 뜹니다. #### 이는 해당 스테이터스로 이동할 수 있는 연결이 없다는 의미인데 여기서 Add Transition을 눌러주셔도 되고 다음과 같이 스테이터스에 마우스를 올릴 시 나타나는 원형에서 드래그하여 타 스테이터스로 이동 시 새로운 팝업이 생성됩니다. #### 위처럼 어떤 상태로부터 어떤 상태로 이동할 것인지, 그리고 그 이름은 무엇이 될 것인지를 지정합니다. #### 여기선 open에서 fixed상태로 이동할 것이므로 간단히 fix라고 하겠습니다. Screen의 경우, 상태를 Open에서 Fixed로 이동할 때 특정 팝업창을 띄울 것인지 여부를 정하는 내용으로Screen은 이 다음에 설명드릴 내용으므로 여기선 기본인 None으로 설정합니다. 그럼 이렇게 Transition이 추가됩니다. 샘플 워크플로우이기도 하고 상태가 많으면 귀찮으므로 이 워크플로우를 사용하도록 하고 넘어가도록 하겠습니다. 농담도 들어있었지만 실제로 새로 Jira를 도입 시 워크플로우를 최대한 간소화하는 것은 굉장히 중요합니다. 처음에 의욕이 앞서서 많은 복잡다단한 절차를 만들어도, 실제 사용자들이 사용하기엔 어렵고 불편하기에 접근이 어렵기 때문이죠. 반드시 필요한 절차가 아닐 경우, 사용에 익숙해진 이후에 도입해도 늦지 않습니다. Workflow Schemes: 앞에서 만든 워크플로우를 써먹기 위해선 이 Scheme을 지정해야합니다. Workflow scheme도 워크플로우와 같이 프로젝트 생성 시 기본적으로 생성됩니다. 필요 시 우측 상단의 Add Workflow Scheme버튼을 눌러서 새로 생성이 가능합니다만, Workflow와 다른 점은 여러 개를 만들어봐야 실제로 사용할 것은 하나라는 점을 상기하셔야합니다. 앞에서도 설명드렸지만, 결국 Jira의 프로젝트 설정이란, 여기서 만들어진 Scheme들에 Associate되는 형태로써 한 번에 하나의 Scheme설정만 적용받기 때문이죠. 따라서 원래는 새로운 Scheme을 추가할 필요는 없지만, 그래도 처음 사용자를 위한 문서이니 한 번 추가해보겠습니다. Add Workflow Scheme버튼을 클릭 후 다음처럼 새로운 Scheme을 생성합니다. #### 그럼 이런 화면이 나오며, 해당 워크플로우 이름이 마음에 안들 경우 수정할 수도 있습니다. 워크플로우를 추가하기 위해, Add Workflow를 클릭 후 Add Existing을 클릭해줍니다. #### #### 여기선 앞에서 만든 Web Bug워크플로우를 선택 후, next를 눌러줍니다. #### 그리고 이 워크플로우를 적용받을 이슈타입을 선택합니다. Web Bug타입용으로 만든 워크플로우이므로 해당 타입을 선택 후 마무리합니다.그럼 이렇게 Workflow Scheme에 워크플로우가 추가된 것을 볼 수 있습니다. 의미는 Web Bug이슈타입은 새로 추가한 워크플로우를, 그 외의 모든 이슈타입은 jira의 기본 워크플로우를 타라는 의미죠. 현재는 해당 Scheme이 어떤 프로젝트에서도 쓰이지 않기 때문에 Inactive에 분류되어있는 것을 볼 수 있으며, 프로젝트에서 해당 Scheme을 사용 시 자동으로 Active로 이동됩니다. #### 중요한 것으로 만약 사용 중인 워크플로우를 수정 시, 다음처럼 경고창이 발생하며 경고창에서 꼭 Publish를 눌러주시기 바랍니다. 그렇지 않으면 적용이 안되거든요.</summary></entry><entry><title type="html">Jira 설정_4(Issues)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-64.html" rel="alternate" type="text/html" title="Jira 설정_4(Issues)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-64</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-64.html">&lt;p&gt;오늘은 대망의 Issues 메뉴에 대해 기술하도록 하겠습니다. 양이 많아서 여기도 좀 잘라서 써야겠네요. [Jira Administration - Issues]사실 본 문서를 작성하게 된 계기는 이 메뉴를 위함이었으나, 이 또한 먼 길을 돌아온 듯한 느낌이네요…우선 좌측 패널의 메뉴를 보는 순간,&lt;img src=&quot;/blog/assets/images/64/0.jpg&quot; alt=&quot;0.jpg&quot; /&gt;#### 뭐 대략 이런 느낌을 받으실 겁니다. 커스터마이징이 많이 가능하다 = 복잡하다 와 같으니까요. 실제로 좀 사용하다보면 그렇게까지 엄청난 난이도는 아니지만, 처음보는 입장에서는 충분히 멘탈에 데미지를 받을 수 있을 정도의 레벨입니다. 게다가 보통 사내에서 ALM관리자를 따로 뽑아서 하는게 아니라 높으신분들께서 개발하시는 분들에게”업무 하는김에 이것도 같이 좀 해봐라”라는 느낌으로 주는 경우가 많기에 더더욱 그렇구요. 들어가기에 앞서, 앞에서 다른 많은 내용들을 진행하느라 이제서야 소개할 Issue에 대해 말씀드리자면, Jira에서의 가장 기본적인 단위라고 생각하시면됩니다. 조금 이해를 돕기 위해 Jira 헤더 메뉴에서 Create를 눌러보시면 다음과 같은 화면을 볼 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/64/1.png&quot; alt=&quot;1.png&quot; /&gt;해당 팝업창에서 보여지는 내용들이 이슈의 속성이며, 현실에서의 모든 할 일을 Jira에서는 이슈단위로 등록한다고 생각하시면 됩니다. 그렇게 만들어진 이슈들을 관리하는 것이 Jira의 의의이구요. 뭐 솔루션 소개부터가 Issue Tracking Tool이니까요. 그런 이슈가 Jira내에서 움직이는데에 있어서 필요한 설정들을 관리하는 것이 이 메뉴이며, Jira의 Issue 설정은 간단히 말하면 조립하는 것과 같습니다.크게 보았을 때 3단계 정도로 나눌 수 있는데,세세한 사항들(Issue Type, Field등)을 정의하고,해당 사항들을 Scheme이라는 단위로 묶은 뒤,각 프로젝트마다 어떤 Scheme을 사용할 것인지 지정이라고 보시면 됩니다. 그럼, Issue Type부터 시작하겠습니다. Issue types: 이슈타입은 말 그대로 유형입니다. 예를 들어, 인프라에서 어떤 문제가 발생 시 해당 문제가 어떤 유형의 문제(OS? Network? DB?)인지를 미리 지정하는 것이죠. 이 유형에 따라 해당 이슈가 어떤 상태변화(Workflow)를 가질 지, 어떤 필드(Field)들이 보여질지 등이 정해지기 때문에 중요한 속성 중 하나입니다. 아마 이 메뉴에 들어올 시 다음과 같이 Jira에서 기본적으로 제공하는 이슈타입들이 보여질텐데, 이는 Jira가 기본적으로는 개발조직을 대상으로 만들어진 솔루션이기 때문입니다. (Bug나 Improvement 등을 보면 알 수 있죠)만약 사용하시는 곳이 개발조직과는 전혀 관계없는 곳일 경우 새로운 이슈타입이 필요하며, 이 때 우측의 Add Issue Type을 클릭하여추가가 가능합니다.본 문서에서는 Web Customer Support라는 새 프로젝트를 생성한다고 가정하였으므로, 이슈타입도 Web Bug라는 이름으로 하나 만들어보겠습니다.#### &lt;img src=&quot;/blog/assets/images/64/2.jpg&quot; alt=&quot;2.jpg&quot; /&gt;Add를 클릭 시 목록에 이슈타입이 추가된 것을 볼 수 있으며, 필요할 경우 Edit버튼을 클릭하여 아이콘을 조금 이쁘게 꾸밀 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;issue-type-schemes-그럼-앞서-만든-web-bug-타입을-사용하기위해-scheme을-하나-만들어보겠습니다우측-상단의-add-issue-type-scheme을-클릭-시-다음과-같은-화면을-볼-수-있습니다&quot;&gt;&lt;img src=&quot;/blog/assets/images/64/3.png&quot; alt=&quot;3.png&quot; /&gt;Issue type schemes: 그럼 앞서 만든 Web Bug 타입을 사용하기위해 scheme을 하나 만들어보겠습니다. 우측 상단의 Add Issue Type Scheme을 클릭 시 다음과 같은 화면을 볼 수 있습니다.&lt;/h4&gt;

&lt;h4 id=&quot;물론-처음엔-이름도-비어있고-issue-type-for-current-scheme칸도-비어있을겁니다따라서-위와-같이-이름은-wcs-issue-type-scheme으로-이슈타입은-드래그앤-드롭으로-우측에서-좌측으로-필요한-타입을-끌어와줍니다default-issue-type의-경우-해당-프로젝트에서-이슈를-생성-시-기본적으로-선택될-이슈타입이며none으로-둘-경우-반드시-특정-이슈타입을-선택하도록합니다설정이-완료되면-하단의-save를-눌러-완료합니다-그럼-다음과-같이-새로-issue-type-scheme이-생성된-것을-확인할-수-있으며현재는-어떤-프로젝트에서도-사용하고있지-않다는-것을-알-수-있습니다-sub-tasks-우선-sub-task에-대해-설명드리자면-jira는-크게-보았을-때-이슈관리에-있어-기본적으로project---issue---sub-task의-최대-3단계로-관리가-가능합니다-sub-task에-sub-task생성불가능-sub-task는-다음-그림과-같이-일반-이슈를-생성한-뒤-해당-이슈에서-more---create-sub-task를-클릭하여-생성가능하며-이-때-나오는-화면은-일반-이슈-생성과-같습니다--그리고-생성될-경우-다음과-같이-기본-이슈에-생성된-sub-task들의-목록이-보여지게되죠&quot;&gt;&lt;img src=&quot;/blog/assets/images/64/4.png&quot; alt=&quot;4.png&quot; /&gt;물론 처음엔 이름도 비어있고 Issue Type for Current Scheme칸도 비어있을겁니다. 따라서 위와 같이 이름은 WCS Issue Type Scheme으로, 이슈타입은 드래그앤 드롭으로 우측에서 좌측으로 필요한 타입을 끌어와줍니다. Default Issue Type의 경우 해당 프로젝트에서 이슈를 생성 시 기본적으로 선택될 이슈타입이며,None으로 둘 경우 반드시 특정 이슈타입을 선택하도록합니다. 설정이 완료되면 하단의 Save를 눌러 완료합니다. 그럼 다음과 같이 새로 Issue Type Scheme이 생성된 것을 확인할 수 있으며, 현재는 어떤 프로젝트에서도 사용하고있지 않다는 것을 알 수 있습니다. #### &lt;img src=&quot;/blog/assets/images/64/5.png&quot; alt=&quot;5.png&quot; /&gt;Sub-tasks: 우선 Sub-task에 대해 설명드리자면, Jira는 크게 보았을 때 이슈관리에 있어 기본적으로 Project - Issue - Sub-task의 최대 3단계로 관리가 가능합니다. (Sub-task에 Sub-task생성불가능)#### Sub-task는 다음 그림과 같이 일반 이슈를 생성한 뒤, 해당 이슈에서 More - Create Sub-Task를 클릭하여 생성가능하며, #### 이 때 나오는 화면은 일반 이슈 생성과 같습니다. #### &lt;img src=&quot;/blog/assets/images/64/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;#### 그리고 생성될 경우 다음과 같이 기본 이슈에 생성된 Sub-task들의 목록이 보여지게되죠.&lt;/h4&gt;

&lt;h4 id=&quot;다시-본론으로-돌아와서-이-메뉴는-결국-위의-sub-task생성-시-어떤-타입으로-지정할-것인지를-정하는-메뉴로써기본적으로는-sub-task라는-타입-하나만-설정되어있습니다앞서-기술하였듯이-사용방법은-여러가지나-하나의-예로써-일반적으로-it부서에-기획-디자인-개발-퍼블리싱-등이-있는데이를-위해-네-개의-sub-task타입을-부서로-지정하는-경우도-있을-수-있죠추가-방법은-우측-상단의-add-sub-task-issue-type을-클릭하면되며-간단하므로캡처는-생략하겠습니다다음-글에서는-workflow에-대해서-알아보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/64/7.jpg&quot; alt=&quot;7.jpg&quot; /&gt;다시 본론으로 돌아와서, 이 메뉴는 결국 위의 Sub-task생성 시 어떤 타입으로 지정할 것인지를 정하는 메뉴로써 기본적으로는 Sub-task라는 타입 하나만 설정되어있습니다. 앞서 기술하였듯이 사용방법은 여러가지나 하나의 예로써 일반적으로 IT부서에 기획, 디자인, 개발, 퍼블리싱 등이 있는데 이를 위해 네 개의 Sub-task타입을 부서로 지정하는 경우도 있을 수 있죠. 추가 방법은 우측 상단의 Add Sub-Task Issue Type을 클릭하면되며, 간단하므로 캡처는 생략하겠습니다. 다음 글에서는 Workflow에 대해서 알아보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">오늘은 대망의 Issues 메뉴에 대해 기술하도록 하겠습니다. 양이 많아서 여기도 좀 잘라서 써야겠네요. [Jira Administration - Issues]사실 본 문서를 작성하게 된 계기는 이 메뉴를 위함이었으나, 이 또한 먼 길을 돌아온 듯한 느낌이네요…우선 좌측 패널의 메뉴를 보는 순간,#### 뭐 대략 이런 느낌을 받으실 겁니다. 커스터마이징이 많이 가능하다 = 복잡하다 와 같으니까요. 실제로 좀 사용하다보면 그렇게까지 엄청난 난이도는 아니지만, 처음보는 입장에서는 충분히 멘탈에 데미지를 받을 수 있을 정도의 레벨입니다. 게다가 보통 사내에서 ALM관리자를 따로 뽑아서 하는게 아니라 높으신분들께서 개발하시는 분들에게”업무 하는김에 이것도 같이 좀 해봐라”라는 느낌으로 주는 경우가 많기에 더더욱 그렇구요. 들어가기에 앞서, 앞에서 다른 많은 내용들을 진행하느라 이제서야 소개할 Issue에 대해 말씀드리자면, Jira에서의 가장 기본적인 단위라고 생각하시면됩니다. 조금 이해를 돕기 위해 Jira 헤더 메뉴에서 Create를 눌러보시면 다음과 같은 화면을 볼 수 있습니다. #### 해당 팝업창에서 보여지는 내용들이 이슈의 속성이며, 현실에서의 모든 할 일을 Jira에서는 이슈단위로 등록한다고 생각하시면 됩니다. 그렇게 만들어진 이슈들을 관리하는 것이 Jira의 의의이구요. 뭐 솔루션 소개부터가 Issue Tracking Tool이니까요. 그런 이슈가 Jira내에서 움직이는데에 있어서 필요한 설정들을 관리하는 것이 이 메뉴이며, Jira의 Issue 설정은 간단히 말하면 조립하는 것과 같습니다.크게 보았을 때 3단계 정도로 나눌 수 있는데,세세한 사항들(Issue Type, Field등)을 정의하고,해당 사항들을 Scheme이라는 단위로 묶은 뒤,각 프로젝트마다 어떤 Scheme을 사용할 것인지 지정이라고 보시면 됩니다. 그럼, Issue Type부터 시작하겠습니다. Issue types: 이슈타입은 말 그대로 유형입니다. 예를 들어, 인프라에서 어떤 문제가 발생 시 해당 문제가 어떤 유형의 문제(OS? Network? DB?)인지를 미리 지정하는 것이죠. 이 유형에 따라 해당 이슈가 어떤 상태변화(Workflow)를 가질 지, 어떤 필드(Field)들이 보여질지 등이 정해지기 때문에 중요한 속성 중 하나입니다. 아마 이 메뉴에 들어올 시 다음과 같이 Jira에서 기본적으로 제공하는 이슈타입들이 보여질텐데, 이는 Jira가 기본적으로는 개발조직을 대상으로 만들어진 솔루션이기 때문입니다. (Bug나 Improvement 등을 보면 알 수 있죠)만약 사용하시는 곳이 개발조직과는 전혀 관계없는 곳일 경우 새로운 이슈타입이 필요하며, 이 때 우측의 Add Issue Type을 클릭하여추가가 가능합니다.본 문서에서는 Web Customer Support라는 새 프로젝트를 생성한다고 가정하였으므로, 이슈타입도 Web Bug라는 이름으로 하나 만들어보겠습니다.#### Add를 클릭 시 목록에 이슈타입이 추가된 것을 볼 수 있으며, 필요할 경우 Edit버튼을 클릭하여 아이콘을 조금 이쁘게 꾸밀 수 있습니다.</summary></entry><entry><title type="html">Jira 설정_3(Project / Application / Add-ons)</title><link href="http://localhost:4000/blog/2018/06/25/tistory-63.html" rel="alternate" type="text/html" title="Jira 설정_3(Project / Application / Add-ons)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/blog/2018/06/25/tistory-63</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/25/tistory-63.html">&lt;h4 id=&quot;오늘은-주말이므로-간단하게-짤막한-세-종류만-적어보도록하겠습니다-저번에-이어-administration메뉴의-application부분부터-진행합니다jira-administration---applicationapplication을-클릭-시-다음과-같이-좌측에-메뉴들이-보이며-본-문서의-경우-vm새로-만들기가-귀찮아서사내-jira로-진행-중이기에-실제로는-메뉴가-더-적게보일-수-있습니다versions--licenses-이전-overview문서에서-잠시-다뤘었던-내용으로-해당-메뉴에서-jira-솔루션-설치-및-라이선스관리가-가능합니다주로-만료된-라이선스를-교체할-때-사용하며-license-key부분에-새-라이선스를복사하여-붙여넣는-것으로-간단히-교체가-가능합니다관리자가-나태해서-버전이-좀-낮은데-본-문서-작성-후-업그레이드할-예정입니다-application-access-jira에-로그인이-가능한-그룹을-설정하며-여기에-추가되어있지않다면-jira에-로그인이-불가능합니다또한-여기서-라이선스-사용자-수를-체크하기에-중요한-메뉴-중-하나라고-보시면-됩니다--jira-software-configuration-jira에-조금-익숙하신-분들을-위한-메뉴로-앞서-나온-scrum-board사용-시-sprint를-동시에-여러-개-진행할-수-있도록하는-옵션입니다-기본은-동시에-하나의-스프린트만-진행하도록-되어있습니다-application-link-타-atlassian-솔루션과의-연계를-위한-설정입니다-해당-솔루션이-있는-서버의-url을-입력-후-create-new-link-버튼을-클릭-시-연동이-가능하며-관리자-권한이-필요합니다-주로-confluence와-연동하여-사용하며-이는-차후에-confluence-문서에서-좀-더-자세히-다루도록-하겠습니다--application-navigator-jira-좌측-상단의모양의설정으로-단순히-링크를-추가하여-해당-링크로-이동할-수-있는-설정입니다-jira에서-자주-이동하는-사이트가-있을-경우-등록해두면-편리합니다-jira-administration---projectsjira-내의-프로젝트-관리-화면으로-메뉴가-두-개-뿐입니다-행복projects를-클릭-시-다음과-같이-생성되어있는-프로젝트의-목록이-보여지며-앞서-말씀드린대로change-project-type을-통해-business타입을-software타입으로-변경하는-등의-작업이-가능합니다--project-카테고리의-경우-단순-검색을-위해-추가하는-메뉴로써-프로젝트의-갯수가-많을-때-필요한-경우-business타입이나-software타입-외에-임의로-프로젝트를-분류하여-검색하기-쉽도록-하기위해-사용합니다-딱히-많이-사용하지는-않습니다&quot;&gt;오늘은 주말이므로, 간단하게 짤막한 세 종류만 적어보도록 하겠습니다. #### 저번에 이어 Administration메뉴의 Application부분부터 진행합니다. [Jira Administration - Application]Application을 클릭 시 다음과 같이 좌측에 메뉴들이 보이며. 본 문서의 경우 VM새로 만들기가 귀찮아서 사내 Jira로 진행 중이기에 실제로는 메뉴가 더 적게보일 수 있습니다. Versions &amp;amp; Licenses: 이전 Overview문서에서 잠시 다뤘었던 내용으로, 해당 메뉴에서 Jira 솔루션 설치 및 라이선스관리가 가능합니다. 주로 만료된 라이선스를 교체할 때 사용하며, License Key부분에 새 라이선스를 복사하여 붙여넣는 것으로 간단히 교체가 가능합니다. 관리자가 나태해서 버전이 좀 낮은데 본 문서 작성 후 업그레이드할 예정입니다. #### &lt;img src=&quot;/blog/assets/images/63/1.png&quot; alt=&quot;1.png&quot; /&gt;Application Access: Jira에 로그인이 가능한 그룹을 설정하며, 여기에 추가되어있지않다면 Jira에 로그인이 불가능합니다. 또한 여기서 라이선스 사용자 수를 체크하기에 중요한 메뉴 중 하나라고 보시면 됩니다. #### &lt;img src=&quot;/blog/assets/images/63/2.png&quot; alt=&quot;2.png&quot; /&gt;#### Jira Software configuration: Jira에 조금 익숙하신 분들을 위한 메뉴로, #### 앞서 나온 Scrum Board사용 시 Sprint를 동시에 여러 개 진행할 수 있도록하는 옵션입니다. #### 기본은 동시에 하나의 스프린트만 진행하도록 되어있습니다.&lt;img src=&quot;/blog/assets/images/63/3.png&quot; alt=&quot;3.png&quot; /&gt;#### Application Link: 타 Atlassian 솔루션과의 연계를 위한 설정입니다. 해당 솔루션이 있는 서버의 URL을 입력 후, #### Create new link 버튼을 클릭 시 연동이 가능하며, 관리자 권한이 필요합니다. #### 주로 Confluence와 연동하여 사용하며, 이는 차후에 Confluence 문서에서 좀 더 자세히 다루도록 하겠습니다.#### &lt;img src=&quot;/blog/assets/images/63/4.png&quot; alt=&quot;4.png&quot; /&gt;#### Application Navigator: Jira 좌측 상단의 모양의&lt;img src=&quot;/blog/assets/images/63/5.png&quot; alt=&quot;5.png&quot; /&gt;설정으로, 단순히 링크를 추가하여 해당 링크로 이동할 수 있는 설정입니다. #### Jira에서 자주 이동하는 사이트가 있을 경우 등록해두면 편리합니다.#### &lt;img src=&quot;/blog/assets/images/63/6.png&quot; alt=&quot;6.png&quot; /&gt;[Jira Administration - Projects]Jira 내의 프로젝트 관리 화면으로 메뉴가 두 개 뿐입니다. 행복Projects를 클릭 시 다음과 같이 생성되어있는 프로젝트의 목록이 보여지며, 앞서 말씀드린대로 Change project type을 통해 Business타입을 Software타입으로 변경하는 등의 작업이 가능합니다. #### &lt;img src=&quot;/blog/assets/images/63/7.png&quot; alt=&quot;7.png&quot; /&gt;#### Project 카테고리의 경우, 단순 검색을 위해 추가하는 메뉴로써 프로젝트의 갯수가 많을 때 필요한 경우 #### Business타입이나 Software타입 외에 임의로 프로젝트를 분류하여 검색하기 쉽도록 하기위해 사용합니다. #### (딱히 많이 사용하지는 않습니다)&lt;/h4&gt;
&lt;h4 id=&quot;jira-administration---add-ons단도직입적으로-돈을-요구하는-메뉴입니다-보통-일반적으로-아시는-앱스토어-같은-것을-생각하시면-되며jira의-기본기능으로-부족한-것들을-메꿔주는-역할을-합니다물론-무료이면서도-훌륭한-플러그인들도-많이-있으나-보통-조금-쓸만하다싶으면-유료인-경우가-대부분이죠아무튼-현재-jira의-마켓플레이스에-등록된-플러그인은-3천-개를-넘어가며-당연히-어떤-플러그인이-좋은지-필요한지는각-회사-사정에-따라한-달의-무료-체험을-통해-사용하면서-알아내는-수밖에-없습니다범용적으로-workflow를-추가로-제어할-수-있는-jira-suit-utilities와-toolkit-간트차트를-만들-수-있는-biggantt같은-것들이-있으나이-또한-사내-사정에-따라-필요할-수도-없을-수도-있습니다아무튼-이-메뉴는-find-new-add-ons에서-마켓플레이스에-접속하여-필요한-플러그인을-검색하여-설치-후manage-add-ons를-통해-해당-플러그인을-설정하는-구조를-가지고-있는데-대부분의-고객사는-외부인터넷이되지-않는-환경이-많습니다이럴-경우-maketplaceatlassiancom에서-해당-플러그인을-검색-후-jar파일로-다운받아서-설치가-가능합니다-find-new-add-ons-앞에서-설명한-바와-같이-atlassian마켓플레이스에서-플러그인을-검색하여-설치합니다-admin-권한이-필요하며-외부인터넷이-되지-않는-환경이거나-사용하지-않도록-disable할-경우-사용이-불가능합니다--manage-add-ons-설치된-플러그인들의-설정을-변경하거나제거할-수-있으며-라이선스의-업데이트가-가능합니다-또한-외부-인터넷이-되지-않거나-마켓플레이스를-사용할-수-없을-때-외부에서-받은-jar파일을-업로드하여-설치가-가능합니다--다음에는-본-블로그를-작성하게-된-계기인-issue-설정에-대해-기술해보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/blog/assets/images/63/8.png&quot; alt=&quot;8.png&quot; /&gt;[Jira Administration - Add-ons]단도직입적으로, 돈을 요구하는 메뉴입니다. 보통 일반적으로 아시는 앱스토어 같은 것을 생각하시면 되며, JIRA의 기본기능으로 부족한 것들을 메꿔주는 역할을 합니다. 물론 무료이면서도 훌륭한 플러그인들도 많이 있으나 보통 조금 쓸만하다싶으면 유료인 경우가 대부분이죠. 아무튼 현재 Jira의 마켓플레이스에 등록된 플러그인은 3천 개를 넘어가며, 당연히 어떤 플러그인이 좋은지, 필요한지는 각 회사 사정에 따라, 한 달의 무료 체험을 통해 사용하면서 알아내는 수밖에 없습니다. 범용적으로 Workflow를 추가로 제어할 수 있는 Jira Suit Utilities와 Toolkit, 간트차트를 만들 수 있는 Biggantt같은 것들이 있으나, 이 또한 사내 사정에 따라 필요할 수도, 없을 수도 있습니다. 아무튼 이 메뉴는 Find new add-ons에서 마켓플레이스에 접속하여 필요한 플러그인을 검색하여 설치 후, Manage add-ons를 통해 해당 플러그인을 설정하는 구조를 가지고 있는데, 대부분의 고객사는 외부인터넷이되지 않는 환경이 많습니다. 이럴 경우, maketplace.atlassian.com에서 해당 플러그인을 검색 후, jar파일로 다운받아서 설치가 가능합니다. #### Find new add-ons: 앞에서 설명한 바와 같이 Atlassian마켓플레이스에서 플러그인을 검색하여 설치합니다. #### Admin 권한이 필요하며, 외부인터넷이 되지 않는 환경이거나, 사용하지 않도록 Disable할 경우 사용이 불가능합니다. #### &lt;img src=&quot;/blog/assets/images/63/9.jpg&quot; alt=&quot;9.jpg&quot; /&gt;#### Manage add-ons: 설치된 플러그인들의 설정을 변경하거나, 제거할 수 있으며, 라이선스의 업데이트가 가능합니다. #### 또한 외부 인터넷이 되지 않거나, 마켓플레이스를 사용할 수 없을 때 외부에서 받은 jar파일을 업로드하여 설치가 가능합니다. #### &lt;img src=&quot;/blog/assets/images/63/10.jpg&quot; alt=&quot;10.jpg&quot; /&gt;#### 다음에는 본 블로그를 작성하게 된 계기인 Issue 설정에 대해 기술해보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">오늘은 주말이므로, 간단하게 짤막한 세 종류만 적어보도록 하겠습니다. #### 저번에 이어 Administration메뉴의 Application부분부터 진행합니다. [Jira Administration - Application]Application을 클릭 시 다음과 같이 좌측에 메뉴들이 보이며. 본 문서의 경우 VM새로 만들기가 귀찮아서 사내 Jira로 진행 중이기에 실제로는 메뉴가 더 적게보일 수 있습니다. Versions &amp;amp; Licenses: 이전 Overview문서에서 잠시 다뤘었던 내용으로, 해당 메뉴에서 Jira 솔루션 설치 및 라이선스관리가 가능합니다. 주로 만료된 라이선스를 교체할 때 사용하며, License Key부분에 새 라이선스를 복사하여 붙여넣는 것으로 간단히 교체가 가능합니다. 관리자가 나태해서 버전이 좀 낮은데 본 문서 작성 후 업그레이드할 예정입니다. #### Application Access: Jira에 로그인이 가능한 그룹을 설정하며, 여기에 추가되어있지않다면 Jira에 로그인이 불가능합니다. 또한 여기서 라이선스 사용자 수를 체크하기에 중요한 메뉴 중 하나라고 보시면 됩니다. #### #### Jira Software configuration: Jira에 조금 익숙하신 분들을 위한 메뉴로, #### 앞서 나온 Scrum Board사용 시 Sprint를 동시에 여러 개 진행할 수 있도록하는 옵션입니다. #### 기본은 동시에 하나의 스프린트만 진행하도록 되어있습니다.#### Application Link: 타 Atlassian 솔루션과의 연계를 위한 설정입니다. 해당 솔루션이 있는 서버의 URL을 입력 후, #### Create new link 버튼을 클릭 시 연동이 가능하며, 관리자 권한이 필요합니다. #### 주로 Confluence와 연동하여 사용하며, 이는 차후에 Confluence 문서에서 좀 더 자세히 다루도록 하겠습니다.#### #### Application Navigator: Jira 좌측 상단의 모양의설정으로, 단순히 링크를 추가하여 해당 링크로 이동할 수 있는 설정입니다. #### Jira에서 자주 이동하는 사이트가 있을 경우 등록해두면 편리합니다.#### [Jira Administration - Projects]Jira 내의 프로젝트 관리 화면으로 메뉴가 두 개 뿐입니다. 행복Projects를 클릭 시 다음과 같이 생성되어있는 프로젝트의 목록이 보여지며, 앞서 말씀드린대로 Change project type을 통해 Business타입을 Software타입으로 변경하는 등의 작업이 가능합니다. #### #### Project 카테고리의 경우, 단순 검색을 위해 추가하는 메뉴로써 프로젝트의 갯수가 많을 때 필요한 경우 #### Business타입이나 Software타입 외에 임의로 프로젝트를 분류하여 검색하기 쉽도록 하기위해 사용합니다. #### (딱히 많이 사용하지는 않습니다) [Jira Administration - Add-ons]단도직입적으로, 돈을 요구하는 메뉴입니다. 보통 일반적으로 아시는 앱스토어 같은 것을 생각하시면 되며, JIRA의 기본기능으로 부족한 것들을 메꿔주는 역할을 합니다. 물론 무료이면서도 훌륭한 플러그인들도 많이 있으나 보통 조금 쓸만하다싶으면 유료인 경우가 대부분이죠. 아무튼 현재 Jira의 마켓플레이스에 등록된 플러그인은 3천 개를 넘어가며, 당연히 어떤 플러그인이 좋은지, 필요한지는 각 회사 사정에 따라, 한 달의 무료 체험을 통해 사용하면서 알아내는 수밖에 없습니다. 범용적으로 Workflow를 추가로 제어할 수 있는 Jira Suit Utilities와 Toolkit, 간트차트를 만들 수 있는 Biggantt같은 것들이 있으나, 이 또한 사내 사정에 따라 필요할 수도, 없을 수도 있습니다. 아무튼 이 메뉴는 Find new add-ons에서 마켓플레이스에 접속하여 필요한 플러그인을 검색하여 설치 후, Manage add-ons를 통해 해당 플러그인을 설정하는 구조를 가지고 있는데, 대부분의 고객사는 외부인터넷이되지 않는 환경이 많습니다. 이럴 경우, maketplace.atlassian.com에서 해당 플러그인을 검색 후, jar파일로 다운받아서 설치가 가능합니다. #### Find new add-ons: 앞에서 설명한 바와 같이 Atlassian마켓플레이스에서 플러그인을 검색하여 설치합니다. #### Admin 권한이 필요하며, 외부인터넷이 되지 않는 환경이거나, 사용하지 않도록 Disable할 경우 사용이 불가능합니다. #### #### Manage add-ons: 설치된 플러그인들의 설정을 변경하거나, 제거할 수 있으며, 라이선스의 업데이트가 가능합니다. #### 또한 외부 인터넷이 되지 않거나, 마켓플레이스를 사용할 수 없을 때 외부에서 받은 jar파일을 업로드하여 설치가 가능합니다. #### #### 다음에는 본 블로그를 작성하게 된 계기인 Issue 설정에 대해 기술해보도록 하겠습니다.  공감sns신고</summary></entry></feed>