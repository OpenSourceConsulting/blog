<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-02T02:32:33+09:00</updated><id>http://localhost:4000/</id><title type="html">OpenSourceConsulting</title><subtitle>Technology sharing blog</subtitle><entry><title type="html">팀에게 애자일 조금씩 주입하기.</title><link href="http://localhost:4000/agile/jira/scrum/2018/06/25/tistory-71.html" rel="alternate" type="text/html" title="팀에게 애자일 조금씩 주입하기." /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/agile/jira/scrum/2018/06/25/tistory-71</id><content type="html" xml:base="http://localhost:4000/agile/jira/scrum/2018/06/25/tistory-71.html">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;h4 id=&quot;많은-산업군에-it-기술이-필요한-시대가-되었다-it기술의-보유에-따라서-사업의-성공-실패가-결정된다고-해도-과언이-아니다-하지만-일하는-환경이나-프로세스는-사업혁명-이후로-많은-발전을-하지-못하고-있다-공장의-근무시간은-제품의-생산률로-직결되는-단순한-구조라면-it-기술은-많은-아이디어와-정신력을-요구한다-과-을-구분-못하여-디버깅에-어려움을-겪어봤다&quot;&gt;많은 산업군에 IT 기술이 필요한 시대가 되었다. IT기술의 보유에 따라서 사업의 성공, 실패가 결정된다고 해도 과언이 아니다. 하지만 일하는 환경이나 프로세스는 사업혁명 이후로 많은 발전을 하지 못하고 있다. 공장의 근무시간은 제품의 생산률로 직결되는 단순한 구조라면, IT 기술은 많은 아이디어와 정신력을 요구한다. (.과 ,을 구분 못하여 디버깅에 어려움을 겪어봤다..)&lt;/h4&gt;
&lt;h4 id=&quot;기존-프로세스와-방법론-보다-급변하는-시장의-변화에-민첩하게-적응하는-애자일에-대해서-알아보고-팀에게-조금씩-적용-시키는-방법을-소개해-보겠다&quot;&gt;기존 프로세스와 방법론 보다 급변하는 시장의 변화에 민첩하게 적응하는 &lt;strong&gt;애자일&lt;/strong&gt;에 대해서 알아보고 팀에게 조금씩 적용 시키는 방법을 소개해 보겠다.&lt;/h4&gt;

&lt;h3 id=&quot;기존-방법론폭포수-모델&quot;&gt;기존 방법론(폭포수 모델)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/71/1-65tz1CLQni4BUs5UEHv9uA.png&quot; alt=&quot;폭포수모델&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;그림httpskowikipediaorgwiki폭포수_모델&quot;&gt;[그림] https://ko.wikipedia.org/wiki/폭포수_모델&lt;/h4&gt;
&lt;h4 id=&quot;소프트웨어-개발-방법론-중-대표적인-폭포수-모델은-분석-설계-구현-테스트를-순차적으로-진행된다-건축학에서-많은-영감을-얻었다고-한다&quot;&gt;소프트웨어 개발 방법론 중 대표적인 폭포수 모델은 분석, 설계, 구현, 테스트를 순차적으로 진행된다. 건축학에서 많은 영감을 얻었다고 한다.&lt;/h4&gt;
&lt;h4 id=&quot;집을-지을-때-설계도면-대로-집을-짓는-방법과-비슷하다-집은-설계도면-또는-모형으로-완성된-모습을-확인하고-확정하기-쉽다-하지만-소프트웨어는-일부분은-front-end로-확인하고-back-end는-text-diagram으로-확인-할-수-있다&quot;&gt;집을 지을 때 설계도면 대로 집을 짓는 방법과 비슷하다. 집은 설계도면 또는 모형으로 완성된 모습을 확인하고 확정하기 쉽다. 하지만 소프트웨어는 일부분은 Front-End로 확인하고 Back-End는 Text, Diagram으로 확인 할 수 있다.&lt;/h4&gt;
&lt;h4 id=&quot;폭포수-모델은-초기-요구사항을-명확하게-할-수-있는-연구과제-고정된-환경-프로젝트에-적합하다&quot;&gt;폭포수 모델은 초기 요구사항을 명확하게 할 수 있는 연구과제, 고정된 환경 프로젝트에 적합하다.&lt;/h4&gt;
&lt;h4 id=&quot;프로젝트-초기-요구사항은-위험-요소와-필요-기능을-모두-도출하기는-사실상-불가능하다-따라서-프로젝트-중간에-요구사항이-수시로-변할-수-있는데-이를-수용-협상하는-과정에서-개발-기간-비용이-늘어난다&quot;&gt;프로젝트 초기 요구사항은 위험 요소와 필요 기능을 모두 도출하기는 사실상 불가능하다. 따라서 프로젝트 중간에 요구사항이 수시로 변할 수 있는데 이를 수용, 협상하는 과정에서 개발 기간, 비용이 늘어난다.&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;테스트, 검수 단계에서 ‘어 이게 아닌데..’ 최악의 대사가 누군가의 입에서 나온다. 야근시작이다…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/71/1_DYLGTNodpq9Fal-prB2rHg.png&quot; alt=&quot;프로젝트..?&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;위-그림은-it-프로젝트의-초기-요구사항의-불확실성-복잡성에-대해서-각-담당자가-이해한-결과물을-보여준다-나무에서-그네를-타고싶었던-고객은-의사소통의-불일치로-각-담당자의-이상한-결과물을-보게된다&quot;&gt;위 그림은 IT 프로젝트의 초기 요구사항의 불확실성, 복잡성에 대해서 각 담당자가 이해한 결과물을 보여준다. 나무에서 그네를 타고싶었던 고객은 의사소통의 불일치로 각 담당자의 이상한(?) 결과물을 보게된다.&lt;/h4&gt;
&lt;h4 id=&quot;많은-프로젝트가-프로젝트-중-후반에-이러한-문제점을-확인한다-프로그램은-복잡해-졌고-기능을-수정하기-위해-많은-비용을-지불해야-한다야근각&quot;&gt;많은 프로젝트가 프로젝트 중 후반에 이러한 문제점을 확인한다. 프로그램은 복잡해 졌고 기능을 수정하기 위해 많은 비용을 지불해야 한다.(야근각)&lt;/h4&gt;
&lt;h4 id=&quot;프로젝트-기간-비용-품질-3박자를-충족시키고-시장고객의-좋은-반응을-얻기-위해서는-어떻게-해야할까-더불어-개발팀도-만족하는-방법이-있을까&quot;&gt;프로젝트 기간, 비용, 품질 3박자를 충족시키고 시장(고객)의 좋은 반응을 얻기 위해서는 어떻게 해야할까? 더불어 개발팀도 만족하는 방법이 있을까?&lt;/h4&gt;

&lt;h2 id=&quot;애자일agile-방법론&quot;&gt;애자일(Agile) 방법론&lt;/h2&gt;
&lt;h4 id=&quot;소프트웨어-역사는-100년도-안되는-짧은-역사를-갖고있다-90년대-후반까지의-소프트웨어-공학과-개발방법론은-장기간에-걸쳐-많은-사람들을-투입하고-충분한-비용을-투입하여-진행하는-다른-공학의-프로세스와-비슷한-맥락에서-진행됐다&quot;&gt;소프트웨어 역사는 100년도 안되는 짧은 역사를 갖고있다. 90년대 후반까지의 소프트웨어 공학과 개발방법론은 장기간에 걸쳐 많은 사람들을 투입하고 충분한 비용을 투입하여 진행하는 다른 공학의 프로세스와 비슷한 맥락에서 진행됐다.&lt;/h4&gt;
&lt;h4 id=&quot;하지만소프트웨어는-유동적이고-개방적이며-요구사항의-변경에-따른-작업량을-예측하기-힘들다-애자일-방법론은-예측하며-개발을-하지-않고-일정한-주기를-가지고-끊임없이-프로토-타입을-만들어내며-그때-그때-필요한-요구를-더하고-수정하여-하나의-커다란-소프트웨어를-개발해-나가는-adaptive-style-이라고-할-수-있다&quot;&gt;하지만 소프트웨어는 유동적이고 개방적이며 요구사항의 변경에 따른 작업량을 예측하기 힘들다. 애자일 방법론은 예측하며 개발을 하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며 그때 그때 필요한 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발해 나가는 Adaptive style 이라고 할 수 있다.&lt;/h4&gt;
&lt;h4 id=&quot;애자일-선언문의-일부분을-살펴보자&quot;&gt;애자일 선언문의 일부분을 살펴보자.&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을 도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고있다.&lt;/li&gt;
    &lt;li&gt;이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다.&lt;/li&gt;
    &lt;li&gt;공정과 도구보다 개인과 상호작용을&lt;/li&gt;
    &lt;li&gt;포괄적인 문서보다 작동하는 소프트웨어를&lt;/li&gt;
    &lt;li&gt;계약 협상보다 고객과의 협력을&lt;/li&gt;
    &lt;li&gt;계획을 따르기보다 변화에 대응을 가치 있게 여긴다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;선언문의-중심에는-사람이-있다-당연한-이야기지만-사람을-위해-사람이-일을-한다-일하는-사람을-위해-또-다른-사람들이-일을-한다-사람이-사람한테-잘해주는-건-당연한-이야기다-소프트웨어를-개발하면서-비난하거나-책임소지-때문에-몸을-움크리는-문화를-걷어내고-조직의-성공을-위해-서로-돕고-더-나은-방향으로-나아가야-한다&quot;&gt;선언문의 중심에는 사람이 있다. 당연한 이야기지만 사람을 위해 사람이 일을 한다. 일하는 사람을 위해 또 다른 사람들이 일을 한다. 사람이 사람한테 잘해주는 건 당연한 이야기다. 소프트웨어를 개발하면서 비난하거나 책임소지 때문에 몸을 움크리는 문화를 걷어내고 조직의 성공을 위해 서로 돕고 더 나은 방향으로 나아가야 한다.&lt;/h4&gt;

&lt;h2 id=&quot;애자일-적용-대상&quot;&gt;애자일 적용 대상&lt;/h2&gt;
&lt;h4 id=&quot;1-목표-달성을-위한-프로세스를-가지지-않고-임기응변적인-소프트웨어-개발로-인해-혼란에-빠져있는-조직이다-이러한-프로젝트-팀에게-있어-애자일-개발-프로세스는-개선을-위한-좋은-힌트가-될-것이다-애자일-개발-프로세스는-작고-쉽게-도입할-수-있으며-그것에-들어가는-비용과-위험도-낮다&quot;&gt;1. 목표 달성을 위한 프로세스를 가지지 않고, 임기응변적인 소프트웨어 개발로 인해 혼란에 빠져있는 조직이다. 이러한 프로젝트 팀에게 있어 애자일 개발 프로세스는, 개선을 위한 좋은 힌트가 될 것이다. 애자일 개발 프로세스는 작고 쉽게 도입할 수 있으며, 그것에 들어가는 비용과 위험도 낮다.&lt;/h4&gt;
&lt;h4 id=&quot;2-이미-전통적인-소프트웨어-프로세스를-도입하고-있지만-제대로-동작하지-않는또는-프로세스-실시를-위한-오버헤드가-너무-커서-오히려-업무에-부담을-주고-있는-조직이다-프로세스의-도입은-조직의-문화를-바꾼다-효과가-크면-클수록-조직문화에-대한-영향은-커지고-도가-지나치게-되면-고유의-문화를-파괴해-버리기도-한다-그러나-조직에-있어서-애자일-개발-프로세스는-좋은-결과를-가져다-줄-것이다-또한cmmi나spice등의-인증을-얻으려고-하는-조직에서는-그들의-요구를-충족시킬-아이디어를-제공해-줄-수-있을-것이다&quot;&gt;2. 이미 전통적인 소프트웨어 프로세스를 도입하고 있지만, 제대로 동작하지 않는(또는 프로세스 실시를 위한 오버헤드가 너무 커서 오히려 업무에 부담을 주고 있는) 조직이다. 프로세스의 도입은 조직의 문화를 바꾼다. 효과가 크면 클수록 조직문화에 대한 영향은 커지고, 도가 지나치게 되면 고유의 문화를 파괴해 버리기도 한다. 그러나 조직에 있어서 애자일 개발 프로세스는 좋은 결과를 가져다 줄 것이다. 또한 CMMI나 SPICE등의 인증을 얻으려고 하는 조직에서는 그들의 요구를 충족시킬 아이디어를 제공해 줄 수 있을 것이다.&lt;/h4&gt;

&lt;h2 id=&quot;팀원에게-애자일-조금씩주입하기&quot;&gt;팀원에게 애자일 조금씩 주입하기&lt;/h2&gt;
&lt;h4 id=&quot;우리도-애자일-합시다-외치는-순간-사람들은-지금-하는-것도-많은데-뭘-또해-귀찮아-등-반감을-가질-수-있다-천천히-조금씩-주입해보자&quot;&gt;‘우리도 애자일 합시다!’ 외치는 순간 사람들은 ‘지금 하는 것도 많은데 뭘 또해..’, ‘귀찮아..’ 등 반감을 가질 수 있다. 천천히 조금씩 주입해보자.&lt;/h4&gt;
&lt;h3 id=&quot;적절한-도구-선택&quot;&gt;적절한 도구 선택&lt;/h3&gt;
&lt;h4 id=&quot;조직의-문화를-바꾸거나-개선하기-위해서는-많은-비용을-요구한다-특히-마음-의식에도-관성의-법칙이-있다-기존-일하는-방식에-나도-모르게-젖어있다-도구가-애자일-문화를-조금씩-주입하는데-도움이-된다&quot;&gt;조직의 문화를 바꾸거나 개선하기 위해서는 많은 비용을 요구한다. 특히 마음, 의식에도 관성의 법칙이 있다. 기존 일하는 방식에 나도 모르게 젖어있다. 도구가 애자일 문화를 조금씩 주입하는데 도움이 된다.&lt;/h4&gt;
&lt;h4 id=&quot;애자일의-의한-애자일에-위해-만들어진-도구가-있다-jira-software&quot;&gt;애자일의 의한, 애자일에 위해 만들어진 도구가 있다. &lt;strong&gt;JIRA Software&lt;/strong&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;이름이 어색하다.. 개발팀이 고질라 영화를 좋아해서 코드네임에서 비롯됐다고 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;jira-software는-소프트웨어-팀-인사-법무-등-모든-팀에게-좋은-도구가-될-수-있다-애자일-방법론을-구현하기도-하지만-다양한-업무-프로세스를-시각화-리포팅-분석을-도와준다-cloud와-self-hosting가-있다-기능과-ui가-다소-차이가-있으며-옵션에-따라서-선택하면-된다&quot;&gt;JIRA Software는 소프트웨어 팀, 인사, 법무 등 모든 팀에게 좋은 도구가 될 수 있다. 애자일 방법론을 구현하기도 하지만 다양한 업무 프로세스를 시각화, 리포팅, 분석을 도와준다. Cloud와 Self-hosting가 있다. 기능과 UI가 다소 차이가 있으며 옵션에 따라서 선택하면 된다.&lt;/h4&gt;
&lt;p&gt;Link: https://ko.atlassian.com/software/jira&lt;/p&gt;

&lt;h3 id=&quot;jira로-to-do-list-작성하기&quot;&gt;JIRA로 To-Do List 작성하기&lt;/h3&gt;
&lt;h4 id=&quot;jira를-처음-시작하면-프로젝트를-생성한다-프로젝트가-생성되면서-보드가-같이-생성된다-보드는-프로젝트의-이슈를-카드-형식으로-보여주고-카드를-이동할-수-있다-카드의-이동은-사전에-정의해-놓은-workflow-life-cycle을-따른다&quot;&gt;JIRA를 처음 시작하면 프로젝트를 생성한다. 프로젝트가 생성되면서 보드가 같이 생성된다. 보드는 프로젝트의 이슈를 카드 형식으로 보여주고 카드를 이동할 수 있다. 카드의 이동은 사전에 정의해 놓은 Workflow life cycle을 따른다.&lt;/h4&gt;
&lt;h4 id=&quot;보드는-하나의-프로젝트-또는-필터-결과에-따라-다양하게-볼-수-있다-이제-to-do-list를-팀과-작성해-보자&quot;&gt;보드는 하나의 프로젝트 또는 필터 결과에 따라 다양하게 볼 수 있다. 이제 To-Do List를 팀과 작성해 보자.&lt;/h4&gt;
&lt;h4 id=&quot;프로젝트-생성&quot;&gt;&lt;strong&gt;프로젝트 생성&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/71/create-project.png&quot; alt=&quot;create-project&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;메뉴-project--create-project&quot;&gt;&lt;strong&gt;[메뉴] Project &amp;gt; Create Project&lt;/strong&gt;&lt;/h4&gt;
&lt;h4 id=&quot;많은-프로젝트-타입이-있다-scrum은-일정-기간을-정해-놓고-프로젝트를-진행한다-2주-단위를-많이-사용한다-kanban은-계획되지-않은-실시간-업무를-처리한다-service-request-업무를-수행하기에-적합하다-basic은-일반-소프트웨어-팀에게-적용하기-좋다-service-desk는-별도-구매이다-내외부-고객-창구-역할을-하며-slaservice-level-agreement를-측정한다-business-프로젝트들은-단순한-workflow가-제공되고-board는-별도로-만들어서-맵핑-해야한다&quot;&gt;많은 프로젝트 타입이 있다. Scrum은 일정 기간을 정해 놓고 프로젝트를 진행한다. 2주 단위를 많이 사용한다. Kanban은 계획되지 않은 실시간 업무를 처리한다. Service Request 업무를 수행하기에 적합하다. Basic은 일반 소프트웨어 팀에게 적용하기 좋다. Service Desk는 별도 구매이다. 내외부 고객 창구 역할을 하며 SLA(Service Level Agreement)를 측정한다. Business 프로젝트들은 단순한 Workflow가 제공되고 Board는 별도로 만들어서 맵핑 해야한다.&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;프로젝트는 기간, 리소스, 요구 사항을 정의한다.
Scrum, Kanban 보드가 있으며 프로젝트 수행 방법을 선택한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;kanban-software-development를-선택-to-do-in-progress-in-review-done-상태의-간단한-workflow를-확인할-수-있다-workflow는-조직-업무에-따라서-변경할-수-있다-admin-권한-필요&quot;&gt;Kanban software development를 선택. TO DO, IN PROGRESS, IN REVIEW, DONE 상태의 간단한 Workflow를 확인할 수 있다. Workflow는 조직 업무에 따라서 변경할 수 있다. (admin 권한 필요)&lt;/h4&gt;
&lt;h4 id=&quot;프로젝트-이름과-key를-설정한다-key는-프로젝트-고유의-값이며-프로젝트에서-생성되는-이슈는-key뒤에-번호가-붙게-된다-key는-24글자가-좋다-jira가-익숙해지면-key로-의사소통하는-날이-온다-장기간-팀을-괴롭히는-이슈가-있다-그런-번호는-군번처럼-잊혀지지-않는다&quot;&gt;프로젝트 이름과 Key를 설정한다. Key는 프로젝트 고유의 값이며 프로젝트에서 생성되는 이슈는 Key뒤에 번호가 붙게 된다. Key는 2~4글자가 좋다. JIRA가 익숙해지면 Key로 의사소통하는 날이 온다. (장기간 팀을 괴롭히는 이슈가 있다.. 그런 번호는 군번처럼 잊혀지지 않는다.)&lt;/h4&gt;
&lt;h4 id=&quot;이슈-생성&quot;&gt;&lt;strong&gt;이슈 생성&lt;/strong&gt;&lt;/h4&gt;
&lt;h4 id=&quot;header에-있는-create-버튼으로-이슈를-만들어보자-이슈는-요구사항이-될-수도-있고-할-일이-될-수도-있다&quot;&gt;Header에 있는 Create 버튼으로 이슈를 만들어보자. 이슈는 요구사항이 될 수도 있고, 할 일이 될 수도 있다.&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;우리는 사용자가 겪고 있는 문제점을 해결하고 더 나은 방향으로 일을 도와 수익을 창출한다. (모든 사업 분야가 그런듯..)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/71/create-issue.png&quot; alt=&quot;create-issue&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;jira에서-기본적으로-제공하는-기본-필드-값이-있다-간단하게-알아보자&quot;&gt;JIRA에서 기본적으로 제공하는 기본 필드 값이 있다. 간단하게 알아보자&lt;/h4&gt;
&lt;h4 id=&quot;issue-type-epic-story-task-bug-기본-값이-있다-epic은-이슈를-그룹화-할-때-사용한다-예를-들면-로그인을-epic으로-만든다-story는-비개발-업무를-말한다-예를-들면-로그인-협의-미팅-참석-task-bug는-처리-해야할-업무를-말한다-table-설계-idpw-로그인-기능-구현-idpw-3번-실패-시-id-찾기-기능-등등&quot;&gt;Issue Type: Epic, Story, Task, Bug 기본 값이 있다. Epic은 이슈를 그룹화 할 때 사용한다. 예를 들면 로그인을 Epic으로 만든다. Story는 비개발 업무를 말한다. 예를 들면 로그인 협의 미팅 참석. Task, Bug는 처리 해야할 업무를 말한다. Table 설계, ID/PW 로그인 기능 구현, ID/PW 3번 실패 시 ID 찾기 기능 등등.&lt;/h4&gt;
&lt;h4 id=&quot;story-task-bug는-epic에-맵핑-될-수-있다-가시화에도-도움이-되고-일정-계획-수립에도-용이하다&quot;&gt;Story, Task, Bug는 Epic에 맵핑 될 수 있다. 가시화에도 도움이 되고 일정 계획 수립에도 용이하다.&lt;/h4&gt;
&lt;h4 id=&quot;issue-type은-조직에-맞게-바꿀-수-있고-type별로-workflow를-정의할-수-있다-일단-기본-기능에-익숙해져-보자&quot;&gt;Issue Type은 조직에 맞게 바꿀 수 있고, Type별로 Workflow를 정의할 수 있다. 일단 기본 기능에 익숙해져 보자.&lt;/h4&gt;

&lt;h3 id=&quot;협업공유-문화&quot;&gt;협업(공유) 문화&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/71/jira-board.png&quot; alt=&quot;jira-board&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;생성된-이슈는-boards-메뉴의-해당-프로젝트-보드에서-확인할-수-있다-이-보드를-보면-사용자-별로-어떤-이슈를-하고-있는지-확인할-수-있다-또한-하나의-이슈를-오래-붙잡고-있으면-어떤-어려움을-겪고-있는지-확인하고-팀원에게-도움을-요청하거나-정책-이슈등을-해결-할-수-있는-시점을-빨리-찾을-수-있다&quot;&gt;생성된 이슈는 Boards 메뉴의 해당 프로젝트 보드에서 확인할 수 있다. 이 보드를 보면 사용자 별로 어떤 이슈를 하고 있는지 확인할 수 있다. 또한 하나의 이슈를 오래 붙잡고 있으면 어떤 어려움을 겪고 있는지 확인하고 팀원에게 도움을 요청하거나 정책 이슈등을 해결 할 수 있는 시점을 빨리 찾을 수 있다.&lt;/h4&gt;
&lt;h4 id=&quot;우리-팀에게-작게-jira를-적용해서-일을-공유-하고-우리의-근로를-시간으로-바라보지-말고-일work로-바라보는-눈이-생기길-바란다&quot;&gt;우리 팀에게 작게 JIRA를 적용해서 일을 공유 하고 우리의 근로를 시간으로 바라보지 말고 일(work)로 바라보는 눈이 생기길 바란다.&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;책상 앞에 앉아 있기만 하면 월급을 주는 회사, 일의 결과와 성과를 보고 월급을 주는 회사 어디에 다니고 싶은가? (제발.. 성과라고 해줘요)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;daliy-standing-meeting&quot;&gt;Daliy Standing Meeting&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/71/hands.jpg&quot; alt=&quot;hands&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;정보화-사회-융합-기술-등으로-우리의-일은-복잡도가-높아졌다-복잡도가-높아-질-수록-협업은-선택이-아닌-필수가-되었다&quot;&gt;정보화 사회, 융합 기술 등으로 우리의 일은 복잡도가 높아졌다. 복잡도가 높아 질 수록 협업은 선택이 아닌 필수가 되었다.&lt;/h4&gt;
&lt;h4 id=&quot;jira로-to-do-list가-시작-됐다면-이제는-daliy-standing-meeting을-추천한다-daliy-standing-meeting은-어제-한-일-오늘-할-일-리스크를-한-사람당-5분을-넘지-않고-중간에-말을-자르거나-끼어들지-않는다-짧게-하기-위해서-standing-미팅으로-하는데-선택에-따라서-앉아서-진행-하기도-한다-어제-일과-오늘-일을-어딘가에-정리가-되-있어야-데일리-미팅을-할-수-있다-모두-5분-이하로-공유하고-마지막에는-전체-공유-사항을-이야기한다&quot;&gt;JIRA로 TO Do List가 시작 됐다면 이제는 Daliy Standing Meeting을 추천한다. Daliy Standing Meeting은 어제 한 일, 오늘 할 일, 리스크를 한 사람당 5분을 넘지 않고 중간에 말을 자르거나 끼어들지 않는다. 짧게 하기 위해서 Standing 미팅으로 하는데 선택에 따라서 앉아서 진행 하기도 한다. 어제 일과 오늘 일을 어딘가에 정리가 되 있어야 데일리 미팅을 할 수 있다. 모두 5분 이하로 공유하고 마지막에는 전체 공유 사항을 이야기한다.&lt;/h4&gt;
&lt;h4 id=&quot;때로는-감정-공유도-이루어-지는데-팀원-한명이-하루-종일-뾰루퉁-하고-있으면-다른-사람들까지-생산성에-영향을-미친다-왜-뾰루퉁-한지-이야기-해주면-팀이-한결-편안해-한다&quot;&gt;때로는 감정 공유도 이루어 지는데 팀원 한명이 하루 종일 뾰루퉁 하고 있으면 다른 사람들까지 생산성에 영향을 미친다. 왜 뾰루퉁 한지 이야기 해주면 팀이 한결 편안해 한다.&lt;/h4&gt;
&lt;h4 id=&quot;매일-아침마다-미팅을-하는건-어려운-일이다-즐거운-분위기를-조성해-주고-의미있는-시간이-되기-위해-팀-리더-또는-애자일을-주입하고-싶어하는-훌륭한-리더께서-많은-노력이-필요하다&quot;&gt;매일 아침마다 미팅을 하는건 어려운 일이다. 즐거운 분위기를 조성해 주고 의미있는 시간이 되기 위해 팀 리더 또는 애자일을 주입하고 싶어하는 훌륭한 리더께서 많은 노력이 필요하다.&lt;/h4&gt;

&lt;h3 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기존 업무 환경의 한계&lt;/li&gt;
  &lt;li&gt;급변하는 비즈니스 환경에서 생존하기 위해서는&lt;/li&gt;
  &lt;li&gt;소통과 협업이 선택이 아닌 필수&lt;/li&gt;
  &lt;li&gt;애자일 방법론이 좋은 해결책이 될 수 있다.&lt;/li&gt;
  &lt;li&gt;JIRA Software를 한번 써보자.&lt;/li&gt;
  &lt;li&gt;To Do List, Daliy Staing Meeting으로 애자일을 시작을 준비 하자.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>it2seiyon</name></author><summary type="html">개요 많은 산업군에 IT 기술이 필요한 시대가 되었다. IT기술의 보유에 따라서 사업의 성공, 실패가 결정된다고 해도 과언이 아니다. 하지만 일하는 환경이나 프로세스는 사업혁명 이후로 많은 발전을 하지 못하고 있다. 공장의 근무시간은 제품의 생산률로 직결되는 단순한 구조라면, IT 기술은 많은 아이디어와 정신력을 요구한다. (.과 ,을 구분 못하여 디버깅에 어려움을 겪어봤다..) 기존 프로세스와 방법론 보다 급변하는 시장의 변화에 민첩하게 적응하는 애자일에 대해서 알아보고 팀에게 조금씩 적용 시키는 방법을 소개해 보겠다.</summary></entry><entry><title type="html">Jira Project Administration</title><link href="http://localhost:4000/2018/06/25/tistory-70.html" rel="alternate" type="text/html" title="Jira Project Administration" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-70</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-70.html">&lt;p&gt;[Jira Project Administration]이제 앞에서 열심히 설정했던 내용들을 사용해볼 시간입니다. 아이씐나이쯤되면 까먹으셨을테니 다시 캡처를 첨부해보면, 만들었던 Web Customer Support로 들어간 뒤, 하단의 Project Administration을 클릭합니다. &lt;img src=&quot;/assets/images/70/0.png&quot; alt=&quot;0.png&quot; /&gt;그리고 다시 시작된 곶통.jpg 그럼 다음과 같은 화면이 나오며 좌측에 많이 본 듯한 메뉴가 존재합니다. (Subtask Templates의 경우 플러그인이 설치되어있기에 나타난 메뉴입니다)#### Summary: 우선 Summary부터 보시면 프로젝트의 설정 요약으로써, 해당 프로젝트가 어떤 설정들을 적용받고 있는지를 보여줍니다.#### &lt;img src=&quot;/assets/images/70/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 우측의 Edit Proejct를 클릭 시, 해당 프로젝트의 이름, 키값, 프로젝트 아바타 등을 변경할 수있는 팝업창이 생성됩니다.#### &lt;img src=&quot;/assets/images/70/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 옆의 Actions를 클릭 시 앞서 설명드렸듯이 프로젝트의 Software타입과 Business타입을 변경할 수 있는 메뉴와 #### 프로젝트 삭제, 인덱싱이 가능한 메뉴가 존재합니다. #### &lt;img src=&quot;/assets/images/70/3.png&quot; alt=&quot;3.png&quot; /&gt;Issue types: 우측의 Actions를 누르면 Edit issue types과 Use a different scheme이 있는데, 여기서 Edit issue type을 누를 경우 해당 프로젝트가 적용받고 있는 Issue type scheme을 수정하도록 이동합니다. 이것이 이전 단계에서 모든 scheme들을 가능한 새로 만든 이유로써, 누군가 실수로 Default scheme을 수정할 경우 다른 모든 프로젝트도 영향을 받기 때문이죠. &lt;img src=&quot;/assets/images/70/4.png&quot; alt=&quot;4.png&quot; /&gt;#### Use a different scheme을 클릭 후 앞서 잘 만들어둔 WCS Issue Type Scheme을 선택한 뒤 OK를 눌러줍니다.#### &lt;img src=&quot;/assets/images/70/5.png&quot; alt=&quot;5.png&quot; /&gt;#### Workflows: Switch Scheme를 클릭 후 이 또한 잘 만들어둔 WCS Workflow Scheme로 바꿔줍니다.#### &lt;img src=&quot;/assets/images/70/6.png&quot; alt=&quot;6.png&quot; /&gt;Screens / Fields: Issue type과 동일한 화면이므로 생략하겠습니다. Versions: Jira 이슈에 대해 간단한 버전관리를 할 수 있는 메뉴입니다. Version이나 다음에 나올 Component의 경우 필요에따라 사용하지 않아도 무방합니다.Version을 사용하기 전에 조건이 있는데,Project Type이 Software타입인지, Kanban이나 Scrum보드를 사용 중인지,Permission scheme에Administer Projects, Manage Sprint권한이 있는지 확인이 필요합니다. 우선 본 문서에서는 다음처럼 간단히 v1, v2의 버전 두 개를 추가해보겠습니다. #### &lt;img src=&quot;/assets/images/70/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 이후, 스크린에 Fix Versions라는 필드를 추가한 뒤, 이슈를 v1에 추가해줍니다. #### 하나의 이슈에 대해 Fix version은 하나만 할당해야만 하는 점에 주의하세요. 그렇지않으면 이후 릴리즈 시 #### 이슈 갯수가 꼬여서 보이거나 기타 문제가 발생할 가능성이 있습니다.&lt;img src=&quot;/assets/images/70/8.png&quot; alt=&quot;8.png&quot; /&gt;추가 후, Project의 Releases 메뉴를 확인 시 다음처럼 v1에 이슈가 한 개 들어간 것을 확인할 수 있습니다. #### &lt;img src=&quot;/assets/images/70/0.png&quot; alt=&quot;0.png&quot; /&gt;#### v1을 클릭 시 다음처럼 릴리즈 허브가 보여지며, 우측 상단의 Release를 클릭 시 팝업이 생성됩니다.&lt;/p&gt;

&lt;h4 id=&quot;-한-개의-덜-완료된-이슈에-대해-무시하고-릴리즈할-것인지-다음버전으로-넘길-것인지를-확인하며-여기서-넘길-것을-선택하고-릴리즈-시&quot;&gt;&lt;img src=&quot;/assets/images/70/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 한 개의 덜 완료된 이슈에 대해 무시하고 릴리즈할 것인지, 다음버전으로 넘길 것인지를 확인하며 여기서 넘길 것을 선택하고 릴리즈 시,&lt;/h4&gt;

&lt;h4 id=&quot;-이렇게-v2로-해당-이슈가-넘어간-것을-확인할-수-있습니다-componenents-project와-issue사이에-논리적으로-하나의-단계를-두기-위해-사용하는-기능입니다쉽게-말해서-핸드폰-앱을-개발한다는-가정하에-앱-개발을-프로젝트로-두고component에-android와-iphone으로-구분하는-것을-생각하시면-됩니다-component또한-version과-마찬가지로-간단히-입력하여-추가가-가능하며-버전과-같은-조건은-필요하지-않습니다다음처럼-추가하시면-되며-default-assignee를-설정-시-이슈를-생성할-때-해당-component를-선택하면자동으로-해당-이슈의-assignee가-component-lead에게-할당되도록-설정할-수-있습니다-그리고-물론-이-또한-스크린에서-component필드를-추가해주어야합니다user-and-roles-권한관리를-조금-더-세분화할-때-사용하는-메뉴로-굳이-따지자면-그룹보다-한-단계-상위로-보시면됩니다물론-이-또한-반드시-사용해야하는-메뉴는-아닙니다우선-다음-화면에서-우측-상단의-edit-defaults를-눌러보시면-팝업창이-하나-생성됩니다-보시면-현재-프로젝트의-project-lead와-default-assignee를-변경할-수-있으며default-assignee를-project-lead로-설정-시담당자를-지정하지-않은-모든-이슈는-project-lead에게-할당됩니다마음에들지-않는-사람이-있다면-설정하여-메일-폭탄을-선물해보세요--그-옆의-add-users-to-role을-선택-시-다음처럼-role에-사용자나-그룹을-할당할-수-있으며-이-role은-jira-administrataion---system---project-roles에서-관리가능합니다--permissions--issue-security--notifications-앞서나온-issue-type과-설정방법이-같기에-생략합니다hipchat-integration-atlassian의-업무-sns솔루션인-hipchat과의-연동을-위한-메뉴입니다slack과의-기능상의-큰-차이는-없으나-대중성에서-밀린-비운의-툴이죠어차피-slack과의-연동-또한-플러그인으로-되므로-큰-의미는-없습니다만development-tools-atlassian의-타-솔루션인-bamboo-fisheye등과의-연동을-위한-메뉴입니다issue-collectors-jira-이슈에-대한-피드백을-받기위한-메뉴로-내부-jira계정을-이용하여-설정-시-만들어지는-html이나java-script코드를-타겟-웹사이트에-심어-피드백을-받을-수-있도록-설정하는-메뉴입니다마지막으로-위에서-적용한-설정을-검증해보도록-하겠습니다우선-task-이슈타입으로-이슈-생성-시-다음과-같이-기존-default스크린으로-많은-필드들이-보여집니다-그럼-이슈타입을-web-bug로-바꿔보면-어떨까요-보시다시피-시스템적으로-반드시-들어가는-proejct와issue-type을-제외하고-설정하였던-다섯가지의-필드만-보여지는-것을-확인할-수-있습니다필수값으로-변경하였었던-web-bug-browser-type도-잘-적용되고-있네요만들어진-이후-view-workflow를-확인-시-워크플로우-또한-새로-만든-워크플로우가-잘-적용됨을-확인할-수-있습니다-이로써-jira-설정에-대한-기본-가이드를-정리해보았습니다-이쯤되면-아시겠지만-딱히-어렵기보단-굉장히-귀찮은-작업입니다한-번-만들어두면-그-이후엔-나쁘지않으나-초기-세팅시에는-할-일이-꽤나-많죠뒤로-갈수록-재미없어지는-글을-읽으시느라-고생많으셨고-처음-jira를-접하고-관리하셔야하는-분들에게-도움이-되었으면-좋겠습니다언제가-될-지는-모르나-다음에-기회가-된다면confluence의-overview-및-설정도-작성해보도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/70/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 이렇게 v2로 해당 이슈가 넘어간 것을 확인할 수 있습니다.#### &lt;img src=&quot;/assets/images/70/3.png&quot; alt=&quot;3.png&quot; /&gt;Componenents: Project와 Issue사이에 논리적으로 하나의 단계를 두기 위해 사용하는 기능입니다. 쉽게 말해서 핸드폰 앱을 개발한다는 가정하에 앱 개발을 프로젝트로 두고, Component에 Android와 Iphone으로 구분하는 것을 생각하시면 됩니다.  Component또한 Version과 마찬가지로 간단히 입력하여 추가가 가능하며, 버전과 같은 조건은 필요하지 않습니다. 다음처럼 추가하시면 되며, Default Assignee를 설정 시 이슈를 생성할 때 해당 Component를 선택하면 자동으로 해당 이슈의 Assignee가 Component Lead에게 할당되도록 설정할 수 있습니다. #### &lt;img src=&quot;/assets/images/70/4.png&quot; alt=&quot;4.png&quot; /&gt;그리고 물론 이 또한 스크린에서 Component필드를 추가해주어야합니다.&lt;img src=&quot;/assets/images/70/5.png&quot; alt=&quot;5.png&quot; /&gt;User and roles: 권한관리를 조금 더 세분화할 때 사용하는 메뉴로,  굳이 따지자면 그룹보다 한 단계 상위로 보시면됩니다.물론 이 또한 반드시 사용해야하는 메뉴는 아닙니다. 우선 다음 화면에서 우측 상단의 Edit defaults를 눌러보시면 팝업창이 하나 생성됩니다. #### &lt;img src=&quot;/assets/images/70/6.png&quot; alt=&quot;6.png&quot; /&gt;보시면 현재 프로젝트의 Project Lead와 Default Assignee를 변경할 수 있으며, Default Assignee를 Project Lead로 설정 시 담당자를 지정하지 않은 모든 이슈는 Project Lead에게 할당됩니다. 마음에들지 않는 사람이 있다면 설정하여 메일 폭탄을 선물해보세요#### &lt;img src=&quot;/assets/images/70/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 그 옆의 Add users to role을 선택 시 다음처럼 role에 사용자나 그룹을 할당할 수 있으며, 이 role은#### Jira Administrataion - System - Project roles에서 관리가능합니다.#### &lt;img src=&quot;/assets/images/70/8.png&quot; alt=&quot;8.png&quot; /&gt;#### Permissions / Issue Security / Notifications: 앞서나온 issue type과 설정방법이 같기에 생략합니다. HipChat integration: Atlassian의 업무 SNS솔루션인 Hipchat과의 연동을 위한 메뉴입니다. Slack과의 기능상의 큰 차이는 없으나 대중성에서 밀린 비운의 툴이죠. 어차피 slack과의 연동 또한 플러그인으로 되므로 큰 의미는 없습니다만…Development tools: Atlassian의 타 솔루션인 Bamboo, Fisheye등과의 연동을 위한 메뉴입니다. Issue collectors: Jira 이슈에 대한 피드백을 받기위한 메뉴로, 내부 Jira계정을 이용하여 설정 시 만들어지는 html이나java script코드를 타겟 웹사이트에 심어 피드백을 받을 수 있도록 설정하는 메뉴입니다. 마지막으로 위에서 적용한 설정을 검증해보도록 하겠습니다. 우선 Task 이슈타입으로 이슈 생성 시, 다음과 같이 기존 Default스크린으로 많은 필드들이 보여집니다. #### &lt;img src=&quot;/assets/images/70/9.png&quot; alt=&quot;9.png&quot; /&gt;그럼 이슈타입을 Web Bug로 바꿔보면 어떨까요? 보시다시피 시스템적으로 반드시 들어가는 Proejct와Issue Type을 제외하고 설정하였던 다섯가지의 필드만 보여지는 것을 확인할 수 있습니다. 필수값으로 변경하였었던 Web Bug Browser Type도 잘 적용되고 있네요. 만들어진 이후 View Workflow를 확인 시 워크플로우 또한 새로 만든 워크플로우가 잘 적용됨을 확인할 수 있습니다. #### &lt;img src=&quot;/assets/images/70/10.png&quot; alt=&quot;10.png&quot; /&gt;이로써, Jira 설정에 대한 기본 가이드를 정리해보았습니다. 이쯤되면 아시겠지만 딱히 어렵기보단 굉장히 귀찮은 작업입니다. 한 번 만들어두면 그 이후엔 나쁘지않으나 초기 세팅시에는 할 일이 꽤나 많죠. 뒤로 갈수록 재미없어지는 글을 읽으시느라 고생많으셨고, 처음 Jira를 접하고 관리하셔야하는 분들에게 도움이 되었으면 좋겠습니다. 언제가 될 지는 모르나, 다음에 기회가 된다면 Confluence의 Overview 및 설정도 작성해보도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">[Jira Project Administration]이제 앞에서 열심히 설정했던 내용들을 사용해볼 시간입니다. 아이씐나이쯤되면 까먹으셨을테니 다시 캡처를 첨부해보면, 만들었던 Web Customer Support로 들어간 뒤, 하단의 Project Administration을 클릭합니다. 그리고 다시 시작된 곶통.jpg 그럼 다음과 같은 화면이 나오며 좌측에 많이 본 듯한 메뉴가 존재합니다. (Subtask Templates의 경우 플러그인이 설치되어있기에 나타난 메뉴입니다)#### Summary: 우선 Summary부터 보시면 프로젝트의 설정 요약으로써, 해당 프로젝트가 어떤 설정들을 적용받고 있는지를 보여줍니다.#### #### 우측의 Edit Proejct를 클릭 시, 해당 프로젝트의 이름, 키값, 프로젝트 아바타 등을 변경할 수있는 팝업창이 생성됩니다.#### #### 그리고 옆의 Actions를 클릭 시 앞서 설명드렸듯이 프로젝트의 Software타입과 Business타입을 변경할 수 있는 메뉴와 #### 프로젝트 삭제, 인덱싱이 가능한 메뉴가 존재합니다. #### Issue types: 우측의 Actions를 누르면 Edit issue types과 Use a different scheme이 있는데, 여기서 Edit issue type을 누를 경우 해당 프로젝트가 적용받고 있는 Issue type scheme을 수정하도록 이동합니다. 이것이 이전 단계에서 모든 scheme들을 가능한 새로 만든 이유로써, 누군가 실수로 Default scheme을 수정할 경우 다른 모든 프로젝트도 영향을 받기 때문이죠. #### Use a different scheme을 클릭 후 앞서 잘 만들어둔 WCS Issue Type Scheme을 선택한 뒤 OK를 눌러줍니다.#### #### Workflows: Switch Scheme를 클릭 후 이 또한 잘 만들어둔 WCS Workflow Scheme로 바꿔줍니다.#### Screens / Fields: Issue type과 동일한 화면이므로 생략하겠습니다. Versions: Jira 이슈에 대해 간단한 버전관리를 할 수 있는 메뉴입니다. Version이나 다음에 나올 Component의 경우 필요에따라 사용하지 않아도 무방합니다.Version을 사용하기 전에 조건이 있는데,Project Type이 Software타입인지, Kanban이나 Scrum보드를 사용 중인지,Permission scheme에Administer Projects, Manage Sprint권한이 있는지 확인이 필요합니다. 우선 본 문서에서는 다음처럼 간단히 v1, v2의 버전 두 개를 추가해보겠습니다. #### #### 이후, 스크린에 Fix Versions라는 필드를 추가한 뒤, 이슈를 v1에 추가해줍니다. #### 하나의 이슈에 대해 Fix version은 하나만 할당해야만 하는 점에 주의하세요. 그렇지않으면 이후 릴리즈 시 #### 이슈 갯수가 꼬여서 보이거나 기타 문제가 발생할 가능성이 있습니다.추가 후, Project의 Releases 메뉴를 확인 시 다음처럼 v1에 이슈가 한 개 들어간 것을 확인할 수 있습니다. #### #### v1을 클릭 시 다음처럼 릴리즈 허브가 보여지며, 우측 상단의 Release를 클릭 시 팝업이 생성됩니다.</summary></entry><entry><title type="html">Jira 설정_9(Schemes)</title><link href="http://localhost:4000/2018/06/25/tistory-69.html" rel="alternate" type="text/html" title="Jira 설정_9(Schemes)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-69</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-69.html">&lt;h4 id=&quot;드디어-마지막인-scheme부분입니다-앞서-나왔던-field-scheme이라던가-screen-scheme들도-있기에-조금-더-정확히-쓰자면-issue-security-permission-notification-scheme입니다만-제목으론-조금-길어서-scheme으로-적었습니다-그럼-issue탭-설정의-마지막을-적어보겠습니다issue-security-schemes-생성된-이슈들에-대해서-볼-수-있는-권한을-설정하는-메뉴입니다일반적으로-많이-사용하는-메뉴는-아니지만-설명은-하고-넘어가야겠죠우선-add-issue-security-scheme를-클릭하여-다음처럼-test-issue-security-scheme을-생성합니다--그리고-우측의-security-levels를-클릭-후-다음처럼-test-a와-test-b레벨을-만들어줍니다--그리고-우측의-add를-클릭하여-해당-레벨에-포함될-사용자-그룹-role을-설정합니다위와-같이-설정이-완료되었다면-앞서-time-tracking과-linked-issue를-추가하였듯이스크린에-security-level필드를-추가하여-레벨을-설정합니다이후-해당-이슈는-이슈레벨에-맞는-사용자에게만-보여지게됩니다만약-해당-기능이-잘-동작하지-않는다면-이후-설명드릴-permission-schemes의-set-issue-security부분을-확인해보세요notificaiton-schemes-이름에서도-감이오듯이-메일-설정에-관련된-부분입니다정확하게는-메일-서버가-구성되어있다는-전제하에-어떤-상태일-때-메일을-발송할지를-지정하는-곳이죠기본적으론-default-notification-scheme을-사용하며-필요할-경우-add-notification-scheme을-클릭하여-각-프로젝트별로-생성합니다보통-프로젝트별로-사용자나-그룹이-다르기에따로-만들어서-사용하는-편이-좋습니다다음과-같이-새로-만들면이런-화면이-나타나며-만들어집니다-각-이벤트에-대해-우측-add를-클릭하여-사용자나-그룹-role등을-지정하면되고이벤트-자체의-추가가-필요한-경우-한참-앞에서-나왔던-jira-administration---system---events-메뉴에서-가능합니다&quot;&gt;드디어 마지막인 Scheme부분입니다. #### 앞서 나왔던 Field scheme이라던가 screen scheme들도 있기에 조금 더 정확히 쓰자면#### Issue security, Permission, Notification Scheme입니다만, 제목으론 조금 길어서 scheme으로 적었습니다. #### 그럼 Issue탭 설정의 마지막을 적어보겠습니다. Issue security schemes: 생성된 이슈들에 대해서 볼 수 있는 권한을 설정하는 메뉴입니다. 일반적으로 많이 사용하는 메뉴는 아니지만, 설명은 하고 넘어가야겠죠.우선 Add issue Security Scheme를 클릭하여 다음처럼 Test Issue Security Scheme을 생성합니다. #### &lt;img src=&quot;/assets/images/69/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 그리고 우측의 Security Levels를 클릭 후 다음처럼 Test A와 Test B레벨을 만들어줍니다.#### &lt;img src=&quot;/assets/images/69/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 우측의 Add를 클릭하여 해당 레벨에 포함될 사용자, 그룹, Role을 설정합니다. &lt;img src=&quot;/assets/images/69/3.png&quot; alt=&quot;3.png&quot; /&gt;위와 같이 설정이 완료되었다면, 앞서 Time Tracking과 Linked Issue를 추가하였듯이, 스크린에 Security Level필드를 추가하여 레벨을 설정합니다. 이후 해당 이슈는 이슈레벨에 맞는 사용자에게만 보여지게됩니다. (만약 해당 기능이 잘 동작하지 않는다면, 이후 설명드릴 Permission schemes의 Set Issue Security부분을 확인해보세요)&lt;img src=&quot;/assets/images/69/4.png&quot; alt=&quot;4.png&quot; /&gt;Notificaiton schemes: 이름에서도 감이오듯이, 메일 설정에 관련된 부분입니다. 정확하게는 메일 서버가 구성되어있다는 전제하에, 어떤 상태일 때 메일을 발송할지를 지정하는 곳이죠. 기본적으론 Default Notification Scheme을 사용하며, 필요할 경우 Add Notification Scheme을 클릭하여 각 프로젝트별로 생성합니다. 보통 프로젝트별로 사용자나 그룹이 다르기에 따로 만들어서 사용하는 편이 좋습니다. 다음과 같이 새로 만들면, &lt;img src=&quot;/assets/images/69/5.png&quot; alt=&quot;5.png&quot; /&gt;이런 화면이 나타나며 만들어집니다. 각 이벤트에 대해 우측 Add를 클릭하여 사용자나 그룹, Role등을 지정하면되고, 이벤트 자체의 추가가 필요한 경우, 한참 앞에서 나왔던 Jira Administration - System - Events 메뉴에서 가능합니다.&lt;/h4&gt;

&lt;h4 id=&quot;permission-schemes-드디어-마지막으로-권한관리-메뉴입니다-다시-한-번-상기시켜드리자면-이-메뉴는-프로젝트별로-적용되는-내용으로jira-전체에-대한-권한은jira-administration---system---global-permission에서-설정가능합니다&quot;&gt;&lt;img src=&quot;/assets/images/69/6.png&quot; alt=&quot;6.png&quot; /&gt;Permission schemes: 드디어 마지막으로 권한관리 메뉴입니다. 다시 한 번 상기시켜드리자면 이 메뉴는 프로젝트별로 적용되는 내용으로Jira 전체에 대한 권한은 Jira Administration - System - Global Permission에서 설정가능합니다.&lt;/h4&gt;

&lt;p&gt;다음처럼 빠르게 하나 만드시면,&lt;img src=&quot;/assets/images/69/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 대략 이런식으로 Notification scheme처럼 비슷한 화면이 나타나며 우측 Edit로 권한을 부여하시면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;보통-jira-software버전을-설치-시-default-permission-scheme과-default-software-permission-scheme이-나뉘어져있는데default-permission-scheme의-경우-assignable-users-권한이-jira-developers로-되어있기에가끔-business타입으로-프로젝트를-생성-시-assignee에-타-유저가-검색되지-않는-경우가-있으므로-바꿔주는-것을-권장드립니다그리고-필자는-귀찮아서-전부-없애고-하나로-통일했다고-합니다-여기까지-진행하시느라-고생많으셨으며-다음에서는-여태-설정했던-내용들을-실제-project에-적용하는-것을-진행해보겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/69/9.png&quot; alt=&quot;9.png&quot; /&gt;보통 Jira Software버전을 설치 시, Default Permission Scheme과 Default Software Permission Scheme이 나뉘어져있는데 Default Permission Scheme의 경우 Assignable Users 권한이 jira-developers로 되어있기에 가끔 Business타입으로 프로젝트를 생성 시 Assignee에 타 유저가 검색되지 않는 경우가 있으므로 바꿔주는 것을 권장드립니다.그리고 필자는 귀찮아서 전부 없애고 하나로 통일했다고 합니다#### 여기까지 진행하시느라 고생많으셨으며, 다음에서는 여태 설정했던 내용들을 #### 실제 Project에 적용하는 것을 진행해보겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">드디어 마지막인 Scheme부분입니다. #### 앞서 나왔던 Field scheme이라던가 screen scheme들도 있기에 조금 더 정확히 쓰자면#### Issue security, Permission, Notification Scheme입니다만, 제목으론 조금 길어서 scheme으로 적었습니다. #### 그럼 Issue탭 설정의 마지막을 적어보겠습니다. Issue security schemes: 생성된 이슈들에 대해서 볼 수 있는 권한을 설정하는 메뉴입니다. 일반적으로 많이 사용하는 메뉴는 아니지만, 설명은 하고 넘어가야겠죠.우선 Add issue Security Scheme를 클릭하여 다음처럼 Test Issue Security Scheme을 생성합니다. #### #### 그리고 우측의 Security Levels를 클릭 후 다음처럼 Test A와 Test B레벨을 만들어줍니다.#### #### 그리고 우측의 Add를 클릭하여 해당 레벨에 포함될 사용자, 그룹, Role을 설정합니다. 위와 같이 설정이 완료되었다면, 앞서 Time Tracking과 Linked Issue를 추가하였듯이, 스크린에 Security Level필드를 추가하여 레벨을 설정합니다. 이후 해당 이슈는 이슈레벨에 맞는 사용자에게만 보여지게됩니다. (만약 해당 기능이 잘 동작하지 않는다면, 이후 설명드릴 Permission schemes의 Set Issue Security부분을 확인해보세요)Notificaiton schemes: 이름에서도 감이오듯이, 메일 설정에 관련된 부분입니다. 정확하게는 메일 서버가 구성되어있다는 전제하에, 어떤 상태일 때 메일을 발송할지를 지정하는 곳이죠. 기본적으론 Default Notification Scheme을 사용하며, 필요할 경우 Add Notification Scheme을 클릭하여 각 프로젝트별로 생성합니다. 보통 프로젝트별로 사용자나 그룹이 다르기에 따로 만들어서 사용하는 편이 좋습니다. 다음과 같이 새로 만들면, 이런 화면이 나타나며 만들어집니다. 각 이벤트에 대해 우측 Add를 클릭하여 사용자나 그룹, Role등을 지정하면되고, 이벤트 자체의 추가가 필요한 경우, 한참 앞에서 나왔던 Jira Administration - System - Events 메뉴에서 가능합니다.</summary></entry><entry><title type="html">Jira 설정_8(Time Tracking / Resolution / Priority)</title><link href="http://localhost:4000/2018/06/25/tistory-68.html" rel="alternate" type="text/html" title="Jira 설정_8(Time Tracking / Resolution / Priority)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-68</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-68.html">&lt;p&gt;Time tracking: Jira Issue에서 Time Tracking기능을 사용할지 여부를 결정하는 메뉴입니다.만약 필드에 Time Tracking을 사용하도록 설정하였다면, 이슈를 생성 시 다음과 같이 시간을 설정할 수 있는 필드가 생기며예를 들어 3일짜리 일을 생성할 경우 3d를 입력 후 생성합니다. #### &lt;img src=&quot;/assets/images/68/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 그럼 생성된 이슈의 우측에 이렇게 3일이 표시됩니다. &lt;img src=&quot;/assets/images/68/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 시간을 기록하기 위해선 Sub-Task를 만드는 것처럼 이슈의 More에서 Log Work를 클릭하면 됩니다.  #### &lt;img src=&quot;/assets/images/68/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 그리고 하루 일했다는 가정으로 1d를 입력 후 Log를 클릭하면, #### &lt;img src=&quot;/assets/images/68/3.png&quot; alt=&quot;3.png&quot; /&gt;이렇게 시간이 계산되는 것을 볼 수 있습니다. 눈치채셨겠지만, 자동으론 안됩니다. 물론 이를 자동화해주는 플러그인도 있겠지만, 기본적으론 되지않지요… 또한 사용자가 입력하는 방식이기에 필요하면 악용하기도 쉽습니다. (1시간 일하고 10시간 일했다고 기록한다던가)따라서 이 기능은 참조하는 정도지, 이것을 업무평가의 절대적인 지표로 쓰기에는 적합하지 않습니다. 무엇보다 Jira에 익숙한 사용자조차도 이걸 입력하는 것은 굉장히 귀찮아요. &lt;img src=&quot;/assets/images/68/4.png&quot; alt=&quot;4.png&quot; /&gt;Issueu linking: Jira Issue에서 Issue linking기능을 사용할지 여부를 결정하는 메뉴입니다. 추가로 필요한 link 타입을 추가하거나 삭제할 수도 있죠. 우선 이 link가 무엇인지 설명드리자면 이슈간의 연결을 나타내는 것으로써, 해당 이슈가 다른 어떤 이슈와 연관되어있는지 혹은 다른 이슈에 의해 진행이 되지 않는지 등을 표시할 수 있습니다. 이 또한 Time Tracking처럼 Linked Issue 필드가 설정되어있을 때 이슈 생성 시 보여지게되는데 다음과 같이 is blocked by를 선택 후 이슈를 생성 시 이슈의 상세 페이지에 해당 이슈가 어떤 이슈에 의해 일이 진행되지 않는지를 표시합니다. &lt;img src=&quot;/assets/images/68/5.png&quot; alt=&quot;5.png&quot; /&gt;&lt;img src=&quot;/assets/images/68/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;#### 그리고 해당 이슈를 클릭해보면, 이렇게 해당 이슈가 다른 이슈의 진행을 막고있음을 자동으로 표시하게되죠.&lt;img src=&quot;/assets/images/68/7.png&quot; alt=&quot;7.png&quot; /&gt;#### Statuses: Jira의 스테이터스를 추가합니다. 현재 Jira에 존재하는 상태들을 보여주며 추가의 경우 앞서나왔던 워크플로우내에서 #### Status를 추가하는 것과 같은 내용이므로 넘어가겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;resolution-jira의-필드-중-시스템적으로-설정된-필드-중-하나입니다-기본적으로-jira에서는-진행-중인-일을-끝낼-때in-progress---done으로의-상태-변경-해당-필드가-포함된-스크린을-띄우도록-하는데이-때-해당-이슈가-어떤-방식으로-끝났는지를-선택하게되죠다음처럼-해당-이슈가-수정되었는지-수정되지는-않았지만-끝내야만-하는-경우라던지-중복된-이슈라던지-등을-선택하여차후-해당-이슈가-어떻게-끝났는지를-확인할-수-있게하는-필드입니다priorities-이슈의-긴급도를-설정하는-필드입니다-이-또한-resolution처럼-시스템필드이며-필요에-따라단계를-더-세분화하거나-간소화할-수-있습니다기본은-5단계이며-보통-3단계-정도로-쓰는게-수월합니다많이-만들어봐야-어차피-다들-본인-이슈는-다-highest로-만들거든요-3단계도-마찬가지긴-하지만--다음은-드디어-이-설정의-마지막인-scheme들issue-security-permission-notification에-관련하여-적어보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/68/9.PNG&quot; alt=&quot;9.PNG&quot; /&gt;Resolution: Jira의 필드 중 시스템적으로 설정된 필드 중 하나입니다. 기본적으로 Jira에서는 진행 중인 일을 끝낼 때(In Progress -&amp;gt; Done으로의 상태 변경) 해당 필드가 포함된 스크린을 띄우도록 하는데, 이 때 해당 이슈가 어떤 방식으로 끝났는지를 선택하게되죠. 다음처럼 해당 이슈가 수정되었는지, 수정되지는 않았지만 끝내야만 하는 경우라던지, 중복된 이슈라던지 등을 선택하여 차후 해당 이슈가 어떻게 끝났는지를 확인할 수 있게하는 필드입니다. &lt;img src=&quot;/assets/images/68/8.png&quot; alt=&quot;8.png&quot; /&gt;Priorities: 이슈의 긴급도를 설정하는 필드입니다. 이 또한 Resolution처럼 시스템필드이며, 필요에 따라 단계를 더 세분화하거나 간소화할 수 있습니다.기본은 5단계이며, 보통 3단계 정도로 쓰는게 수월합니다.많이 만들어봐야 어차피 다들 본인 이슈는 다 Highest로 만들거든요. 3단계도 마찬가지긴 하지만…#### &lt;img src=&quot;/assets/images/68/10.PNG&quot; alt=&quot;10.PNG&quot; /&gt;#### 다음은 드디어 이 설정의 마지막인 Scheme들(Issue Security, Permission, Notification)에 관련하여 적어보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Time tracking: Jira Issue에서 Time Tracking기능을 사용할지 여부를 결정하는 메뉴입니다.만약 필드에 Time Tracking을 사용하도록 설정하였다면, 이슈를 생성 시 다음과 같이 시간을 설정할 수 있는 필드가 생기며예를 들어 3일짜리 일을 생성할 경우 3d를 입력 후 생성합니다. #### #### 그럼 생성된 이슈의 우측에 이렇게 3일이 표시됩니다. #### 시간을 기록하기 위해선 Sub-Task를 만드는 것처럼 이슈의 More에서 Log Work를 클릭하면 됩니다.  #### #### 그리고 하루 일했다는 가정으로 1d를 입력 후 Log를 클릭하면, #### 이렇게 시간이 계산되는 것을 볼 수 있습니다. 눈치채셨겠지만, 자동으론 안됩니다. 물론 이를 자동화해주는 플러그인도 있겠지만, 기본적으론 되지않지요… 또한 사용자가 입력하는 방식이기에 필요하면 악용하기도 쉽습니다. (1시간 일하고 10시간 일했다고 기록한다던가)따라서 이 기능은 참조하는 정도지, 이것을 업무평가의 절대적인 지표로 쓰기에는 적합하지 않습니다. 무엇보다 Jira에 익숙한 사용자조차도 이걸 입력하는 것은 굉장히 귀찮아요. Issueu linking: Jira Issue에서 Issue linking기능을 사용할지 여부를 결정하는 메뉴입니다. 추가로 필요한 link 타입을 추가하거나 삭제할 수도 있죠. 우선 이 link가 무엇인지 설명드리자면 이슈간의 연결을 나타내는 것으로써, 해당 이슈가 다른 어떤 이슈와 연관되어있는지 혹은 다른 이슈에 의해 진행이 되지 않는지 등을 표시할 수 있습니다. 이 또한 Time Tracking처럼 Linked Issue 필드가 설정되어있을 때 이슈 생성 시 보여지게되는데 다음과 같이 is blocked by를 선택 후 이슈를 생성 시 이슈의 상세 페이지에 해당 이슈가 어떤 이슈에 의해 일이 진행되지 않는지를 표시합니다. #### 그리고 해당 이슈를 클릭해보면, 이렇게 해당 이슈가 다른 이슈의 진행을 막고있음을 자동으로 표시하게되죠.#### Statuses: Jira의 스테이터스를 추가합니다. 현재 Jira에 존재하는 상태들을 보여주며 추가의 경우 앞서나왔던 워크플로우내에서 #### Status를 추가하는 것과 같은 내용이므로 넘어가겠습니다.</summary></entry><entry><title type="html">Jira 설정_7(Field)</title><link href="http://localhost:4000/2018/06/25/tistory-67.html" rel="alternate" type="text/html" title="Jira 설정_7(Field)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-67</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-67.html">&lt;p&gt;Custom fields: 커스텀 필드를 클릭 시 현재 Jira에서 사용 중인 수정가능한 모든 필드들을 보여줍니다. 보시면 대충 아시겠지만 커스텀필드는 스크린에서 보여지는 필드들이며, 필요한 필드가 있을 경우 추가가 가능합니다. 필드 중엔 Locked로 잠겨있는 것들이 존재하는데 이는 시스템이나 플러그인에서 사용 중이며, 지워질 경우 Jira에 영향이 갈 만한 것들을 임의로 Jira에서 잠궈둔 것들입니다. 삭제하려면 시스템적으로 수정하여야하며 Locked 상태로 두어도 괜찮으니 무시하셔도 좋습니다. 그럼 여기선 다소 억지스럽지만 Web Bug 브라우저를 고를 Web Bug Browser Type 필드를 만들어보죠.우측 상단의 Add Cutom Field를 클릭 시 필드 타입을 고를 수 있는 팝업이 생성됩니다. 실제론 그냥 Text Field를 사용하여 입력받겠지만, 재미를 위해 샘플이니 Select List(multiple choices)를 선택한 뒤 Next를 눌러줍니다. #### &lt;img src=&quot;/assets/images/67/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 이름과 옵션들을 기입 후 Create로 완료합니다.&lt;/p&gt;

&lt;h4 id=&quot;-그럼-이렇게-창이-하나-뜨게-되는데-지금-만든-필드를-기존의-스크린에-추가할지-여부를-묻는-것으로-web-bug-default-screen에-추가해줍니다&quot;&gt;&lt;img src=&quot;/assets/images/67/1.png&quot; alt=&quot;1.png&quot; /&gt;#### 그럼 이렇게 창이 하나 뜨게 되는데, 지금 만든 필드를 기존의 스크린에 추가할지 여부를 묻는 것으로,#### Web Bug Default Screen에 추가해줍니다.&lt;/h4&gt;

&lt;h4 id=&quot;-만약-브라우저-타입에-새로운-것을-추가하고-싶을-경우-다음처럼-우측-톱니바퀴모양을-클릭-후-configure를-통해-변경해주시면-됩니다-field-configuration-현재-있는-필드들을-어떤-필드를-사용할지-고를-수-있는-메뉴입니다-스크린에서-보여지는-필드들은-이-필드-설정을-기반으로하므로-이-필드설정에서-숨기거나-필수값을-설정할-경우-스크린에도-그대로-반영됩니다여기까지-읽어오셨다면-이제-익숙하시겠죠-add-field-configuration을-눌러준-뒤-새로-만들어줍니다필요할-경우-각각의-필드에-대해-전부-설정해주시면-됩니다만-이전과-같이-귀찮으므로-생략하고web-bug-browser-type의-값을-필수값으로-변경하는-것만-적용해보겠습니다다음-그림과-같이-web-bug-brower-type에서-required를-눌러주면-적용되며-글자가-optional로-변경됩니다상태는-둘-중-하나이므로-현재-optional일-경우-실제론-required가-적용되고-있다는-의미죠--field-configuration-schemes-앞서-만든-field-configuration을-적용하기-위해-scheme을-만듭니다-굳이-캡처를-계속-하는-이유는-이름을-정하는데-있어서-가능한-명시적으로-표시하도록-가이드하기-위함이므로-실제-사용-시-귀찮더라도-잘-적어주시는-편이-좋습니다-그럼-또-익숙한-어디선가-본-듯한-화면이-나옵니다--스크린때처럼-associate-an-issue-type-with-a-field-configuration을-클릭-후-web-bug-타입에-대해-해당-필드설정을-사용하도록-설정한-뒤-add를-클릭합니다-이로써-필드설정까지-완료되었으며-다음에는-time-tracking부터-priority까지-적도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/67/2.png&quot; alt=&quot;2.png&quot; /&gt;#### 만약, 브라우저 타입에 새로운 것을 추가하고 싶을 경우 다음처럼 우측 톱니바퀴모양을 클릭 후 Configure를 통해 변경해주시면 됩니다.&lt;img src=&quot;/assets/images/67/3.png&quot; alt=&quot;3.png&quot; /&gt;#### Field configuration: 현재 있는 필드들을 어떤 필드를 사용할지 고를 수 있는 메뉴입니다. #### 스크린에서 보여지는 필드들은 이 필드 설정을 기반으로하므로, 이 필드설정에서 숨기거나 필수값을 설정할 경우 #### 스크린에도 그대로 반영됩니다. 여기까지 읽어오셨다면 이제 익숙하시겠죠? Add Field Configuration을 눌러준 뒤 새로 만들어줍니다. &lt;img src=&quot;/assets/images/67/4.png&quot; alt=&quot;4.png&quot; /&gt;필요할 경우 각각의 필드에 대해 전부 설정해주시면 됩니다만, 이전과 같이 귀찮으므로 생략하고 Web Bug Browser Type의 값을 필수값으로 변경하는 것만 적용해보겠습니다. 다음 그림과 같이 Web Bug Brower Type에서 Required를 눌러주면 적용되며 글자가 Optional로 변경됩니다. 상태는 둘 중 하나이므로, 현재 Optional일 경우 실제론 Required가 적용되고 있다는 의미죠. #### &lt;img src=&quot;/assets/images/67/5.png&quot; alt=&quot;5.png&quot; /&gt;#### Field configuration schemes: 앞서 만든 Field configuration을 적용하기 위해 scheme을 만듭니다. #### 굳이 캡처를 계속 하는 이유는 이름을 정하는데 있어서 가능한 명시적으로 표시하도록 가이드하기 위함이므로 #### 실제 사용 시 귀찮더라도 잘 적어주시는 편이 좋습니다.&lt;img src=&quot;/assets/images/67/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 그럼 또 익숙한 어디선가 본 듯한 화면이 나옵니다.#### &lt;img src=&quot;/assets/images/67/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 스크린때처럼 Associate an Issue Type with a Field Configuration을 클릭 후 #### Web Bug 타입에 대해 해당 필드설정을 사용하도록 설정한 뒤 Add를 클릭합니다. &lt;img src=&quot;/assets/images/67/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 이로써 필드설정까지 완료되었으며, 다음에는 Time Tracking부터 Priority까지 적도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Custom fields: 커스텀 필드를 클릭 시 현재 Jira에서 사용 중인 수정가능한 모든 필드들을 보여줍니다. 보시면 대충 아시겠지만 커스텀필드는 스크린에서 보여지는 필드들이며, 필요한 필드가 있을 경우 추가가 가능합니다. 필드 중엔 Locked로 잠겨있는 것들이 존재하는데 이는 시스템이나 플러그인에서 사용 중이며, 지워질 경우 Jira에 영향이 갈 만한 것들을 임의로 Jira에서 잠궈둔 것들입니다. 삭제하려면 시스템적으로 수정하여야하며 Locked 상태로 두어도 괜찮으니 무시하셔도 좋습니다. 그럼 여기선 다소 억지스럽지만 Web Bug 브라우저를 고를 Web Bug Browser Type 필드를 만들어보죠.우측 상단의 Add Cutom Field를 클릭 시 필드 타입을 고를 수 있는 팝업이 생성됩니다. 실제론 그냥 Text Field를 사용하여 입력받겠지만, 재미를 위해 샘플이니 Select List(multiple choices)를 선택한 뒤 Next를 눌러줍니다. #### #### 이름과 옵션들을 기입 후 Create로 완료합니다.</summary></entry><entry><title type="html">Jira 설정_6(Screen)</title><link href="http://localhost:4000/2018/06/25/tistory-66.html" rel="alternate" type="text/html" title="Jira 설정_6(Screen)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-66</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-66.html">&lt;p&gt;Screen: 스크린을 클릭 시 뭔가 더럽게 많은 내용이 뜨는 것을 보실 수 있는데, 일단 스크린이란 말 그대로 화면입니다.  여기서 화면이란 다음처럼 이슈를 생성 시 보여지는 팝업 창 그 자체라고 생각하시면됩니다. 이 팝업창을 보시면 아시겠지만, 뭔가 필드(Summary, Due Date등)가 굉장히 많이 있는 것을 확인할 수 있으며,스크린은 해당 필드들을 화면에서 숨기거나 보여주고 싶은 필드를 설정하는 등의 설정입니다. #### &lt;img src=&quot;/assets/images/66/0.png&quot; alt=&quot;0.png&quot; /&gt;#### 앞서 해왔듯이 우측 상단의 Add Screen버튼을 클릭하여 다음과 같이 새로운 스크린을 하나 추가합니다.&lt;img src=&quot;/assets/images/66/1.png&quot; alt=&quot;1.png&quot; /&gt;그럼 아무것도 없는 화면이 나오며, 하단의 Select Field를 눌러서 다음처럼 기본적으로 필요한 몇 가지를 설정해줍니다.&lt;img src=&quot;/assets/images/66/2.png&quot; alt=&quot;2.png&quot; /&gt;Screen schemes: Scheme을 추가하기 전에 한 가지 짚고 넘어가야할 것이 있는데 Screen, Screen schemes, Issue type screen schemes의 세 가지의 관계에 대해서입니다. 앞의 이슈타입과 워크플로우와는 다르게 스크린과 이후 나올 필드의 경우 세 가지로 나뉘어있는데, 스크린은 앞에서 보신 바와 같이 팝업창 그 자체라고 보시면됩니다. 그럼 Screen schemes와 Issue type screen schemes의 차이는 무엇인가인데, Screen schemes은 해당 scheme을 사용 시 Create, Edit, View 시에 각각 어떤 스크린이 기본적으로 보여질 것인지 Issue type screen schemes은 각 이슈타입별로 어떤 Screen schemes을 사용할 것인지입니다. 차후 프로젝트설정에서는 Issue type screen schemes을 선택하게됩니다.  설명을 들을 때는 쉽지만 실제로 적용하려하면 꽤나 헷갈리는 부분이 되기에 몇 번의 연습이 필요합니다. (본인도 자주 헷갈림)백문이불여일타라고, 다음과 같이 scheme도 추가해줍니다. &lt;img src=&quot;/assets/images/66/3.png&quot; alt=&quot;3.png&quot; /&gt;그럼 다음과 같이 scheme 생성되며, 기본 스크린으로는 Web Bug Default Screen을 사용함을 알 수 있습니다. 여기서의 기본이란 해당 scheme을 사용 시 모든 보여지는 스크린을 Web Bug Default Screen으로 하겠다는 의미이며, 만약 이슈 생성, 수정, 뷰의 화면을 전부 다르게 하고싶을 경우 우측상단의 Associate an Issue Operation with a Screen을 클릭하여 다른 스크린을 할당해줍니다. 물론 본 문서에서는 귀찮으므로 생략합니다. #### &lt;img src=&quot;/assets/images/66/4.png&quot; alt=&quot;4.png&quot; /&gt;Issue tpye Screen schemes: 해당 Scheme에 대해선 앞에서 설명드렸으므로 바로 만들어봅니다. 다만, Screen Scheme을 기본을 Web Bug Screen Scheme으로 둘 경우 Web Bug타입과 다른 타입과의 비교가 되지않으므로 Default Screen Scheme을 할당해줍니다.  &lt;img src=&quot;/assets/images/66/5.png&quot; alt=&quot;5.png&quot; /&gt;그럼 이와 같은 화면이 나오며, 우린 Web Bug타입에 대해 다른 스크린을 써야하므로 우측 상단의 Associate an Issue Type with a Screen Scheme을 클릭합니다.#### &lt;img src=&quot;/assets/images/66/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 그리고 이걸 이렇게 추가하여 Add를 눌러주시면…&lt;img src=&quot;/assets/images/66/7.png&quot; alt=&quot;7.png&quot; /&gt;#### 이렇게 추가되며, Web Bug 이슈타입엔 Web Bug용 스크린을, 그 외엔 기본 Jira 스크린을 사용하도록 설정이 완료됩니다.&lt;/p&gt;

&lt;h4 id=&quot;-다음은-필드-설정에-대해-기술하도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/66/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 다음은 필드 설정에 대해 기술하도록하겠습니다. 공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Screen: 스크린을 클릭 시 뭔가 더럽게 많은 내용이 뜨는 것을 보실 수 있는데, 일단 스크린이란 말 그대로 화면입니다.  여기서 화면이란 다음처럼 이슈를 생성 시 보여지는 팝업 창 그 자체라고 생각하시면됩니다. 이 팝업창을 보시면 아시겠지만, 뭔가 필드(Summary, Due Date등)가 굉장히 많이 있는 것을 확인할 수 있으며,스크린은 해당 필드들을 화면에서 숨기거나 보여주고 싶은 필드를 설정하는 등의 설정입니다. #### #### 앞서 해왔듯이 우측 상단의 Add Screen버튼을 클릭하여 다음과 같이 새로운 스크린을 하나 추가합니다.그럼 아무것도 없는 화면이 나오며, 하단의 Select Field를 눌러서 다음처럼 기본적으로 필요한 몇 가지를 설정해줍니다.Screen schemes: Scheme을 추가하기 전에 한 가지 짚고 넘어가야할 것이 있는데 Screen, Screen schemes, Issue type screen schemes의 세 가지의 관계에 대해서입니다. 앞의 이슈타입과 워크플로우와는 다르게 스크린과 이후 나올 필드의 경우 세 가지로 나뉘어있는데, 스크린은 앞에서 보신 바와 같이 팝업창 그 자체라고 보시면됩니다. 그럼 Screen schemes와 Issue type screen schemes의 차이는 무엇인가인데, Screen schemes은 해당 scheme을 사용 시 Create, Edit, View 시에 각각 어떤 스크린이 기본적으로 보여질 것인지 Issue type screen schemes은 각 이슈타입별로 어떤 Screen schemes을 사용할 것인지입니다. 차후 프로젝트설정에서는 Issue type screen schemes을 선택하게됩니다.  설명을 들을 때는 쉽지만 실제로 적용하려하면 꽤나 헷갈리는 부분이 되기에 몇 번의 연습이 필요합니다. (본인도 자주 헷갈림)백문이불여일타라고, 다음과 같이 scheme도 추가해줍니다. 그럼 다음과 같이 scheme 생성되며, 기본 스크린으로는 Web Bug Default Screen을 사용함을 알 수 있습니다. 여기서의 기본이란 해당 scheme을 사용 시 모든 보여지는 스크린을 Web Bug Default Screen으로 하겠다는 의미이며, 만약 이슈 생성, 수정, 뷰의 화면을 전부 다르게 하고싶을 경우 우측상단의 Associate an Issue Operation with a Screen을 클릭하여 다른 스크린을 할당해줍니다. 물론 본 문서에서는 귀찮으므로 생략합니다. #### Issue tpye Screen schemes: 해당 Scheme에 대해선 앞에서 설명드렸으므로 바로 만들어봅니다. 다만, Screen Scheme을 기본을 Web Bug Screen Scheme으로 둘 경우 Web Bug타입과 다른 타입과의 비교가 되지않으므로 Default Screen Scheme을 할당해줍니다.  그럼 이와 같은 화면이 나오며, 우린 Web Bug타입에 대해 다른 스크린을 써야하므로 우측 상단의 Associate an Issue Type with a Screen Scheme을 클릭합니다.#### #### 그리고 이걸 이렇게 추가하여 Add를 눌러주시면…#### 이렇게 추가되며, Web Bug 이슈타입엔 Web Bug용 스크린을, 그 외엔 기본 Jira 스크린을 사용하도록 설정이 완료됩니다.</summary></entry><entry><title type="html">Jira 설정_5(Workflow)</title><link href="http://localhost:4000/2018/06/25/tistory-65.html" rel="alternate" type="text/html" title="Jira 설정_5(Workflow)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-65</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-65.html">&lt;p&gt;Workflow: 워크플로우는 앞에서 프로젝트 생성 시 잠깐 보셨을텐데, 일반적으로 사용하는 프로세스와 같은 의미라고 생각하시면 됩니다. 예를 들어 현실에서의 결재라인이죠. 아시다시피, 프로세스는 각 업무별로 진행되는 과정이 다릅니다. 기획팀 내부의 일을 처리하는데 개발팀의 프로세스를 탈 필요가 없는 것처럼요. 이에 따라 각 이슈타입별로 다른 워크플로우를 설정할 수 있게되어있습니다. 다음 그림과 같이, 프로젝트를 생성 시 각 프로젝트별로 기본적으로 워크플로우가 따로 생성되어지는 것을 확인할 수 있습니다. #### &lt;img src=&quot;/assets/images/65/0.png&quot; alt=&quot;0.png&quot; /&gt;보시면 현재 사용하고 있는 워크플로우, 마지막 수정일자, 할당되어있는 scheme, 워크플로우의 단계(상태레벨이 몇 개인지), 워크플로우 수정이 있습니다. View를 눌러보시면 다음과 같이 해당 워크플로우가 어떻게 동작하는지를 확인할 수 있죠. Diagram 형태로도, Text형태로도 볼 수 있으며 필요 시 잘 구성된 워크플로우를 Export하여 타 시스템에서도 써먹을 수 있습니다. #### &lt;img src=&quot;/assets/images/65/1.png&quot; alt=&quot;1.png&quot; /&gt;본제로 돌아와서, 앞서 만든 WCS(Web Customer Support)프로젝트에 새로운 워크플로우를 추가해보겠습니다. 우측 상단의 Add Workflow를 클릭 시 다음과 같은 팝업이 생성되며, 이름을 지정 후 Add를 클릭합니다. 안타깝게도 여기선 한글은 지원하지 않으므로 영어로 만드셔야하며, 차후 워크플로우가 늘어날 경우 보기에 어려워지므로 반드시 이름을 구분이 쉽도록 명확히 지정하셔야합니다. 본 문서에서는 앞에서 만든 Web Bug타입의 워크플로우를 생성할 것이므로 다음과 같이 만들어보겠습니다.&lt;img src=&quot;/assets/images/65/3.png&quot; alt=&quot;3.png&quot; /&gt;그럼 다음과 같이 아주 심플한 워크플로우가 생성됩니다.&lt;img src=&quot;/assets/images/65/4.png&quot; alt=&quot;4.png&quot; /&gt;상태가 오픈만 있으므로, Fix라는 상태를 하나 생성해봅니다. 방법은 Add status를 클릭하면되며, 기존에 존재하는 상태를 선택하거나 새로운 상태를 생성할 수 있습니다. Fixed의 경우 없었던 상태이므로 다음처럼 new status라는 내용이 나오며 엔터키로 입력 후 Add를 클릭합니다. &lt;img src=&quot;/assets/images/65/5.png&quot; alt=&quot;5.png&quot; /&gt;#### 그럼 다음과 같이 다시 팝업이 생성되며, 카테고리를 지정하도록 나옵니다. Fixed의 경우 Done으로 분류될 것이기에 #### Done으로 선택 후 Create를 눌러줍니다.안타깝지만 카테고리의 경우, 시스템에 하드코딩되어있는 부분이기에 간단히 추가는 어려우며 본 문서에서는 넘어가겠습니다. (필요 시 구글신에게 물어보세요)&lt;img src=&quot;/assets/images/65/6.png&quot; alt=&quot;6.png&quot; /&gt;#### 아무튼 만들어지면 뭔가 오른쪽에 빨간색 느낌표와 함께 워닝이 뜹니다. #### 이는 해당 스테이터스로 이동할 수 있는 연결이 없다는 의미인데 여기서 Add Transition을 눌러주셔도 되고 다음과 같이 스테이터스에 마우스를 올릴 시 나타나는 원형에서 드래그하여 타 스테이터스로 이동 시 새로운 팝업이 생성됩니다. &lt;img src=&quot;/assets/images/65/7.png&quot; alt=&quot;7.png&quot; /&gt;&lt;img src=&quot;/assets/images/65/8.png&quot; alt=&quot;8.png&quot; /&gt;#### 위처럼 어떤 상태로부터 어떤 상태로 이동할 것인지, 그리고 그 이름은 무엇이 될 것인지를 지정합니다. #### 여기선 open에서 fixed상태로 이동할 것이므로 간단히 fix라고 하겠습니다. Screen의 경우, 상태를 Open에서 Fixed로 이동할 때 특정 팝업창을 띄울 것인지 여부를 정하는 내용으로Screen은 이 다음에 설명드릴 내용으므로 여기선 기본인 None으로 설정합니다. 그럼 이렇게 Transition이 추가됩니다. &lt;img src=&quot;/assets/images/65/10.png&quot; alt=&quot;10.png&quot; /&gt;샘플 워크플로우이기도 하고 상태가 많으면 귀찮으므로 이 워크플로우를 사용하도록 하고 넘어가도록 하겠습니다. 농담도 들어있었지만 실제로 새로 Jira를 도입 시 워크플로우를 최대한 간소화하는 것은 굉장히 중요합니다. 처음에 의욕이 앞서서 많은 복잡다단한 절차를 만들어도, 실제 사용자들이 사용하기엔 어렵고 불편하기에 접근이 어렵기 때문이죠. 반드시 필요한 절차가 아닐 경우, 사용에 익숙해진 이후에 도입해도 늦지 않습니다. Workflow Schemes: 앞에서 만든 워크플로우를 써먹기 위해선 이 Scheme을 지정해야합니다. Workflow scheme도 워크플로우와 같이 프로젝트 생성 시 기본적으로 생성됩니다. 필요 시 우측 상단의 Add Workflow Scheme버튼을 눌러서 새로 생성이 가능합니다만, Workflow와 다른 점은 여러 개를 만들어봐야 실제로 사용할 것은 하나라는 점을 상기하셔야합니다. 앞에서도 설명드렸지만, 결국 Jira의 프로젝트 설정이란, 여기서 만들어진 Scheme들에 Associate되는 형태로써 한 번에 하나의 Scheme설정만 적용받기 때문이죠. 따라서 원래는 새로운 Scheme을 추가할 필요는 없지만, 그래도 처음 사용자를 위한 문서이니 한 번 추가해보겠습니다. Add Workflow Scheme버튼을 클릭 후 다음처럼 새로운 Scheme을 생성합니다. &lt;img src=&quot;/assets/images/65/11.png&quot; alt=&quot;11.png&quot; /&gt;#### 그럼 이런 화면이 나오며, 해당 워크플로우 이름이 마음에 안들 경우 수정할 수도 있습니다. 워크플로우를 추가하기 위해, Add Workflow를 클릭 후 Add Existing을 클릭해줍니다. #### &lt;img src=&quot;/assets/images/65/12.png&quot; alt=&quot;12.png&quot; /&gt;#### 여기선 앞에서 만든 Web Bug워크플로우를 선택 후, next를 눌러줍니다. #### &lt;img src=&quot;/assets/images/65/13.png&quot; alt=&quot;13.png&quot; /&gt;그리고 이 워크플로우를 적용받을 이슈타입을 선택합니다. Web Bug타입용으로 만든 워크플로우이므로 해당 타입을 선택 후 마무리합니다.&lt;img src=&quot;/assets/images/65/14.png&quot; alt=&quot;14.png&quot; /&gt;그럼 이렇게 Workflow Scheme에 워크플로우가 추가된 것을 볼 수 있습니다. 의미는 Web Bug이슈타입은 새로 추가한 워크플로우를, 그 외의 모든 이슈타입은 jira의 기본 워크플로우를 타라는 의미죠. 현재는 해당 Scheme이 어떤 프로젝트에서도 쓰이지 않기 때문에 Inactive에 분류되어있는 것을 볼 수 있으며, 프로젝트에서 해당 Scheme을 사용 시 자동으로 Active로 이동됩니다. #### &lt;img src=&quot;/assets/images/65/15.png&quot; alt=&quot;15.png&quot; /&gt;중요한 것으로 만약 사용 중인 워크플로우를 수정 시, 다음처럼 경고창이 발생하며 경고창에서 꼭 Publish를 눌러주시기 바랍니다. 그렇지 않으면 적용이 안되거든요.&lt;/p&gt;

&lt;h4 id=&quot;여기까지-workflow에-대해서-기술하였고-다음-문서에서는-screen으로-넘어가도록하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/65/16.png&quot; alt=&quot;16.png&quot; /&gt;여기까지 Workflow에 대해서 기술하였고 다음 문서에서는 Screen으로 넘어가도록하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">Workflow: 워크플로우는 앞에서 프로젝트 생성 시 잠깐 보셨을텐데, 일반적으로 사용하는 프로세스와 같은 의미라고 생각하시면 됩니다. 예를 들어 현실에서의 결재라인이죠. 아시다시피, 프로세스는 각 업무별로 진행되는 과정이 다릅니다. 기획팀 내부의 일을 처리하는데 개발팀의 프로세스를 탈 필요가 없는 것처럼요. 이에 따라 각 이슈타입별로 다른 워크플로우를 설정할 수 있게되어있습니다. 다음 그림과 같이, 프로젝트를 생성 시 각 프로젝트별로 기본적으로 워크플로우가 따로 생성되어지는 것을 확인할 수 있습니다. #### 보시면 현재 사용하고 있는 워크플로우, 마지막 수정일자, 할당되어있는 scheme, 워크플로우의 단계(상태레벨이 몇 개인지), 워크플로우 수정이 있습니다. View를 눌러보시면 다음과 같이 해당 워크플로우가 어떻게 동작하는지를 확인할 수 있죠. Diagram 형태로도, Text형태로도 볼 수 있으며 필요 시 잘 구성된 워크플로우를 Export하여 타 시스템에서도 써먹을 수 있습니다. #### 본제로 돌아와서, 앞서 만든 WCS(Web Customer Support)프로젝트에 새로운 워크플로우를 추가해보겠습니다. 우측 상단의 Add Workflow를 클릭 시 다음과 같은 팝업이 생성되며, 이름을 지정 후 Add를 클릭합니다. 안타깝게도 여기선 한글은 지원하지 않으므로 영어로 만드셔야하며, 차후 워크플로우가 늘어날 경우 보기에 어려워지므로 반드시 이름을 구분이 쉽도록 명확히 지정하셔야합니다. 본 문서에서는 앞에서 만든 Web Bug타입의 워크플로우를 생성할 것이므로 다음과 같이 만들어보겠습니다.그럼 다음과 같이 아주 심플한 워크플로우가 생성됩니다.상태가 오픈만 있으므로, Fix라는 상태를 하나 생성해봅니다. 방법은 Add status를 클릭하면되며, 기존에 존재하는 상태를 선택하거나 새로운 상태를 생성할 수 있습니다. Fixed의 경우 없었던 상태이므로 다음처럼 new status라는 내용이 나오며 엔터키로 입력 후 Add를 클릭합니다. #### 그럼 다음과 같이 다시 팝업이 생성되며, 카테고리를 지정하도록 나옵니다. Fixed의 경우 Done으로 분류될 것이기에 #### Done으로 선택 후 Create를 눌러줍니다.안타깝지만 카테고리의 경우, 시스템에 하드코딩되어있는 부분이기에 간단히 추가는 어려우며 본 문서에서는 넘어가겠습니다. (필요 시 구글신에게 물어보세요)#### 아무튼 만들어지면 뭔가 오른쪽에 빨간색 느낌표와 함께 워닝이 뜹니다. #### 이는 해당 스테이터스로 이동할 수 있는 연결이 없다는 의미인데 여기서 Add Transition을 눌러주셔도 되고 다음과 같이 스테이터스에 마우스를 올릴 시 나타나는 원형에서 드래그하여 타 스테이터스로 이동 시 새로운 팝업이 생성됩니다. #### 위처럼 어떤 상태로부터 어떤 상태로 이동할 것인지, 그리고 그 이름은 무엇이 될 것인지를 지정합니다. #### 여기선 open에서 fixed상태로 이동할 것이므로 간단히 fix라고 하겠습니다. Screen의 경우, 상태를 Open에서 Fixed로 이동할 때 특정 팝업창을 띄울 것인지 여부를 정하는 내용으로Screen은 이 다음에 설명드릴 내용으므로 여기선 기본인 None으로 설정합니다. 그럼 이렇게 Transition이 추가됩니다. 샘플 워크플로우이기도 하고 상태가 많으면 귀찮으므로 이 워크플로우를 사용하도록 하고 넘어가도록 하겠습니다. 농담도 들어있었지만 실제로 새로 Jira를 도입 시 워크플로우를 최대한 간소화하는 것은 굉장히 중요합니다. 처음에 의욕이 앞서서 많은 복잡다단한 절차를 만들어도, 실제 사용자들이 사용하기엔 어렵고 불편하기에 접근이 어렵기 때문이죠. 반드시 필요한 절차가 아닐 경우, 사용에 익숙해진 이후에 도입해도 늦지 않습니다. Workflow Schemes: 앞에서 만든 워크플로우를 써먹기 위해선 이 Scheme을 지정해야합니다. Workflow scheme도 워크플로우와 같이 프로젝트 생성 시 기본적으로 생성됩니다. 필요 시 우측 상단의 Add Workflow Scheme버튼을 눌러서 새로 생성이 가능합니다만, Workflow와 다른 점은 여러 개를 만들어봐야 실제로 사용할 것은 하나라는 점을 상기하셔야합니다. 앞에서도 설명드렸지만, 결국 Jira의 프로젝트 설정이란, 여기서 만들어진 Scheme들에 Associate되는 형태로써 한 번에 하나의 Scheme설정만 적용받기 때문이죠. 따라서 원래는 새로운 Scheme을 추가할 필요는 없지만, 그래도 처음 사용자를 위한 문서이니 한 번 추가해보겠습니다. Add Workflow Scheme버튼을 클릭 후 다음처럼 새로운 Scheme을 생성합니다. #### 그럼 이런 화면이 나오며, 해당 워크플로우 이름이 마음에 안들 경우 수정할 수도 있습니다. 워크플로우를 추가하기 위해, Add Workflow를 클릭 후 Add Existing을 클릭해줍니다. #### #### 여기선 앞에서 만든 Web Bug워크플로우를 선택 후, next를 눌러줍니다. #### 그리고 이 워크플로우를 적용받을 이슈타입을 선택합니다. Web Bug타입용으로 만든 워크플로우이므로 해당 타입을 선택 후 마무리합니다.그럼 이렇게 Workflow Scheme에 워크플로우가 추가된 것을 볼 수 있습니다. 의미는 Web Bug이슈타입은 새로 추가한 워크플로우를, 그 외의 모든 이슈타입은 jira의 기본 워크플로우를 타라는 의미죠. 현재는 해당 Scheme이 어떤 프로젝트에서도 쓰이지 않기 때문에 Inactive에 분류되어있는 것을 볼 수 있으며, 프로젝트에서 해당 Scheme을 사용 시 자동으로 Active로 이동됩니다. #### 중요한 것으로 만약 사용 중인 워크플로우를 수정 시, 다음처럼 경고창이 발생하며 경고창에서 꼭 Publish를 눌러주시기 바랍니다. 그렇지 않으면 적용이 안되거든요.</summary></entry><entry><title type="html">Jira 설정_4(Issues)</title><link href="http://localhost:4000/2018/06/25/tistory-64.html" rel="alternate" type="text/html" title="Jira 설정_4(Issues)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-64</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-64.html">&lt;p&gt;오늘은 대망의 Issues 메뉴에 대해 기술하도록 하겠습니다. 양이 많아서 여기도 좀 잘라서 써야겠네요. [Jira Administration - Issues]사실 본 문서를 작성하게 된 계기는 이 메뉴를 위함이었으나, 이 또한 먼 길을 돌아온 듯한 느낌이네요…우선 좌측 패널의 메뉴를 보는 순간,&lt;img src=&quot;/assets/images/64/0.jpg&quot; alt=&quot;0.jpg&quot; /&gt;#### 뭐 대략 이런 느낌을 받으실 겁니다. 커스터마이징이 많이 가능하다 = 복잡하다 와 같으니까요. 실제로 좀 사용하다보면 그렇게까지 엄청난 난이도는 아니지만, 처음보는 입장에서는 충분히 멘탈에 데미지를 받을 수 있을 정도의 레벨입니다. 게다가 보통 사내에서 ALM관리자를 따로 뽑아서 하는게 아니라 높으신분들께서 개발하시는 분들에게”업무 하는김에 이것도 같이 좀 해봐라”라는 느낌으로 주는 경우가 많기에 더더욱 그렇구요. 들어가기에 앞서, 앞에서 다른 많은 내용들을 진행하느라 이제서야 소개할 Issue에 대해 말씀드리자면, Jira에서의 가장 기본적인 단위라고 생각하시면됩니다. 조금 이해를 돕기 위해 Jira 헤더 메뉴에서 Create를 눌러보시면 다음과 같은 화면을 볼 수 있습니다. #### &lt;img src=&quot;/assets/images/64/1.png&quot; alt=&quot;1.png&quot; /&gt;해당 팝업창에서 보여지는 내용들이 이슈의 속성이며, 현실에서의 모든 할 일을 Jira에서는 이슈단위로 등록한다고 생각하시면 됩니다. 그렇게 만들어진 이슈들을 관리하는 것이 Jira의 의의이구요. 뭐 솔루션 소개부터가 Issue Tracking Tool이니까요. 그런 이슈가 Jira내에서 움직이는데에 있어서 필요한 설정들을 관리하는 것이 이 메뉴이며, Jira의 Issue 설정은 간단히 말하면 조립하는 것과 같습니다.크게 보았을 때 3단계 정도로 나눌 수 있는데,세세한 사항들(Issue Type, Field등)을 정의하고,해당 사항들을 Scheme이라는 단위로 묶은 뒤,각 프로젝트마다 어떤 Scheme을 사용할 것인지 지정이라고 보시면 됩니다. 그럼, Issue Type부터 시작하겠습니다. Issue types: 이슈타입은 말 그대로 유형입니다. 예를 들어, 인프라에서 어떤 문제가 발생 시 해당 문제가 어떤 유형의 문제(OS? Network? DB?)인지를 미리 지정하는 것이죠. 이 유형에 따라 해당 이슈가 어떤 상태변화(Workflow)를 가질 지, 어떤 필드(Field)들이 보여질지 등이 정해지기 때문에 중요한 속성 중 하나입니다. 아마 이 메뉴에 들어올 시 다음과 같이 Jira에서 기본적으로 제공하는 이슈타입들이 보여질텐데, 이는 Jira가 기본적으로는 개발조직을 대상으로 만들어진 솔루션이기 때문입니다. (Bug나 Improvement 등을 보면 알 수 있죠)만약 사용하시는 곳이 개발조직과는 전혀 관계없는 곳일 경우 새로운 이슈타입이 필요하며, 이 때 우측의 Add Issue Type을 클릭하여추가가 가능합니다.본 문서에서는 Web Customer Support라는 새 프로젝트를 생성한다고 가정하였으므로, 이슈타입도 Web Bug라는 이름으로 하나 만들어보겠습니다.#### &lt;img src=&quot;/assets/images/64/2.jpg&quot; alt=&quot;2.jpg&quot; /&gt;Add를 클릭 시 목록에 이슈타입이 추가된 것을 볼 수 있으며, 필요할 경우 Edit버튼을 클릭하여 아이콘을 조금 이쁘게 꾸밀 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;issue-type-schemes-그럼-앞서-만든-web-bug-타입을-사용하기위해-scheme을-하나-만들어보겠습니다우측-상단의-add-issue-type-scheme을-클릭-시-다음과-같은-화면을-볼-수-있습니다&quot;&gt;&lt;img src=&quot;/assets/images/64/3.png&quot; alt=&quot;3.png&quot; /&gt;Issue type schemes: 그럼 앞서 만든 Web Bug 타입을 사용하기위해 scheme을 하나 만들어보겠습니다. 우측 상단의 Add Issue Type Scheme을 클릭 시 다음과 같은 화면을 볼 수 있습니다.&lt;/h4&gt;

&lt;h4 id=&quot;물론-처음엔-이름도-비어있고-issue-type-for-current-scheme칸도-비어있을겁니다따라서-위와-같이-이름은-wcs-issue-type-scheme으로-이슈타입은-드래그앤-드롭으로-우측에서-좌측으로-필요한-타입을-끌어와줍니다default-issue-type의-경우-해당-프로젝트에서-이슈를-생성-시-기본적으로-선택될-이슈타입이며none으로-둘-경우-반드시-특정-이슈타입을-선택하도록합니다설정이-완료되면-하단의-save를-눌러-완료합니다-그럼-다음과-같이-새로-issue-type-scheme이-생성된-것을-확인할-수-있으며현재는-어떤-프로젝트에서도-사용하고있지-않다는-것을-알-수-있습니다-sub-tasks-우선-sub-task에-대해-설명드리자면-jira는-크게-보았을-때-이슈관리에-있어-기본적으로project---issue---sub-task의-최대-3단계로-관리가-가능합니다-sub-task에-sub-task생성불가능-sub-task는-다음-그림과-같이-일반-이슈를-생성한-뒤-해당-이슈에서-more---create-sub-task를-클릭하여-생성가능하며-이-때-나오는-화면은-일반-이슈-생성과-같습니다--그리고-생성될-경우-다음과-같이-기본-이슈에-생성된-sub-task들의-목록이-보여지게되죠&quot;&gt;&lt;img src=&quot;/assets/images/64/4.png&quot; alt=&quot;4.png&quot; /&gt;물론 처음엔 이름도 비어있고 Issue Type for Current Scheme칸도 비어있을겁니다. 따라서 위와 같이 이름은 WCS Issue Type Scheme으로, 이슈타입은 드래그앤 드롭으로 우측에서 좌측으로 필요한 타입을 끌어와줍니다. Default Issue Type의 경우 해당 프로젝트에서 이슈를 생성 시 기본적으로 선택될 이슈타입이며,None으로 둘 경우 반드시 특정 이슈타입을 선택하도록합니다. 설정이 완료되면 하단의 Save를 눌러 완료합니다. 그럼 다음과 같이 새로 Issue Type Scheme이 생성된 것을 확인할 수 있으며, 현재는 어떤 프로젝트에서도 사용하고있지 않다는 것을 알 수 있습니다. #### &lt;img src=&quot;/assets/images/64/5.png&quot; alt=&quot;5.png&quot; /&gt;Sub-tasks: 우선 Sub-task에 대해 설명드리자면, Jira는 크게 보았을 때 이슈관리에 있어 기본적으로 Project - Issue - Sub-task의 최대 3단계로 관리가 가능합니다. (Sub-task에 Sub-task생성불가능)#### Sub-task는 다음 그림과 같이 일반 이슈를 생성한 뒤, 해당 이슈에서 More - Create Sub-Task를 클릭하여 생성가능하며, #### 이 때 나오는 화면은 일반 이슈 생성과 같습니다. #### &lt;img src=&quot;/assets/images/64/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;#### 그리고 생성될 경우 다음과 같이 기본 이슈에 생성된 Sub-task들의 목록이 보여지게되죠.&lt;/h4&gt;

&lt;h4 id=&quot;다시-본론으로-돌아와서-이-메뉴는-결국-위의-sub-task생성-시-어떤-타입으로-지정할-것인지를-정하는-메뉴로써기본적으로는-sub-task라는-타입-하나만-설정되어있습니다앞서-기술하였듯이-사용방법은-여러가지나-하나의-예로써-일반적으로-it부서에-기획-디자인-개발-퍼블리싱-등이-있는데이를-위해-네-개의-sub-task타입을-부서로-지정하는-경우도-있을-수-있죠추가-방법은-우측-상단의-add-sub-task-issue-type을-클릭하면되며-간단하므로캡처는-생략하겠습니다다음-글에서는-workflow에-대해서-알아보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/64/7.jpg&quot; alt=&quot;7.jpg&quot; /&gt;다시 본론으로 돌아와서, 이 메뉴는 결국 위의 Sub-task생성 시 어떤 타입으로 지정할 것인지를 정하는 메뉴로써 기본적으로는 Sub-task라는 타입 하나만 설정되어있습니다. 앞서 기술하였듯이 사용방법은 여러가지나 하나의 예로써 일반적으로 IT부서에 기획, 디자인, 개발, 퍼블리싱 등이 있는데 이를 위해 네 개의 Sub-task타입을 부서로 지정하는 경우도 있을 수 있죠. 추가 방법은 우측 상단의 Add Sub-Task Issue Type을 클릭하면되며, 간단하므로 캡처는 생략하겠습니다. 다음 글에서는 Workflow에 대해서 알아보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">오늘은 대망의 Issues 메뉴에 대해 기술하도록 하겠습니다. 양이 많아서 여기도 좀 잘라서 써야겠네요. [Jira Administration - Issues]사실 본 문서를 작성하게 된 계기는 이 메뉴를 위함이었으나, 이 또한 먼 길을 돌아온 듯한 느낌이네요…우선 좌측 패널의 메뉴를 보는 순간,#### 뭐 대략 이런 느낌을 받으실 겁니다. 커스터마이징이 많이 가능하다 = 복잡하다 와 같으니까요. 실제로 좀 사용하다보면 그렇게까지 엄청난 난이도는 아니지만, 처음보는 입장에서는 충분히 멘탈에 데미지를 받을 수 있을 정도의 레벨입니다. 게다가 보통 사내에서 ALM관리자를 따로 뽑아서 하는게 아니라 높으신분들께서 개발하시는 분들에게”업무 하는김에 이것도 같이 좀 해봐라”라는 느낌으로 주는 경우가 많기에 더더욱 그렇구요. 들어가기에 앞서, 앞에서 다른 많은 내용들을 진행하느라 이제서야 소개할 Issue에 대해 말씀드리자면, Jira에서의 가장 기본적인 단위라고 생각하시면됩니다. 조금 이해를 돕기 위해 Jira 헤더 메뉴에서 Create를 눌러보시면 다음과 같은 화면을 볼 수 있습니다. #### 해당 팝업창에서 보여지는 내용들이 이슈의 속성이며, 현실에서의 모든 할 일을 Jira에서는 이슈단위로 등록한다고 생각하시면 됩니다. 그렇게 만들어진 이슈들을 관리하는 것이 Jira의 의의이구요. 뭐 솔루션 소개부터가 Issue Tracking Tool이니까요. 그런 이슈가 Jira내에서 움직이는데에 있어서 필요한 설정들을 관리하는 것이 이 메뉴이며, Jira의 Issue 설정은 간단히 말하면 조립하는 것과 같습니다.크게 보았을 때 3단계 정도로 나눌 수 있는데,세세한 사항들(Issue Type, Field등)을 정의하고,해당 사항들을 Scheme이라는 단위로 묶은 뒤,각 프로젝트마다 어떤 Scheme을 사용할 것인지 지정이라고 보시면 됩니다. 그럼, Issue Type부터 시작하겠습니다. Issue types: 이슈타입은 말 그대로 유형입니다. 예를 들어, 인프라에서 어떤 문제가 발생 시 해당 문제가 어떤 유형의 문제(OS? Network? DB?)인지를 미리 지정하는 것이죠. 이 유형에 따라 해당 이슈가 어떤 상태변화(Workflow)를 가질 지, 어떤 필드(Field)들이 보여질지 등이 정해지기 때문에 중요한 속성 중 하나입니다. 아마 이 메뉴에 들어올 시 다음과 같이 Jira에서 기본적으로 제공하는 이슈타입들이 보여질텐데, 이는 Jira가 기본적으로는 개발조직을 대상으로 만들어진 솔루션이기 때문입니다. (Bug나 Improvement 등을 보면 알 수 있죠)만약 사용하시는 곳이 개발조직과는 전혀 관계없는 곳일 경우 새로운 이슈타입이 필요하며, 이 때 우측의 Add Issue Type을 클릭하여추가가 가능합니다.본 문서에서는 Web Customer Support라는 새 프로젝트를 생성한다고 가정하였으므로, 이슈타입도 Web Bug라는 이름으로 하나 만들어보겠습니다.#### Add를 클릭 시 목록에 이슈타입이 추가된 것을 볼 수 있으며, 필요할 경우 Edit버튼을 클릭하여 아이콘을 조금 이쁘게 꾸밀 수 있습니다.</summary></entry><entry><title type="html">Jira 설정_3(Project / Application / Add-ons)</title><link href="http://localhost:4000/2018/06/25/tistory-63.html" rel="alternate" type="text/html" title="Jira 설정_3(Project / Application / Add-ons)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-63</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-63.html">&lt;h4 id=&quot;오늘은-주말이므로-간단하게-짤막한-세-종류만-적어보도록하겠습니다-저번에-이어-administration메뉴의-application부분부터-진행합니다jira-administration---applicationapplication을-클릭-시-다음과-같이-좌측에-메뉴들이-보이며-본-문서의-경우-vm새로-만들기가-귀찮아서사내-jira로-진행-중이기에-실제로는-메뉴가-더-적게보일-수-있습니다versions--licenses-이전-overview문서에서-잠시-다뤘었던-내용으로-해당-메뉴에서-jira-솔루션-설치-및-라이선스관리가-가능합니다주로-만료된-라이선스를-교체할-때-사용하며-license-key부분에-새-라이선스를복사하여-붙여넣는-것으로-간단히-교체가-가능합니다관리자가-나태해서-버전이-좀-낮은데-본-문서-작성-후-업그레이드할-예정입니다-application-access-jira에-로그인이-가능한-그룹을-설정하며-여기에-추가되어있지않다면-jira에-로그인이-불가능합니다또한-여기서-라이선스-사용자-수를-체크하기에-중요한-메뉴-중-하나라고-보시면-됩니다--jira-software-configuration-jira에-조금-익숙하신-분들을-위한-메뉴로-앞서-나온-scrum-board사용-시-sprint를-동시에-여러-개-진행할-수-있도록하는-옵션입니다-기본은-동시에-하나의-스프린트만-진행하도록-되어있습니다-application-link-타-atlassian-솔루션과의-연계를-위한-설정입니다-해당-솔루션이-있는-서버의-url을-입력-후-create-new-link-버튼을-클릭-시-연동이-가능하며-관리자-권한이-필요합니다-주로-confluence와-연동하여-사용하며-이는-차후에-confluence-문서에서-좀-더-자세히-다루도록-하겠습니다--application-navigator-jira-좌측-상단의모양의설정으로-단순히-링크를-추가하여-해당-링크로-이동할-수-있는-설정입니다-jira에서-자주-이동하는-사이트가-있을-경우-등록해두면-편리합니다-jira-administration---projectsjira-내의-프로젝트-관리-화면으로-메뉴가-두-개-뿐입니다-행복projects를-클릭-시-다음과-같이-생성되어있는-프로젝트의-목록이-보여지며-앞서-말씀드린대로change-project-type을-통해-business타입을-software타입으로-변경하는-등의-작업이-가능합니다--project-카테고리의-경우-단순-검색을-위해-추가하는-메뉴로써-프로젝트의-갯수가-많을-때-필요한-경우-business타입이나-software타입-외에-임의로-프로젝트를-분류하여-검색하기-쉽도록-하기위해-사용합니다-딱히-많이-사용하지는-않습니다&quot;&gt;오늘은 주말이므로, 간단하게 짤막한 세 종류만 적어보도록 하겠습니다. #### 저번에 이어 Administration메뉴의 Application부분부터 진행합니다. [Jira Administration - Application]Application을 클릭 시 다음과 같이 좌측에 메뉴들이 보이며. 본 문서의 경우 VM새로 만들기가 귀찮아서 사내 Jira로 진행 중이기에 실제로는 메뉴가 더 적게보일 수 있습니다. Versions &amp;amp; Licenses: 이전 Overview문서에서 잠시 다뤘었던 내용으로, 해당 메뉴에서 Jira 솔루션 설치 및 라이선스관리가 가능합니다. 주로 만료된 라이선스를 교체할 때 사용하며, License Key부분에 새 라이선스를 복사하여 붙여넣는 것으로 간단히 교체가 가능합니다. 관리자가 나태해서 버전이 좀 낮은데 본 문서 작성 후 업그레이드할 예정입니다. #### &lt;img src=&quot;/assets/images/63/1.png&quot; alt=&quot;1.png&quot; /&gt;Application Access: Jira에 로그인이 가능한 그룹을 설정하며, 여기에 추가되어있지않다면 Jira에 로그인이 불가능합니다. 또한 여기서 라이선스 사용자 수를 체크하기에 중요한 메뉴 중 하나라고 보시면 됩니다. #### &lt;img src=&quot;/assets/images/63/2.png&quot; alt=&quot;2.png&quot; /&gt;#### Jira Software configuration: Jira에 조금 익숙하신 분들을 위한 메뉴로, #### 앞서 나온 Scrum Board사용 시 Sprint를 동시에 여러 개 진행할 수 있도록하는 옵션입니다. #### 기본은 동시에 하나의 스프린트만 진행하도록 되어있습니다.&lt;img src=&quot;/assets/images/63/3.png&quot; alt=&quot;3.png&quot; /&gt;#### Application Link: 타 Atlassian 솔루션과의 연계를 위한 설정입니다. 해당 솔루션이 있는 서버의 URL을 입력 후, #### Create new link 버튼을 클릭 시 연동이 가능하며, 관리자 권한이 필요합니다. #### 주로 Confluence와 연동하여 사용하며, 이는 차후에 Confluence 문서에서 좀 더 자세히 다루도록 하겠습니다.#### &lt;img src=&quot;/assets/images/63/4.png&quot; alt=&quot;4.png&quot; /&gt;#### Application Navigator: Jira 좌측 상단의 모양의&lt;img src=&quot;/assets/images/63/5.png&quot; alt=&quot;5.png&quot; /&gt;설정으로, 단순히 링크를 추가하여 해당 링크로 이동할 수 있는 설정입니다. #### Jira에서 자주 이동하는 사이트가 있을 경우 등록해두면 편리합니다.#### &lt;img src=&quot;/assets/images/63/6.png&quot; alt=&quot;6.png&quot; /&gt;[Jira Administration - Projects]Jira 내의 프로젝트 관리 화면으로 메뉴가 두 개 뿐입니다. 행복Projects를 클릭 시 다음과 같이 생성되어있는 프로젝트의 목록이 보여지며, 앞서 말씀드린대로 Change project type을 통해 Business타입을 Software타입으로 변경하는 등의 작업이 가능합니다. #### &lt;img src=&quot;/assets/images/63/7.png&quot; alt=&quot;7.png&quot; /&gt;#### Project 카테고리의 경우, 단순 검색을 위해 추가하는 메뉴로써 프로젝트의 갯수가 많을 때 필요한 경우 #### Business타입이나 Software타입 외에 임의로 프로젝트를 분류하여 검색하기 쉽도록 하기위해 사용합니다. #### (딱히 많이 사용하지는 않습니다)&lt;/h4&gt;
&lt;h4 id=&quot;jira-administration---add-ons단도직입적으로-돈을-요구하는-메뉴입니다-보통-일반적으로-아시는-앱스토어-같은-것을-생각하시면-되며jira의-기본기능으로-부족한-것들을-메꿔주는-역할을-합니다물론-무료이면서도-훌륭한-플러그인들도-많이-있으나-보통-조금-쓸만하다싶으면-유료인-경우가-대부분이죠아무튼-현재-jira의-마켓플레이스에-등록된-플러그인은-3천-개를-넘어가며-당연히-어떤-플러그인이-좋은지-필요한지는각-회사-사정에-따라한-달의-무료-체험을-통해-사용하면서-알아내는-수밖에-없습니다범용적으로-workflow를-추가로-제어할-수-있는-jira-suit-utilities와-toolkit-간트차트를-만들-수-있는-biggantt같은-것들이-있으나이-또한-사내-사정에-따라-필요할-수도-없을-수도-있습니다아무튼-이-메뉴는-find-new-add-ons에서-마켓플레이스에-접속하여-필요한-플러그인을-검색하여-설치-후manage-add-ons를-통해-해당-플러그인을-설정하는-구조를-가지고-있는데-대부분의-고객사는-외부인터넷이되지-않는-환경이-많습니다이럴-경우-maketplaceatlassiancom에서-해당-플러그인을-검색-후-jar파일로-다운받아서-설치가-가능합니다-find-new-add-ons-앞에서-설명한-바와-같이-atlassian마켓플레이스에서-플러그인을-검색하여-설치합니다-admin-권한이-필요하며-외부인터넷이-되지-않는-환경이거나-사용하지-않도록-disable할-경우-사용이-불가능합니다--manage-add-ons-설치된-플러그인들의-설정을-변경하거나제거할-수-있으며-라이선스의-업데이트가-가능합니다-또한-외부-인터넷이-되지-않거나-마켓플레이스를-사용할-수-없을-때-외부에서-받은-jar파일을-업로드하여-설치가-가능합니다--다음에는-본-블로그를-작성하게-된-계기인-issue-설정에-대해-기술해보도록-하겠습니다-공감sns신고&quot;&gt;&lt;img src=&quot;/assets/images/63/8.png&quot; alt=&quot;8.png&quot; /&gt;[Jira Administration - Add-ons]단도직입적으로, 돈을 요구하는 메뉴입니다. 보통 일반적으로 아시는 앱스토어 같은 것을 생각하시면 되며, JIRA의 기본기능으로 부족한 것들을 메꿔주는 역할을 합니다. 물론 무료이면서도 훌륭한 플러그인들도 많이 있으나 보통 조금 쓸만하다싶으면 유료인 경우가 대부분이죠. 아무튼 현재 Jira의 마켓플레이스에 등록된 플러그인은 3천 개를 넘어가며, 당연히 어떤 플러그인이 좋은지, 필요한지는 각 회사 사정에 따라, 한 달의 무료 체험을 통해 사용하면서 알아내는 수밖에 없습니다. 범용적으로 Workflow를 추가로 제어할 수 있는 Jira Suit Utilities와 Toolkit, 간트차트를 만들 수 있는 Biggantt같은 것들이 있으나, 이 또한 사내 사정에 따라 필요할 수도, 없을 수도 있습니다. 아무튼 이 메뉴는 Find new add-ons에서 마켓플레이스에 접속하여 필요한 플러그인을 검색하여 설치 후, Manage add-ons를 통해 해당 플러그인을 설정하는 구조를 가지고 있는데, 대부분의 고객사는 외부인터넷이되지 않는 환경이 많습니다. 이럴 경우, maketplace.atlassian.com에서 해당 플러그인을 검색 후, jar파일로 다운받아서 설치가 가능합니다. #### Find new add-ons: 앞에서 설명한 바와 같이 Atlassian마켓플레이스에서 플러그인을 검색하여 설치합니다. #### Admin 권한이 필요하며, 외부인터넷이 되지 않는 환경이거나, 사용하지 않도록 Disable할 경우 사용이 불가능합니다. #### &lt;img src=&quot;/assets/images/63/9.jpg&quot; alt=&quot;9.jpg&quot; /&gt;#### Manage add-ons: 설치된 플러그인들의 설정을 변경하거나, 제거할 수 있으며, 라이선스의 업데이트가 가능합니다. #### 또한 외부 인터넷이 되지 않거나, 마켓플레이스를 사용할 수 없을 때 외부에서 받은 jar파일을 업로드하여 설치가 가능합니다. #### &lt;img src=&quot;/assets/images/63/10.jpg&quot; alt=&quot;10.jpg&quot; /&gt;#### 다음에는 본 블로그를 작성하게 된 계기인 Issue 설정에 대해 기술해보도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">오늘은 주말이므로, 간단하게 짤막한 세 종류만 적어보도록 하겠습니다. #### 저번에 이어 Administration메뉴의 Application부분부터 진행합니다. [Jira Administration - Application]Application을 클릭 시 다음과 같이 좌측에 메뉴들이 보이며. 본 문서의 경우 VM새로 만들기가 귀찮아서 사내 Jira로 진행 중이기에 실제로는 메뉴가 더 적게보일 수 있습니다. Versions &amp;amp; Licenses: 이전 Overview문서에서 잠시 다뤘었던 내용으로, 해당 메뉴에서 Jira 솔루션 설치 및 라이선스관리가 가능합니다. 주로 만료된 라이선스를 교체할 때 사용하며, License Key부분에 새 라이선스를 복사하여 붙여넣는 것으로 간단히 교체가 가능합니다. 관리자가 나태해서 버전이 좀 낮은데 본 문서 작성 후 업그레이드할 예정입니다. #### Application Access: Jira에 로그인이 가능한 그룹을 설정하며, 여기에 추가되어있지않다면 Jira에 로그인이 불가능합니다. 또한 여기서 라이선스 사용자 수를 체크하기에 중요한 메뉴 중 하나라고 보시면 됩니다. #### #### Jira Software configuration: Jira에 조금 익숙하신 분들을 위한 메뉴로, #### 앞서 나온 Scrum Board사용 시 Sprint를 동시에 여러 개 진행할 수 있도록하는 옵션입니다. #### 기본은 동시에 하나의 스프린트만 진행하도록 되어있습니다.#### Application Link: 타 Atlassian 솔루션과의 연계를 위한 설정입니다. 해당 솔루션이 있는 서버의 URL을 입력 후, #### Create new link 버튼을 클릭 시 연동이 가능하며, 관리자 권한이 필요합니다. #### 주로 Confluence와 연동하여 사용하며, 이는 차후에 Confluence 문서에서 좀 더 자세히 다루도록 하겠습니다.#### #### Application Navigator: Jira 좌측 상단의 모양의설정으로, 단순히 링크를 추가하여 해당 링크로 이동할 수 있는 설정입니다. #### Jira에서 자주 이동하는 사이트가 있을 경우 등록해두면 편리합니다.#### [Jira Administration - Projects]Jira 내의 프로젝트 관리 화면으로 메뉴가 두 개 뿐입니다. 행복Projects를 클릭 시 다음과 같이 생성되어있는 프로젝트의 목록이 보여지며, 앞서 말씀드린대로 Change project type을 통해 Business타입을 Software타입으로 변경하는 등의 작업이 가능합니다. #### #### Project 카테고리의 경우, 단순 검색을 위해 추가하는 메뉴로써 프로젝트의 갯수가 많을 때 필요한 경우 #### Business타입이나 Software타입 외에 임의로 프로젝트를 분류하여 검색하기 쉽도록 하기위해 사용합니다. #### (딱히 많이 사용하지는 않습니다) [Jira Administration - Add-ons]단도직입적으로, 돈을 요구하는 메뉴입니다. 보통 일반적으로 아시는 앱스토어 같은 것을 생각하시면 되며, JIRA의 기본기능으로 부족한 것들을 메꿔주는 역할을 합니다. 물론 무료이면서도 훌륭한 플러그인들도 많이 있으나 보통 조금 쓸만하다싶으면 유료인 경우가 대부분이죠. 아무튼 현재 Jira의 마켓플레이스에 등록된 플러그인은 3천 개를 넘어가며, 당연히 어떤 플러그인이 좋은지, 필요한지는 각 회사 사정에 따라, 한 달의 무료 체험을 통해 사용하면서 알아내는 수밖에 없습니다. 범용적으로 Workflow를 추가로 제어할 수 있는 Jira Suit Utilities와 Toolkit, 간트차트를 만들 수 있는 Biggantt같은 것들이 있으나, 이 또한 사내 사정에 따라 필요할 수도, 없을 수도 있습니다. 아무튼 이 메뉴는 Find new add-ons에서 마켓플레이스에 접속하여 필요한 플러그인을 검색하여 설치 후, Manage add-ons를 통해 해당 플러그인을 설정하는 구조를 가지고 있는데, 대부분의 고객사는 외부인터넷이되지 않는 환경이 많습니다. 이럴 경우, maketplace.atlassian.com에서 해당 플러그인을 검색 후, jar파일로 다운받아서 설치가 가능합니다. #### Find new add-ons: 앞에서 설명한 바와 같이 Atlassian마켓플레이스에서 플러그인을 검색하여 설치합니다. #### Admin 권한이 필요하며, 외부인터넷이 되지 않는 환경이거나, 사용하지 않도록 Disable할 경우 사용이 불가능합니다. #### #### Manage add-ons: 설치된 플러그인들의 설정을 변경하거나, 제거할 수 있으며, 라이선스의 업데이트가 가능합니다. #### 또한 외부 인터넷이 되지 않거나, 마켓플레이스를 사용할 수 없을 때 외부에서 받은 jar파일을 업로드하여 설치가 가능합니다. #### #### 다음에는 본 블로그를 작성하게 된 계기인 Issue 설정에 대해 기술해보도록 하겠습니다.  공감sns신고</summary></entry><entry><title type="html">Jira 설정_2(System Administration / User Management)</title><link href="http://localhost:4000/2018/06/25/tistory-62.html" rel="alternate" type="text/html" title="Jira 설정_2(System Administration / User Management)" /><published>2018-06-25T09:15:36+09:00</published><updated>2018-06-25T09:15:36+09:00</updated><id>http://localhost:4000/2018/06/25/tistory-62</id><content type="html" xml:base="http://localhost:4000/2018/06/25/tistory-62.html">&lt;h4 id=&quot;그럼-바로-1편에-이어-2편을-진행하겠습니다jira-administration그럼-jira-administration메뉴부터-주로-사용되는-기능들을-하나씩-살펴보도록-하죠시스템관리보다-issue의-설정-및-사용에-대한-내용이-우선필요할-경우이후에-작성될jira-administration---issues글로-이동하시면-됩니다jira-administration---system우선-중요해보이는-system부터-클릭해보죠-그럼-다음과-같이-한-번에-캡쳐도-안될만큼-휘황찬란한-메뉴가-나옵니다모든-메뉴를-설명드리면-좋겠지만-그렇게하면-이-문서를-다-작성하기전에-힘들어서-포기해버릴-것-같기에몇-가지-자주-사용하는-메뉴를-한-줄요약-정도로-대체하겠습니다-general-configuration-이름처럼-기본-설정입니다-주로-해당-jira-system의-이름변경-baseurl변경중요-인덱싱언어-변경-등에-사용됩니다-base-url의-경우-jira의-접속-시-사용하는-주소가-ip기반인지-domain기반인지에-대한-내용으로-반드시-jira에-접속-시-사용하는주소와-일치하여야합니다system-info-시스템-정보입니다-jira의-구성정보jira-버전-jdk버전-db버전-메모리설정-등를-보여줍니다logging-and-profiling-jira의-로그설정입니다-기본은-info레벨이며-문제가-생겼을-시-debug-레벨로-변경하여-트러블슈팅을-진행합니다다만-부하가-올라가므로-평소엔-info레벨로-두는-것을-권장합니다support-tools-jira의-health체크를-포함하여-support-zip-생성이-가능합니다-jira에-문제가-생겼을-경우보통-이-메뉴에서-support-zip파일을-생성하여-트러블슈팅을-진행합니다audit-log-system변경-사항을-보여줍니다-어떤-사용자가-어떤-작업유저-생성-삭제-등을-어떤-날짜에했는지-확인이-가능합니다project-roles-전-프로젝트에-적용되는-role을-설정합니다-이후-설명드리겠지만프로젝트의-기본-권한이-이-role-기반으로-되어있는-것이-몇-가지-있기에-이런-메뉴가-있다는-것을-알아둘-필요가-있습니다global-permissions-jira로그인-이후의-권한을-설정합니다-가장-중요한-권한은-jira-system-administrators와jira-administrators로system-administrators는-jira의-모든-권한을-가지고-있습니다그-다음으로는-administrators로system-administrators에서-jira-backup과-restore를-포함한-몇-가지의-기능을-제외하고-가지고-있죠system-dashboard-처음-로그인-시-반겨주는-화면을-수정할-수-있습니다따로-개인의-dashboard를-만들지-않는-한-기본적으로-보여주는-화면이기에-공지사항정도로-수정하여-사용도-가능합니다look-and-feel-높으신-분들의-취향에-맞추어-jira의-기본-헤더-색상이나-로고-등의-변경이-가능합니다그-외에-날짜나-시간의-표시를-한국식으로-변경이-가능합니다announcement-banner-공지사항을-띄웁니다-거창한-알림이나-이런-것은-아니며-간단한-텍스트-한-줄-정도를헤더메뉴-바로-아래에-생성합니다backup-system-jira-자체를-백업합니다-백업파일은-서버의-지정된-위치에-생성되며-해당-파일은-첨부파일이미지-동영상-등을포함하지-않으므로-반드시-데이터-디렉토리를-따로-백업해야합니다-installation문서-참조보통-해당-파일들을-내려받은-뒤-rsync등으로-백업서버로-백업하는-방법을-사용합니다restore-system-jira를-복구합니다-backup메뉴로-받은-xml파일을-서버의-지정된-위치로-이동한-뒤-restore버튼을-클릭하여-복구합니다project-import-jira의-특정-project만-import합니다-다만-이동하려는-곳의-jira에import하려는-프로젝트의-이슈타입-필드등이-전부-있어야하므로-많이-귀찮은-경우가-발생할-수-있습니다external-system-import-다른-솔루션remine-bugzila등으로부터-정보를-import합니다global-mail-settings-외부-email-계정등으로부터-메일을-가져와서-db에-쌓을-수-있도록-허용합니다outgoing-mail-jira에서-메일을-발송할-수-있도록-설정합니다-내부에-smtp서버가-있다면-해당-서버를-사용하여도-되며그렇지-않을-경우-gamil같은-외부메일을-통해-발송할-수-있도록-설정가능합니다incoming-mail-외부메일로부터-jira-이슈를-생성할-수-있도록-설정합니다-어떤-메일주소로부터-가져올-것인지가져온-내용을-어떤-프로젝트에-이슈로-생성할-것인지-설정이-추가로-필요합니다indexing-db의-re-indexing이-필요한-작업을-수행했을-경우-사용합니다-일반적으로-jira에서-필요할-경우-자동으로-팝업-창을-띄워주며조금-느리지만-jira서비스를-사용하며-가능한-background방식과-빠르지만-jira사용이-불가능한-lock방식이-있습니다당연히-일반적으로는-background로-실행합니다attachments-업로드하는-첨부파일들의-저장-위치와-파일-사이즈의-제한이-가능합니다보통-기본-파일사이즈가-좀-작기에-올려서-사용하는-편입니다services-일정-주기로-수행되는-동작입니다-jira의-백업주기-등을-설정할-수-있으며기본적으로는-매일-새벽2시에-백업하도록-설정되어있습니다적기-전에는-굉장히-많아-보였는데-막상-적고나니-얼마-안되는-것-같아서-씁쓸하군요사실-atlassian은-documentation이-굉장히-잘-되어있는-편이라-위-내용들은-단순-번역-수준-정도이기에필요하신-경우documentation을-참조하시는-편이-좋습니다그럼-다음으로-jira-administration의-user-management-메뉴로-넘어가보겠습니다jira-administration---user-management메뉴가-적기에-너무-텍스트만-있으면-지겨우므로-캡쳐를-좀-넣어가면서-진행해보죠users-사용자를-추가-관리합니다-방식에는-사용자-메일로-초대를-보내는-invite-users방식과관리자가-직접-생성하는-create-user방식이-있습니다버튼을-눌러보면-굉장히-직관적이기에-추가설명없이-group으로-넘어가겠습니다-groups-그룹을-추가-관리합니다-이-또한직관적이기에-추가설명없이-jira-user-server로-넘어갑니다--jira-user-server-다른-atlassian솔루션confluence-등에서-jira의-계정-정보를-사용할-수-있도록-설정합니다add-application을-클릭-시-다음과-같은-화면이-출력되는데-여기서-applicatioin-name이나-password는타-솔루션에서-jira에-접속할-정보이며-임의로-작성하면-됩니다만약-해당-솔루션이-jira와-같은-서버가-아닌-다른-서버에-존재할-경우-해당-서버의-ip를-ip-addresses에-추가해줍니다-user-directories-타-솔루션으로부터-계정정보를-가져오도록-설정합니다-기본적으로는-jira-internal-디렉토리를-사용하지만-필요할-경우-기존에-구성된-ldap이나-ad등으로부터-계정-정보를-가져올-수-있습니다-다음-그림과-같이-add-directory를-클릭하여-추가가-가능하며-본-문서에서는-간단히-atlassian-타입으로-생성해보겠습니다-위에서-atlassian-jira선택-시-다음과-같이-추가-설정이-나오며-여기서-name은-임의의-디렉토리명으로-생성하면되고server-url은-받아올-주소-application-name과-password는-위의jira-user-server-메뉴에서-설정했던-이름으로-입력합니다server-permission의-경우-일반적으로-default인-read-only로-설정하며synchronisation-interval로-해당-정보를-얼마만큼의-주기로-가져올-것인지-설정합니다test-settings-버튼을-클릭-시-녹색-팝업창으로-성공이-뜨면-save-and-test로-설정을-마무리합니다기본적으로-정보를-가져오는-시간이-1시간-단위이므로-차후-가져오려는-서버에서-계정정보에-변동이-있을-경우즉시-반영이-필요하면-synchronize-버튼을-클릭해줍니다--다음에는-application과-add-on-메뉴에-대해-기술하도록-하겠습니다-공감sns신고&quot;&gt;그럼 바로 1편에 이어 2편을 진행하겠습니다. [Jira Administration]그럼 Jira Administration메뉴부터 주로 사용되는 기능들을 하나씩 살펴보도록 하죠. 시스템관리보다 Issue의 설정 및 사용에 대한 내용이 우선 필요할 경우, 이후에 작성될[Jira Administration - Issues]글로 이동하시면 됩니다. [Jira Administration - System]우선 중요해보이는 System부터 클릭해보죠. 그럼 다음과 같이 한 번에 캡쳐도 안될만큼 휘황찬란한 메뉴가 나옵니다. 모든 메뉴를 설명드리면 좋겠지만, 그렇게하면 이 문서를 다 작성하기전에 힘들어서 포기해버릴 것 같기에 몇 가지 자주 사용하는 메뉴를 한 줄요약 정도로 대체하겠습니다. &lt;img src=&quot;/assets/images/62/1.png&quot; alt=&quot;1.png&quot; /&gt;#### General configuration: 이름처럼 기본 설정입니다. 주로 해당 Jira System의 이름변경, BaseURL변경(중요), #### 인덱싱언어 변경 등에 사용됩니다. Base URL의 경우 Jira의 접속 시 사용하는 주소가 IP기반인지, Domain기반인지에 대한 내용으로 #### 반드시 Jira에 접속 시 사용하는 주소와 일치하여야합니다.System Info: 시스템 정보입니다. Jira의 구성정보(Jira 버전, jdk버전, DB버전, 메모리설정 등)를 보여줍니다. Logging and Profiling: Jira의 로그설정입니다. 기본은 info레벨이며, 문제가 생겼을 시 Debug 레벨로 변경하여 트러블슈팅을 진행합니다.(다만 부하가 올라가므로 평소엔 info레벨로 두는 것을 권장합니다)Support Tools: Jira의 health체크를 포함하여 Support zip 생성이 가능합니다. Jira에 문제가 생겼을 경우, 보통 이 메뉴에서 Support zip파일을 생성하여 트러블슈팅을 진행합니다. Audit Log: System변경 사항을 보여줍니다. 어떤 사용자가 어떤 작업(유저 생성, 삭제 등)을 어떤 날짜에했는지 확인이 가능합니다. Project roles: 전 프로젝트에 적용되는 Role을 설정합니다. 이후 설명드리겠지만, 프로젝트의 기본 권한이 이 Role 기반으로 되어있는 것이 몇 가지 있기에 이런 메뉴가 있다는 것을 알아둘 필요가 있습니다. Global permissions: Jira로그인 이후의 권한을 설정합니다. 가장 중요한 권한은 Jira System Administrators와 Jira Administrators로 System Administrators는 Jira의 모든 권한을 가지고 있습니다. 그 다음으로는 Administrators로 System Administrators에서 Jira Backup과 Restore를 포함한 몇 가지의 기능을 제외하고 가지고 있죠.System dashboard: 처음 로그인 시 반겨주는 화면을 수정할 수 있습니다. 따로 개인의 Dashboard를 만들지 않는 한, 기본적으로 보여주는 화면이기에 공지사항정도로 수정하여 사용도 가능합니다. Look and feel: 높으신 분들의 취향에 맞추어 Jira의 기본 헤더 색상이나 로고 등의 변경이 가능합니다. 그 외에 날짜나 시간의 표시를 한국식으로 변경이 가능합니다. Announcement banner: 공지사항을 띄웁니다. 거창한 알림이나 이런 것은 아니며 간단한 텍스트 한 줄 정도를 헤더메뉴 바로 아래에 생성합니다. Backup system: Jira 자체를 백업합니다. 백업파일은 서버의 지정된 위치에 생성되며, 해당 파일은 첨부파일(이미지, 동영상 등)을 포함하지 않으므로, 반드시 데이터 디렉토리를 따로 백업해야합니다. (Installation문서 참조) 보통 해당 파일들을 내려받은 뒤, rsync등으로 백업서버로 백업하는 방법을 사용합니다. Restore system: Jira를 복구합니다. Backup메뉴로 받은 xml파일을 서버의 지정된 위치로 이동한 뒤, Restore버튼을 클릭하여 복구합니다. Project import: Jira의 특정 Project만 import합니다. 다만 이동하려는 곳의 Jira에import하려는 프로젝트의 이슈타입, 필드등이 전부 있어야하므로, 많이 귀찮은 경우가 발생할 수 있습니다. External System Import: 다른 솔루션(Remine, Bugzila등)으로부터 정보를 import합니다. Global Mail Settings: 외부 Email 계정등으로부터 메일을 가져와서 DB에 쌓을 수 있도록 허용합니다. Outgoing Mail: Jira에서 메일을 발송할 수 있도록 설정합니다. 내부에 smtp서버가 있다면 해당 서버를 사용하여도 되며, 그렇지 않을 경우 Gamil같은 외부메일을 통해 발송할 수 있도록 설정가능합니다. Incoming Mail: 외부메일로부터 Jira 이슈를 생성할 수 있도록 설정합니다. 어떤 메일주소로부터 가져올 것인지, 가져온 내용을 어떤 프로젝트에 이슈로 생성할 것인지 설정이 추가로 필요합니다. Indexing: DB의 Re-indexing이 필요한 작업을 수행했을 경우 사용합니다. 일반적으로 Jira에서 필요할 경우 자동으로 팝업 창을 띄워주며, 조금 느리지만 Jira서비스를 사용하며 가능한 Background방식과 빠르지만 Jira사용이 불가능한 Lock방식이 있습니다. 당연히 일반적으로는 Background로 실행합니다. Attachments: 업로드하는 첨부파일들의 저장 위치와, 파일 사이즈의 제한이 가능합니다. 보통 기본 파일사이즈가 좀 작기에, 올려서 사용하는 편입니다. Services: 일정 주기로 수행되는 동작입니다. Jira의 백업주기 등을 설정할 수 있으며, 기본적으로는 매일 새벽2시에 백업하도록 설정되어있습니다. 적기 전에는 굉장히 많아 보였는데 막상 적고나니 얼마 안되는 것 같아서 씁쓸하군요. 사실 Atlassian은 Documentation이 굉장히 잘 되어있는 편이라, 위 내용들은 단순 번역 수준 정도이기에 필요하신 경우 Documentation을 참조하시는 편이 좋습니다. 그럼 다음으로 Jira Administration의 User management 메뉴로 넘어가보겠습니다.[Jira Administration - User management]메뉴가 적기에, 너무 텍스트만 있으면 지겨우므로 캡쳐를 좀 넣어가면서 진행해보죠. Users: 사용자를 추가, 관리합니다. 방식에는 사용자 메일로 초대를 보내는 Invite users방식과 관리자가 직접 생성하는 Create user방식이 있습니다. 버튼을 눌러보면 굉장히 직관적이기에 추가설명없이 Group으로 넘어가겠습니다. #### &lt;img src=&quot;/assets/images/62/2.png&quot; alt=&quot;2.png&quot; /&gt;Groups: 그룹을 추가, 관리합니다. 이 또한 직관적이기에 추가설명없이 Jira user server로 넘어갑니다.   #### &lt;img src=&quot;/assets/images/62/3.png&quot; alt=&quot;3.png&quot; /&gt;JIRA user server: 다른 Atlassian솔루션(Confluence 등)에서 Jira의 계정 정보를 사용할 수 있도록 설정합니다. Add application을 클릭 시 다음과 같은 화면이 출력되는데 여기서 Applicatioin name이나 Password는 타 솔루션에서 Jira에 접속할 정보이며, 임의로 작성하면 됩니다. 만약 해당 솔루션이 Jira와 같은 서버가 아닌 다른 서버에 존재할 경우, 해당 서버의 IP를 IP Addresses에 추가해줍니다. &lt;img src=&quot;/assets/images/62/4.png&quot; alt=&quot;4.png&quot; /&gt;#### User Directories: 타 솔루션으로부터 계정정보를 가져오도록 설정합니다. #### 기본적으로는 Jira internal 디렉토리를 사용하지만, 필요할 경우 기존에 구성된 LDAP이나 AD등으로부터 #### 계정 정보를 가져올 수 있습니다.#### 다음 그림과 같이 Add Directory를 클릭하여 추가가 가능하며, 본 문서에서는 간단히 Atlassian 타입으로 생성해보겠습니다. #### &lt;img src=&quot;/assets/images/62/5.png&quot; alt=&quot;5.png&quot; /&gt;위에서 Atlassian JIRA선택 시 다음과 같이 추가 설정이 나오며 여기서 Name은 임의의 디렉토리명으로 생성하면되고, Server URL은 받아올 주소, Application Name과 Password는 위의 JIRA user server 메뉴에서 설정했던 이름으로 입력합니다. Server Permission의 경우 일반적으로 Default인 Read Only로 설정하며, Synchronisation Interval로 해당 정보를 얼마만큼의 주기로 가져올 것인지 설정합니다.Test Settings 버튼을 클릭 시 녹색 팝업창으로 성공이 뜨면 Save and Test로 설정을 마무리합니다. 기본적으로 정보를 가져오는 시간이 1시간 단위이므로, 차후 가져오려는 서버에서 계정정보에 변동이 있을 경우, 즉시 반영이 필요하면 synchronize 버튼을 클릭해줍니다. #### &lt;img src=&quot;/assets/images/62/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;#### 다음에는 Application과 Add-on 메뉴에 대해 기술하도록 하겠습니다.  공감sns신고&lt;/h4&gt;</content><author><name>OpenSourceConsulting</name></author><summary type="html">그럼 바로 1편에 이어 2편을 진행하겠습니다. [Jira Administration]그럼 Jira Administration메뉴부터 주로 사용되는 기능들을 하나씩 살펴보도록 하죠. 시스템관리보다 Issue의 설정 및 사용에 대한 내용이 우선 필요할 경우, 이후에 작성될[Jira Administration - Issues]글로 이동하시면 됩니다. [Jira Administration - System]우선 중요해보이는 System부터 클릭해보죠. 그럼 다음과 같이 한 번에 캡쳐도 안될만큼 휘황찬란한 메뉴가 나옵니다. 모든 메뉴를 설명드리면 좋겠지만, 그렇게하면 이 문서를 다 작성하기전에 힘들어서 포기해버릴 것 같기에 몇 가지 자주 사용하는 메뉴를 한 줄요약 정도로 대체하겠습니다. #### General configuration: 이름처럼 기본 설정입니다. 주로 해당 Jira System의 이름변경, BaseURL변경(중요), #### 인덱싱언어 변경 등에 사용됩니다. Base URL의 경우 Jira의 접속 시 사용하는 주소가 IP기반인지, Domain기반인지에 대한 내용으로 #### 반드시 Jira에 접속 시 사용하는 주소와 일치하여야합니다.System Info: 시스템 정보입니다. Jira의 구성정보(Jira 버전, jdk버전, DB버전, 메모리설정 등)를 보여줍니다. Logging and Profiling: Jira의 로그설정입니다. 기본은 info레벨이며, 문제가 생겼을 시 Debug 레벨로 변경하여 트러블슈팅을 진행합니다.(다만 부하가 올라가므로 평소엔 info레벨로 두는 것을 권장합니다)Support Tools: Jira의 health체크를 포함하여 Support zip 생성이 가능합니다. Jira에 문제가 생겼을 경우, 보통 이 메뉴에서 Support zip파일을 생성하여 트러블슈팅을 진행합니다. Audit Log: System변경 사항을 보여줍니다. 어떤 사용자가 어떤 작업(유저 생성, 삭제 등)을 어떤 날짜에했는지 확인이 가능합니다. Project roles: 전 프로젝트에 적용되는 Role을 설정합니다. 이후 설명드리겠지만, 프로젝트의 기본 권한이 이 Role 기반으로 되어있는 것이 몇 가지 있기에 이런 메뉴가 있다는 것을 알아둘 필요가 있습니다. Global permissions: Jira로그인 이후의 권한을 설정합니다. 가장 중요한 권한은 Jira System Administrators와 Jira Administrators로 System Administrators는 Jira의 모든 권한을 가지고 있습니다. 그 다음으로는 Administrators로 System Administrators에서 Jira Backup과 Restore를 포함한 몇 가지의 기능을 제외하고 가지고 있죠.System dashboard: 처음 로그인 시 반겨주는 화면을 수정할 수 있습니다. 따로 개인의 Dashboard를 만들지 않는 한, 기본적으로 보여주는 화면이기에 공지사항정도로 수정하여 사용도 가능합니다. Look and feel: 높으신 분들의 취향에 맞추어 Jira의 기본 헤더 색상이나 로고 등의 변경이 가능합니다. 그 외에 날짜나 시간의 표시를 한국식으로 변경이 가능합니다. Announcement banner: 공지사항을 띄웁니다. 거창한 알림이나 이런 것은 아니며 간단한 텍스트 한 줄 정도를 헤더메뉴 바로 아래에 생성합니다. Backup system: Jira 자체를 백업합니다. 백업파일은 서버의 지정된 위치에 생성되며, 해당 파일은 첨부파일(이미지, 동영상 등)을 포함하지 않으므로, 반드시 데이터 디렉토리를 따로 백업해야합니다. (Installation문서 참조) 보통 해당 파일들을 내려받은 뒤, rsync등으로 백업서버로 백업하는 방법을 사용합니다. Restore system: Jira를 복구합니다. Backup메뉴로 받은 xml파일을 서버의 지정된 위치로 이동한 뒤, Restore버튼을 클릭하여 복구합니다. Project import: Jira의 특정 Project만 import합니다. 다만 이동하려는 곳의 Jira에import하려는 프로젝트의 이슈타입, 필드등이 전부 있어야하므로, 많이 귀찮은 경우가 발생할 수 있습니다. External System Import: 다른 솔루션(Remine, Bugzila등)으로부터 정보를 import합니다. Global Mail Settings: 외부 Email 계정등으로부터 메일을 가져와서 DB에 쌓을 수 있도록 허용합니다. Outgoing Mail: Jira에서 메일을 발송할 수 있도록 설정합니다. 내부에 smtp서버가 있다면 해당 서버를 사용하여도 되며, 그렇지 않을 경우 Gamil같은 외부메일을 통해 발송할 수 있도록 설정가능합니다. Incoming Mail: 외부메일로부터 Jira 이슈를 생성할 수 있도록 설정합니다. 어떤 메일주소로부터 가져올 것인지, 가져온 내용을 어떤 프로젝트에 이슈로 생성할 것인지 설정이 추가로 필요합니다. Indexing: DB의 Re-indexing이 필요한 작업을 수행했을 경우 사용합니다. 일반적으로 Jira에서 필요할 경우 자동으로 팝업 창을 띄워주며, 조금 느리지만 Jira서비스를 사용하며 가능한 Background방식과 빠르지만 Jira사용이 불가능한 Lock방식이 있습니다. 당연히 일반적으로는 Background로 실행합니다. Attachments: 업로드하는 첨부파일들의 저장 위치와, 파일 사이즈의 제한이 가능합니다. 보통 기본 파일사이즈가 좀 작기에, 올려서 사용하는 편입니다. Services: 일정 주기로 수행되는 동작입니다. Jira의 백업주기 등을 설정할 수 있으며, 기본적으로는 매일 새벽2시에 백업하도록 설정되어있습니다. 적기 전에는 굉장히 많아 보였는데 막상 적고나니 얼마 안되는 것 같아서 씁쓸하군요. 사실 Atlassian은 Documentation이 굉장히 잘 되어있는 편이라, 위 내용들은 단순 번역 수준 정도이기에 필요하신 경우 Documentation을 참조하시는 편이 좋습니다. 그럼 다음으로 Jira Administration의 User management 메뉴로 넘어가보겠습니다.[Jira Administration - User management]메뉴가 적기에, 너무 텍스트만 있으면 지겨우므로 캡쳐를 좀 넣어가면서 진행해보죠. Users: 사용자를 추가, 관리합니다. 방식에는 사용자 메일로 초대를 보내는 Invite users방식과 관리자가 직접 생성하는 Create user방식이 있습니다. 버튼을 눌러보면 굉장히 직관적이기에 추가설명없이 Group으로 넘어가겠습니다. #### Groups: 그룹을 추가, 관리합니다. 이 또한 직관적이기에 추가설명없이 Jira user server로 넘어갑니다.   #### JIRA user server: 다른 Atlassian솔루션(Confluence 등)에서 Jira의 계정 정보를 사용할 수 있도록 설정합니다. Add application을 클릭 시 다음과 같은 화면이 출력되는데 여기서 Applicatioin name이나 Password는 타 솔루션에서 Jira에 접속할 정보이며, 임의로 작성하면 됩니다. 만약 해당 솔루션이 Jira와 같은 서버가 아닌 다른 서버에 존재할 경우, 해당 서버의 IP를 IP Addresses에 추가해줍니다. #### User Directories: 타 솔루션으로부터 계정정보를 가져오도록 설정합니다. #### 기본적으로는 Jira internal 디렉토리를 사용하지만, 필요할 경우 기존에 구성된 LDAP이나 AD등으로부터 #### 계정 정보를 가져올 수 있습니다.#### 다음 그림과 같이 Add Directory를 클릭하여 추가가 가능하며, 본 문서에서는 간단히 Atlassian 타입으로 생성해보겠습니다. #### 위에서 Atlassian JIRA선택 시 다음과 같이 추가 설정이 나오며 여기서 Name은 임의의 디렉토리명으로 생성하면되고, Server URL은 받아올 주소, Application Name과 Password는 위의 JIRA user server 메뉴에서 설정했던 이름으로 입력합니다. Server Permission의 경우 일반적으로 Default인 Read Only로 설정하며, Synchronisation Interval로 해당 정보를 얼마만큼의 주기로 가져올 것인지 설정합니다.Test Settings 버튼을 클릭 시 녹색 팝업창으로 성공이 뜨면 Save and Test로 설정을 마무리합니다. 기본적으로 정보를 가져오는 시간이 1시간 단위이므로, 차후 가져오려는 서버에서 계정정보에 변동이 있을 경우, 즉시 반영이 필요하면 synchronize 버튼을 클릭해줍니다. #### #### 다음에는 Application과 Add-on 메뉴에 대해 기술하도록 하겠습니다.  공감sns신고</summary></entry></feed>